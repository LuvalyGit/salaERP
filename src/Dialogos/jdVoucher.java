/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import Conexion.ExeSql;
import Formularios.fmMain;
import Utilidades.Ftp;
import java.awt.Color;
import java.awt.Graphics;
//import Utilidades.SubeFTP;
import java.awt.Image;
import static java.awt.SystemColor.text;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.security.Principal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Box;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.TransferHandler;

/**
 *
 * @author Cdiaz
 */
public class jdVoucher extends javax.swing.JDialog {
 Image img;
 String Tipo, Numero, Voucher, Trans;
    /**
     * Creates new form jdVoucher
     */
    public jdVoucher(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        // lo cambie a true para que se pueda copiar el archivo en el clipboard.
        jMenuItem2.setEnabled(true);

        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();

        jPopupMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jMenuItem2.setText("Copiar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 36)); // NOI18N
        jLabel1.setText("             NO HAY IMAGEN DISPONIBLE");
        jLabel1.setComponentPopupMenu(jPopupMenu1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 954, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased

    }//GEN-LAST:event_formKeyReleased

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
                if ((evt.getKeyCode() == KeyEvent.VK_V) && ((evt.getModifiers() & KeyEvent.CTRL_MASK) != 0)) {
                    System.out.println("copio");
                    Clipboard CLIPBOARD = Toolkit.getDefaultToolkit().getSystemClipboard(); 
                    String pasteString = ""; 
                     try { 
                        //pasteString = (String)(CLIPBOARD.getContents(this).getTransferData(DataFlavor.stringFlavor));
                        getImageFromClipboard();
                        ImageIcon foto =  new ImageIcon(img); 
                        jLabel1.setIcon(foto);
                        jLabel1.setText("");
                        jMenuItem2.setEnabled(true);                     
                        } catch (Exception e) { 
                        JOptionPane.showMessageDialog(null, "Archivo invalido intente nuevamente", "Error", JOptionPane.ERROR_MESSAGE);
                        return; 
                } 
                }
    }//GEN-LAST:event_formKeyPressed

    
    
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            
            Icon icon = jLabel1.getIcon();

                BufferedImage bi = new BufferedImage(
                    icon.getIconWidth(),
                    icon.getIconHeight(),
                    BufferedImage.TYPE_INT_RGB);
                Graphics g = bi.createGraphics();
                // paint the Icon to the BufferedImage.
                icon.paintIcon(null, g, 0,0);
                g.setColor(Color.WHITE);
                g.dispose();
            
            
            
             TransferableImage trans = new TransferableImage(bi);
           clipboard.setContents(trans, null);
        
//         String Mensaje="Estimado Cliente,\n\n Adjuntamos el comprobante de recepcion de su pedido \n\n Saludos";
//         String Asunto="Comprobante de recepcion";
//        
//      JTextField para = new JTextField(35);
//      JTextField concopia = new JTextField(35);
//
//      JPanel myPanel = new JPanel();
//      myPanel.add(new JLabel("Para:"));
//      myPanel.add(para);
//      myPanel.add(Box.createVerticalStrut(100)); // a spacer
//      myPanel.add(new JLabel("CC:"));
//      myPanel.add(concopia);
//
//      int result = JOptionPane.showConfirmDialog(null, myPanel, 
//               "Agregar destinatarios:", JOptionPane.OK_CANCEL_OPTION);
//      if (result == JOptionPane.OK_OPTION) {
//                
//        try {
//            Mensaje = java.net.URLEncoder.encode(Mensaje, "utf-8");
//            Mensaje = Mensaje.replace("+", "%20");
//            System.out.println(Mensaje);
//            java.awt.Desktop.getDesktop().mail(java.net.URI.create("mailto:"+para.getText()+"?cc="+concopia.getText()+"&subject=Comprobante%20de%20recepcion&body="+Mensaje+"&attachment=c:/fotos/LIT_CARGO_15716503_FAC_13724.jpg"));
//        } catch (Exception e) {
//            System.out.println(e.getMessage());
//        }
//      }

      
               
    }//GEN-LAST:event_jMenuItem2ActionPerformed


    
   public Image getImageFromClipboard()
throws Exception
{
  Transferable transferable = Toolkit.getDefaultToolkit().getSystemClipboard().getContents(null);
  if (transferable != null && transferable.isDataFlavorSupported(DataFlavor.imageFlavor))
  {
    img = (Image) transferable.getTransferData(DataFlavor.imageFlavor);
    //Imagen Imagen = new Imagen();
    //jLabel1.setIcon(img);
    return img;
  }
  else
  {
    return null;
  }
}
   
   public void CargaImagen_old(String Tipo, String Numero){
         ResultSet Rs;
         ExeSql Sql = new ExeSql();
         String rutaimage="";
         int valida = 0;
                     try {
                Rs = Sql.Select("SELECT imagen_voucher as imagen from transporte_despachos where tipdocto='"+Tipo+"' and nrodocto="+Numero);
                Rs.next();
                if (Rs.getString("imagen") != null)
                {
                    rutaimage=Rs.getString("imagen");
                    URL url = new URL("File:"+rutaimage);
                    
                    rutaimage=rutaimage.substring(28);
                    rutaimage="/mnt/voucher/"+rutaimage;
                    System.out.println(rutaimage);
                    
                    java.awt.Image image = java.awt.Toolkit.getDefaultToolkit().createImage(url);   
                   
                    
                    ImageIcon IconoVoucher =  new ImageIcon(image); 
                    jLabel1.setText("");
                    jLabel1.setIcon(IconoVoucher);
                    jMenuItem2.setEnabled(true);
                    valida=1;
                }
            }
            catch (Exception e) {   
                    if (valida ==0)
                    {
                        try{
                            rutaimage=rutaimage.substring(28);
                            rutaimage="/mnt/voucher/"+rutaimage;
                            URL url = new URL("File:"+rutaimage);

                            java.awt.Image image = java.awt.Toolkit.getDefaultToolkit().createImage(url);   
                            ImageIcon IconoVoucher =  new ImageIcon(image); 
                            jLabel1.setText("");
                            jLabel1.setIcon(IconoVoucher);
                            jMenuItem2.setEnabled(true);
                            valida=1;
                            }
                        catch (Exception ex)
                            {
                             JOptionPane.showMessageDialog(null, "Error Linux: " + ex.getMessage());   
                            }
                        
                    }
                     if (valida ==0)
                        {
                         JOptionPane.showMessageDialog(null, "Error Windows: " + e.getMessage());
                        }
                   }
   }
   
     public void CargaImagenXXXXX(String Tipo, String Numero, String Voucher){
        ResultSet Rs;
        ExeSql Sql = new ExeSql();
        String rutaimage="";

        try {
            Rs=  Rs = Sql.Select("SELECT count(imagen_voucher) as hay from transporte_despachos where tipdocto='"+Tipo+"' and nrodocto="+Numero);
            Rs.next();
            if (Rs.getInt("hay")>=1)
            {
                if (Voucher.equals("")){
                    Voucher = Rs.getString("voucher");
                }                    
                Rs = Sql.Select("SELECT imagen_voucher as imagen from transporte_despachos where tipdocto='"+Tipo+"' and nrodocto="+Numero + " and voucher = '" + Voucher + "'");
                Rs.next();
                if (Rs.getString("imagen") != null)
                {
                    
                    String sistema = System.getProperty("os.name").toLowerCase();
                    if (sistema.contains("win"))
                    {
                        rutaimage=Rs.getString("imagen");
                    }
                    else{
                         rutaimage=Rs.getString("imagen");
                         rutaimage=rutaimage.substring(28);
                            rutaimage="/mnt/voucher/"+rutaimage;
                    }
                   
                    File file = new File(rutaimage);
                    BufferedImage read = ImageIO.read(file);
                     
                    Image scaledInstance = read.getScaledInstance(950  , 633, Image.SCALE_DEFAULT);
                    jLabel1.setIcon(new ImageIcon(scaledInstance));
                    jLabel1.setText("");
              
                }
               
            }
        }
        catch (Exception e) {
                             
                         JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
                        
        }
        finally{
            Sql.Close();
            
        }
    }
   public void CargaImagen(String Tipo, String Numero, String Voucher){
        ResultSet Rs;
        ExeSql Sql = new ExeSql();
        String server,user,pass,ruta_local="";
        int puerto =21;
         String rutaimage="";
        try {

//            server= "192.168.0.130";
//            user="voucher";
//            pass="V2369";
            
            
           //trae datos ftp
            server="";
            puerto=0;
            user=""; 
            pass="";
            	Rs = Sql.Select("SELECT * from conexiones where tipo='ftp'");
                if (Rs.next())
                {
                    server = Rs.getString("serv");
                    user  = Rs.getString("usu");
                    puerto  = Rs.getInt("port");
                    pass = Rs.getString("pass");
                }
           //trae datos ftp
            
            Rs = Sql.Select("SELECT count(imagen_voucher) as hay from transporte_despachos where tipdocto='"+Tipo+"' and nrodocto="+Numero);
            Rs.next();
            if (Rs.getInt("hay")>=1)
            {
                if (Voucher.equals("")){
                    Voucher = Rs.getString("voucher");
                }                    
                Rs = Sql.Select("SELECT imagen_voucher as imagen from transporte_despachos where tipdocto='"+Tipo+"' and nrodocto="+Numero + " and voucher = '" + Voucher + "'");
                Rs.next();
                if (Rs.getString("imagen") != null)
                {

                    //Verifica SO
                    String sistema = System.getProperty("os.name").toLowerCase();
                    File folder = new File("");
                    if (sistema.contains("win"))
                    {
                         ruta_local = "c:/fotos2/";
                         folder = new File(ruta_local.substring(0,ruta_local.length()-1));
                    }
                    else{
                          ruta_local = "/fotos2/";
                          folder = new File(ruta_local);
                    }
                    if (!folder.exists())
                    {
                        folder.mkdir();
                    }
                    
                    rutaimage=Rs.getString("imagen");
                    String archivo = rutaimage.substring(28,rutaimage.length());
                    Ftp.baja_archivo_ftp(server, puerto,user, pass,"/"+archivo,ruta_local + archivo);
                    
                    
                     File file = new File(ruta_local+archivo);
                     BufferedImage read = ImageIO.read(file);
                    
                    /* Estaba antes del cambio 14/06/2017
                        File file = new File(rutaimage);
                        BufferedImage read = ImageIO.read(file);
                    */
                    //File file = new File(Rs.getString("imagen"));
                    //BufferedImage read = ImageIO.read(file);
                    
                    Image scaledInstance = read.getScaledInstance(950  , 633, Image.SCALE_DEFAULT);
                    jLabel1.setIcon(new ImageIcon(scaledInstance));
                    jLabel1.setText("");
                    
                }
               
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
        finally{
            Sql.Close();
            
        }
    }
   
    private class TransferableImage implements Transferable {

        Image i;

        public TransferableImage( Image i ) {
            this.i = i;
        }

        @Override
        public Object getTransferData( DataFlavor flavor )
        throws UnsupportedFlavorException, IOException {
            if ( flavor.equals( DataFlavor.imageFlavor ) && i != null ) {
                return i;
            }
            else {
                throw new UnsupportedFlavorException( flavor );
            }
        }

        public DataFlavor[] getTransferDataFlavors() {
            DataFlavor[] flavors = new DataFlavor[ 1 ];
            flavors[ 0 ] = DataFlavor.imageFlavor;
            return flavors;
        }

        public boolean isDataFlavorSupported( DataFlavor flavor ) {
            DataFlavor[] flavors = getTransferDataFlavors();
            for ( int i = 0; i < flavors.length; i++ ) {
                if ( flavor.equals( flavors[ i ] ) ) {
                    return true;
                }
            }

            return false;
        }
    }
   
   /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdVoucher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdVoucher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdVoucher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdVoucher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
 
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jdVoucher dialog = new jdVoucher(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPopupMenu jPopupMenu1;
    // End of variables declaration//GEN-END:variables
}
