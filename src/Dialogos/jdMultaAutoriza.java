/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import Conexion.ExeSql;
import Formularios.fmMain;
import Utilidades.Ftp;
import java.awt.Desktop;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author infornatica
 */
public class jdMultaAutoriza extends javax.swing.JDialog {

    /**
     * Creates new form jdMultaAutoriza
     */
    public jdMultaAutoriza(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        CargaMultas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        porautorizar = new javax.swing.JRadioButton();
        autorizar = new javax.swing.JRadioButton();
        todas = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Grilla.setAutoCreateRowSorter(true);
        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "CARTOLA", "FECHA", "CUENTA", "BANCO", "TIPO PAGO", "MONTO", "AUTORIZADA", "USUARIO CREACION", "ARCHIVO", "NRODOCTO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.getTableHeader().setReorderingAllowed(false);
        Grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                GrillaMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(0);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(1).setMinWidth(50);
            Grilla.getColumnModel().getColumn(1).setPreferredWidth(50);
            Grilla.getColumnModel().getColumn(1).setMaxWidth(50);
            Grilla.getColumnModel().getColumn(7).setMinWidth(50);
            Grilla.getColumnModel().getColumn(7).setPreferredWidth(50);
            Grilla.getColumnModel().getColumn(7).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(9).setMinWidth(0);
            Grilla.getColumnModel().getColumn(9).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(9).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(10).setMinWidth(0);
            Grilla.getColumnModel().getColumn(10).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(10).setMaxWidth(0);
        }

        jButton1.setText("Autorizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "RUT", "Fecha Emision", "Monto", "Pagado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable1);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonGroup1.add(porautorizar);
        porautorizar.setSelected(true);
        porautorizar.setText("Por autorizar");
        porautorizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porautorizarActionPerformed(evt);
            }
        });

        buttonGroup1.add(autorizar);
        autorizar.setText("Autorizadas");
        autorizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autorizarActionPerformed(evt);
            }
        });

        buttonGroup1.add(todas);
        todas.setText("Todas");
        todas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todasActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/pdf.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(porautorizar)
                    .addComponent(todas)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(autorizar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(porautorizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(autorizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(todas)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 724, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String id = Grilla.getValueAt(Grilla.getSelectedRow(),0).toString().trim();
        ExeSql sql = new ExeSql();
        try {
            if(JOptionPane.showConfirmDialog(rootPane, "¿Desea autorizar multa?")==0){
                int resultado = sql.ExeSqlInt("update multas_autorizacion set autorizada = true where id = "+id+" ");
                if(resultado>0){
                    JOptionPane.showMessageDialog(rootPane, "Se autorízó con éxito.");
                }
                else {
                    JOptionPane.showMessageDialog(rootPane, "Error al autorizar.");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(jdMultaAutoriza.class.getName()).log(Level.SEVERE, null, ex);
            CargaMultas();
        }
        finally {
            CargaMultas();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void GrillaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMousePressed
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        String id = Grilla.getValueAt(Grilla.getSelectedRow(),3).toString();
        String query =  "select *\n" +
                        "from cli_cuentasxcobrar cc\n" +
                        "where cc.id = "+id+"";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        while(model.getRowCount()>0) model.removeRow(0);
        try {
            rs = sql.Select(query);
            for(int i = 0; rs.next(); i++){
                model.addRow(new Object[]{
                    rs.getInt("id"),
                    rs.getString("rut"),
                    rs.getString("femision"),
                    rs.getInt("monto"),
                    rs.getInt("pagado")
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(jdMultaAutoriza.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_GrillaMousePressed

    private void porautorizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porautorizarActionPerformed
        CargaMultas();
    }//GEN-LAST:event_porautorizarActionPerformed

    private void autorizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autorizarActionPerformed
        CargaMultas();
    }//GEN-LAST:event_autorizarActionPerformed

    private void todasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todasActionPerformed
        CargaMultas();
    }//GEN-LAST:event_todasActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        boolean bol = false;
        if(Grilla.getValueAt(Grilla.getSelectedRow(),9).toString().trim().isEmpty()){
            bol = false;
        }
        else {
            bol = true;
        }
        String id = Grilla.getValueAt(Grilla.getSelectedRow(),0).toString();
        String nrodocto = Grilla.getValueAt(Grilla.getSelectedRow(),10).toString();
        String cuenta = Grilla.getValueAt(Grilla.getSelectedRow(),3).toString();
        if(bol){
            ExeSql sql = new ExeSql();
            ResultSet rs = null;

            try {
                rs=sql.Select("select archivo from multas_autorizacion where id = '"+id+"' and nrodocumento = '"+nrodocto+"' and cuenta = "+cuenta+" limit 1");
                rs.next();
                if(rs.getString("archivo")!=null){
                    CargaPdf(id, rs.getString("archivo"));
                }
                else {
                    JOptionPane.showMessageDialog(null, "No posee archivo de imagen");
                }
            } catch (SQLException ex) {
                fmMain.Mensaje(ex.getMessage());
            }
            finally {
                sql.Close();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    public void CargaPdf(String id, String Voucher){
        ResultSet Rs;
        ExeSql Sql = new ExeSql();
        String server,user,pass,ruta_local="";
        int puerto =21;
         String rutaimage="";
          String rutrans="";
        try {

//            server= "192.168.0.130";
//            user="voucher";
//            pass="V2369";
            
            
           //trae datos ftp
            server="";
            puerto=0;
            user=""; 
            pass="";
            
            	Rs = Sql.Select("SELECT * from conexiones where tipo='multa'");
                if (Rs.next())
                {
                    if(!fmMain.GetInternet()){
                        server = Rs.getString("serv");
                        user  = Rs.getString("usu");
                        puerto  = Rs.getInt("port");
                        pass = Rs.getString("pass");
                    }
                    else {
                        server = "186.67.157.227";
                        user  = Rs.getString("usu");
                        puerto  = 21;
                        pass = Rs.getString("pass");
                    }
                }
           //trae datos ftp
            
            Rs = Sql.Select("SELECT count(*) as hay from multas_autorizacion where id='"+id+"'");
            Rs.next();
            if (Rs.getInt("hay")>0)
            {
                Rs = Sql.Select("SELECT archivo as pdf from multas_autorizacion where id='"+id+"'");
                Rs.next();
                if (Rs.getString("pdf") != null)
                {

                    //Verifica SO
                    String sistema = System.getProperty("os.name").toLowerCase();
                    File folder = new File("");
                    if (sistema.contains("win"))
                    {
                         ruta_local = "c:/fotos2/multa/";
                         folder = new File(ruta_local);
                    }
                    else{
                          ruta_local = "/fotos2/multa/";
                          folder = new File(ruta_local);
                    }
                    if (!folder.exists())
                    {
                        folder.mkdir();
                    }
                    String archivo = "";

                    rutaimage = Rs.getString("pdf");
                    
                    if (Rs.getString("pdf") != null)
                    {
                        
                        archivo = fmMain.GetStringDeFinal('\\', rutaimage);
                        rutrans = fmMain.GetStringDeFinal('\\', rutaimage);
                        System.out.println(rutrans);
                        System.out.println(archivo);
                    }
//                            String rutrans="";
//                            if (Transporte == 1)
//                            {
//                                rutrans = "/tnt/";
//                                //archivo = rutaimage.substring(33,rutaimage.length());
//                                archivo = fmMain.GetStringDeFinal('\\', rutaimage);
//                            }
//                            else if (Transporte == 7)
//                            {
//                                rutrans = "/blue/";
//                                //archivo = rutaimage.substring(34,rutaimage.length());
//                                archivo = fmMain.GetStringDeFinal('\\', rutaimage);
//                            }
//                            else
//                                {
//                                rutrans = "/";
//                                archivo = fmMain.GetStringDeFinal('\\', rutaimage);
//                            }
                      
//                        rutrans = "/";
//                        archivo = fmMain.GetStringDeFinal('\\', rutaimage);
                    
//                    String  Archivo_buscado = Ftp.busca_archivoFTP(server, puerto, user, pass, ruta_local, "",archivo);
//                   if (Archivo_buscado.equals("") )
//                   {
                    Ftp.baja_archivo_ftp(server, puerto,user, pass,"/" + rutrans,ruta_local + archivo);
                    ImageIcon image = new ImageIcon(ruta_local + archivo);
                    File file = new File(archivo);
                    File pathCompleto = new File(ruta_local + file);
                    Desktop.getDesktop().open(pathCompleto); 
//                   }

                    
//                   else
//                   {
//                       rutrans = "/";
//                       Ftp.baja_archivo_ftp(server, puerto,user, pass,rutrans+archivo,ruta_local + Archivo_buscado);
//                       File file = new File(archivo);
//                       File pathCompleto = new File(ruta_local + file);
//                       Desktop.getDesktop().open(pathCompleto); 
//                   }
                    
                                      
                }
               
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
        finally{
            Sql.Close();
            
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdMultaAutoriza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdMultaAutoriza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdMultaAutoriza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdMultaAutoriza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jdMultaAutoriza dialog = new jdMultaAutoriza(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    
    public void CargaMultas() {
        DefaultTableModel model = (DefaultTableModel) Grilla.getModel();
        while(model.getRowCount()>0){
            model.removeRow(0);
        }
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        String query = "select \n" +
                        "mt.id, \n" +
                        "mt.id_cartola,\n" +
                        "mt.fecha,\n" +
                        "mt.cuenta,\n" +
                        "bb.nombre banco,\n" +
                        "pg.nombre tipopago,\n" +
                        "mt.monto," +
                        "(select nombre from personal where lower(usuario) = mt.usuario) as usuario,\n" +
                        "mt.autorizada, mt.archivo,nrodocumento\n" +
                        "from multas_autorizacion mt\n" +
                        "left join par_general pg on pg.codigo = mt.tipopago and pg.tipo='TIPOPAGOCLI'\n" +
                        "left join bco_bancos bb on bb.id = mt.banco\n";
                        if(porautorizar.isSelected()){
                            query = query + "where mt.autorizada = false\n";
                        }
                        if(autorizar.isSelected()){
                            query = query + "where mt.autorizada = true\n";
                        }
                        if(todas.isSelected()){
                        }
                        query = query + "order by mt.fecha desc";
        try {
            rs = sql.Select(query);
            for(int i = 0; rs.next() ; i++){    
                model.addRow(new Object[]{
                    rs.getString("id"),
                    rs.getString("id_cartola"),
                    rs.getString("fecha"),
                    rs.getString("cuenta"),
                    rs.getString("banco"),
                    rs.getString("tipopago"),
                    rs.getInt("monto"),
                    rs.getBoolean("autorizada"),
                    rs.getString("usuario"),
                    rs.getString("archivo"),
                    rs.getString("nrodocumento")
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(jdMultaAutoriza.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally {
            sql.Close();
        }
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla;
    private javax.swing.JRadioButton autorizar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton porautorizar;
    private javax.swing.JRadioButton todas;
    // End of variables declaration//GEN-END:variables
}
