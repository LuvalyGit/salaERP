/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import Conexion.ExeSql;
import Formularios.fmMain;
import Utilidades.TableCellSkuRepetido;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author infornatica
 */
public class jdRelacionarProductos extends javax.swing.JDialog {

    /**
     * Creates new form jdRelacionarProductos
     */
    public jdRelacionarProductos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        
        Grilla.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                if (evt.getClickCount() > 1) {
                    JTable table = (JTable) evt.getSource();
                    int row = table.rowAtPoint(evt.getPoint());
                    TableModel model = table.getModel();
                }
            }
        });
        Grilla.setDefaultRenderer(Object.class,new Utilidades.TableCellSkuRepetido(txtCrearRelacion.getText()));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btBuscarRelacionado = new javax.swing.JButton();
        txtCrearRelacion = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        TextoFiltro = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SKU", "Nombre", "Posee RelaciÃ³n"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.setEnabled(false);
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(150);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(150);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(150);
            Grilla.getColumnModel().getColumn(2).setMinWidth(100);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(100);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Agregar.png"))); // NOI18N
        jButton1.setText("Relacionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Producto Madre", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        btBuscarRelacionado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/search16.png"))); // NOI18N
        btBuscarRelacionado.setText("Buscar");
        btBuscarRelacionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarRelacionadoActionPerformed(evt);
            }
        });

        txtCrearRelacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCrearRelacionKeyPressed(evt);
            }
        });

        jLabel31.setText("Producto Origen:");

        txtNombre.setEnabled(false);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Filtro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel13.setText("FILTRO:");

        TextoFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextoFiltroKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextoFiltroKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TextoFiltroKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextoFiltro)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(TextoFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCrearRelacion, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btBuscarRelacionado, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCrearRelacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(btBuscarRelacionado)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "InformaciÃ³n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel2.setBackground(new java.awt.Color(254, 255, 0));
        jLabel2.setText("Tiene RelaciÃ³n");
        jLabel2.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        GetNumero();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btBuscarRelacionadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarRelacionadoActionPerformed
        jdBuscarProductos BP = new jdBuscarProductos(null, true);
        BP.setLocationRelativeTo(null);
        BP.setTitle("Buscar Producto");
        BP.setVisible(true);
        BP.SetCotiza(false);
        if(!"".equals(BP.GetCodigo())){
            txtCrearRelacion.setText(BP.GetCodigo());
            txtNombre.setText(BP.GetNombre());
            CargaProductos(txtCrearRelacion.getText());
            Grilla.setDefaultRenderer(Object.class,new Utilidades.TableCellSkuRepetido(txtCrearRelacion.getText()));
        }
    }//GEN-LAST:event_btBuscarRelacionadoActionPerformed

    private void TextoFiltroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextoFiltroKeyPressed

    }//GEN-LAST:event_TextoFiltroKeyPressed

    private void TextoFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextoFiltroKeyReleased
        TableRowSorter<TableModel>sorter = new TableRowSorter<TableModel>(Grilla.getModel());
        Grilla.setRowSorter(sorter);
        String sku = TextoFiltro.getText().trim();
        if (sku.length()==0)
        {
            sorter.setRowFilter(null);
        }
        else{
            int cant=0;
            int ev=0;
            String precio = "";
            sorter.setRowFilter(RowFilter.regexFilter(sku));
        }        // TODO add your handling code here:

        
        
    }//GEN-LAST:event_TextoFiltroKeyReleased

    private void TextoFiltroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextoFiltroKeyTyped
        // TODO add your handling code here:
        if (Character.isLowerCase(evt.getKeyChar()))
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    }//GEN-LAST:event_TextoFiltroKeyTyped

    private void txtCrearRelacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCrearRelacionKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            ExeSql Sql = new ExeSql();
        
            String Query ="select p.sku,p.publicado, p.sincompetencia, p.desxprecio, p.notransado, p.discontinuado, p.sinstock, p.oferta_inicio, p.oferta_fin, p.oferta, p.display, p.sku,p.nombre,p.unidad,p.linea,p.sublinea,p.codbar,p.codbar2,p.vigente,p.peso,cast(p.fcreacion as date) as fcreacion,p.usuariocreacion,p.otroimpuesto,\n"
                        + "i.stock,i.ocp,i.occ,i.gdc, p.pventa,p.valultcompra,p.costofinal,p.imptoiva,p.convenio,p.otroimpuesto,p.marca, p.minimo,calcula_minimo, (select sum(separado) from occhdet where sku=p.sku) as separado, pr.posicion, p.sin_publicar\n"
                        + "from producto p\n"
                        + "left join inventario i\n"
                        + "on p.sku=i.sku\n"
                        + "left join producto_posicion pr\n"
                        + "on p.sku = pr.sku\n"
                        + "where p.sku='" + txtCrearRelacion.getText() + "' or p.sku in (select sku from codbar where codbar='" + txtCrearRelacion.getText() + "') and p.es_cotiza<>1";
            try {
                ResultSet Rs = Sql.Select(Query);
                if(Rs.next()){
                    txtCrearRelacion.setText(Rs.getString("sku").trim());
                    txtNombre.setText(Rs.getString("nombre"));
                    CargaProductos(txtCrearRelacion.getText());
                    Grilla.setDefaultRenderer(Object.class,new Utilidades.TableCellSkuRepetido(txtCrearRelacion.getText()));
                }
                else {
                    JOptionPane.showMessageDialog(rootPane, "No existe producto.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(jdRelacionarProductos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
    }//GEN-LAST:event_txtCrearRelacionKeyPressed
    
    public void GetNumero() {
        ExeSql sql = new ExeSql();
        String Query = "";
        ArrayList<String> lista = new ArrayList<String>();
        ArrayList<String> modificados = new ArrayList<String>();
        DefaultTableModel model = (DefaultTableModel) Grilla.getModel();
        if(!txtCrearRelacion.getText().equals("")){
            ExeSql corroborar = new ExeSql();
            ResultSet corrob = null;
            String Query_Existe = "select * from producto where sku = '"+txtCrearRelacion.getText()+"'";
            boolean existe = false;

            try {
                corrob = corroborar.Select(Query_Existe);
                if(corrob.next()){
                    existe = true;
                    System.out.println(corrob.getString("sku"));
                }
                corrob.close();
            } catch (SQLException ex) {
                Logger.getLogger(jdRelacionarProductos.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(Grilla.getRowCount()>0){
                if (Grilla.getSelectedRowCount() > 0) {
                    int selectedRow[] = Grilla.getSelectedRows();
                    for(int i = 0; i < selectedRow.length;i++) {
                            if(!CheckIfNoRelation(Grilla.getValueAt(selectedRow[i], 0).toString(),TextoFiltro.getText())){  
                                System.out.println(Grilla.getValueAt(selectedRow[i], 0).toString()+ " - No tiene relacion ");
                                try {
                                    sql.ExeSql("insert into codproducto_rel (sku,sku_rel,fcreacion,usuario) values ('"+Grilla.getValueAt(selectedRow[i], 0).toString()+"','"+txtCrearRelacion.getText()+"',now(),'"+fmMain.GetUsuario()+"')");
                                    System.out.println(Grilla.getValueAt(selectedRow[i], 0).toString()+ " - Ha sido relacionado con "+txtCrearRelacion.getText());
                                    modificados.add(Grilla.getValueAt(selectedRow[i], 0).toString()+ " - Ha sido relacionado con "+txtCrearRelacion.getText());
                                } catch (SQLException ex) {
                                    Logger.getLogger(jdRelacionarProductos.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                            else {
                                lista.add(Grilla.getValueAt(selectedRow[i], 0).toString());
                                System.out.println(Grilla.getValueAt(selectedRow[i], 0).toString()+ " - Tiene relacion con: "+ RevisarRelacion(Grilla.getValueAt(selectedRow[i], 0).toString())[0] + " - "+ RevisarRelacion(Grilla.getValueAt(selectedRow[i], 0).toString())[1]);
                            }
                    }
                    
                    if(lista.size()>0){
                        String no_se_puede = "";
                        for(String elem : lista){
                            no_se_puede = no_se_puede + elem+"\n";
                        }
                        JOptionPane.showMessageDialog(rootPane, "No se pudo establecer relaciÃ³n :\n "+no_se_puede);
                    }
                    
                    
                    
                    if(modificados.size()>0){
                        String se_puede = "";
                        for(String elem : modificados){
                            se_puede = se_puede + elem+"\n";
                        }
                        JOptionPane.showMessageDialog(rootPane, "Se estableciÃ³ relaciÃ³n :\n "+se_puede);
                        CargaProductos(txtCrearRelacion.getText());
                    }
                    

                }
            }
        }
        else {
            JOptionPane.showMessageDialog(rootPane,"SKU de producto origen no vÃ¡lido");
        }
        
    }
    
    public String[] RevisarRelacion(String sku) {
        String[] sku_rel = new String[2];
        String Query = "select p.nombre, p.sku, pro.sku_rel, pro2.nombre as nombre_rel,\n" +
        "case \n" +
        "when p.sku not in (select sku from codproducto_rel where sku = p.sku) then 'Disponible'\n" +
        "else 'Tiene'\n" +
        "end as relacion\n" +
        "from producto as p\n" +
        "left join codproducto_rel pro on pro.sku = p.sku \n" +
        "left join producto pro2 on pro2.sku = pro.sku_rel\n"+
        "where p.sku = '"+sku+"'";
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        try {
            rs = sql.Select(Query);
            
            for(int i = 0; rs.next();i++){
                sku_rel[0] = rs.getString("nombre_rel");
                sku_rel[1] = rs.getString("sku_rel");
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(jdRelacionarProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
        return sku_rel;
    }
    
    public boolean CheckIfNoRelation(String sku,String filtro) {
        boolean tiene = false;
        String Query = "select * from codproducto_rel\n" +
        "where sku = '"+sku+"'";
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        try {
            rs = sql.Select(Query);
            
            if(rs.next())
                tiene = true;
                
            
        } catch (SQLException ex) {
            Logger.getLogger(jdRelacionarProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
        return tiene;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdRelacionarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdRelacionarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdRelacionarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdRelacionarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jdRelacionarProductos dialog = new jdRelacionarProductos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla;
    private javax.swing.JTextField TextoFiltro;
    private javax.swing.JButton btBuscarRelacionado;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCrearRelacion;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

    private void CargaProductos(String sku) {
        Grilla.setEnabled(true);
        String Query = "select p.sku, p.nombre,\n" +
        "case \n" +
        "when p.sku not in (select sku from codproducto_rel where sku = p.sku) then 'Disponible'\n" +
        "else 'Tiene RelaciÃ³n'\n" +
        "end as relacion\n" +
        "from producto as p\n"+
        "where p.es_cotiza = 0"+
        "and p.sku <> '"+sku+"'";
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        try {
            rs = sql.Select(Query);
            DefaultTableModel model = (DefaultTableModel) Grilla.getModel();
            while(model.getRowCount()>0){
                model.removeRow(0);
            }
            Grilla.setRowSorter(new TableRowSorter(model));
            for(int i = 0; rs.next(); i++){
                model.addRow(new Object[]{
                    rs.getString("sku"),
                    rs.getString("nombre"),
                    rs.getString("relacion")
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(jdRelacionarProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
