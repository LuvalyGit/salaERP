/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import Conexion.ExeSql;
import Formularios.fmMain;
import Utilidades.ComboCodigos;
import Utilidades.Exporter;
import Utilidades.POI_excel;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DavidAlcaman
 */
public class jd_ValorDespacho extends javax.swing.JDialog {
   DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    private Object GrillaOCS;
    public static int pano; 
    public static int pmes;
    public static int pmes_oc;
    int id_trans=-1;
    /**
     * Creates new form jdTrasnporte
     */
    public jd_ValorDespacho(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
         //Setea fecha inicial Desde y Hasta
        Date date = new Date();
//        dtDesde.setDate(date);
//        dtHasta.setDate(date);
//        dtDesde.setEnabled(true);
//        dtHasta.setEnabled(true);
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        Grilla.getColumnModel().getColumn(1).setCellRenderer(rightRenderer);
        CargaTransporte();
        //CargaBultos_tnt();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        btAceptar = new javax.swing.JButton();
        lblTotalPeso = new javax.swing.JLabel();
        BtExcel = new javax.swing.JButton();
        lblTotalBulto = new javax.swing.JLabel();
        lblTotalDesp = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblFecha1 = new javax.swing.JLabel();
        CboTransporte = new javax.swing.JComboBox<String>();
        jLabel4 = new javax.swing.JLabel();
        txPeso = new javax.swing.JTextField();
        bt_cargar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Grilla.setAutoCreateRowSorter(true);
        Grilla.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Transporte", "Precio", "Ciudad", "Peso"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(300);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(300);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(300);
        }

        btAceptar.setText("Cerrar");
        btAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAceptarActionPerformed(evt);
            }
        });

        lblTotalPeso.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTotalPeso.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotalPeso.setText("0");

        BtExcel.setText("Excel");
        BtExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtExcelActionPerformed(evt);
            }
        });

        lblTotalBulto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTotalBulto.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotalBulto.setText("0");

        lblTotalDesp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTotalDesp.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotalDesp.setText("0");

        jLabel1.setText("Tnt");

        jLabel2.setText("Samex");

        jLabel3.setText("Blue");

        lblFecha1.setText("Ciudad");

        CboTransporte.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Todos>" }));
        CboTransporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CboTransporteActionPerformed(evt);
            }
        });

        jLabel4.setText("Peso");

        txPeso.setText("0");
        txPeso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txPesoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txPesoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txPesoKeyTyped(evt);
            }
        });

        bt_cargar.setText("Cargar");
        bt_cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(218, 218, 218)
                                .addComponent(lblTotalDesp, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(30, 30, 30)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(lblTotalBulto, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(lblTotalPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(jLabel3)))
                        .addGap(74, 74, 74))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(383, 383, 383)
                                    .addComponent(BtExcel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, Short.MAX_VALUE)
                                    .addComponent(btAceptar))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblFecha1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(CboTransporte, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(bt_cargar)
                                            .addGap(13, 13, 13)))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 22, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtExcel, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(btAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFecha1)
                    .addComponent(CboTransporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bt_cargar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblTotalPeso)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblTotalBulto)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTotalDesp)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//    public String getDesde() {
//         
//        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
//        return( sdf.format( (dtDesde.getDate()).getTime() ) );
//    }
//     
//     
//      public String getHasta() {
//         
//        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
//        return( sdf.format( (dtHasta.getDate()).getTime() ) );
//    }
//     
      
      
    private void CargaTransporte(){
        DefaultComboBoxModel value;
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        String Query="";
        int i=0;
        CboTransporte.removeAllItems();
        
        value =new DefaultComboBoxModel();
       
        
        
        try {
            Query=" select comuna\n" +
            " from g_comunas \n" +
            " order by comuna";
            Rs = Sql.Select(Query);
            if(Sql.GetRowCount()==0) return;
           value.addElement(new ComboCodigos("Seleccione",0));     
           while(Rs.next()){
            value.addElement(new ComboCodigos(Rs.getString("comuna").trim(),i));
            System.out.println(Rs.getString("comuna").trim());
            i++;
           } 
           CboTransporte.setModel(value);
           CboTransporte.setSelectedIndex(0);

           
           
        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
    }
      
      
      
    public double  CargaBultos_tnt(String ciudad, String Speso ){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        double nMinimo =0;
        int SumaDespachos = 0;
        int SumaBultos = 0;
        int SumaPeso = 0;
        double nPrecio =-1;
                lblTotalPeso.setText(String.valueOf(SumaPeso));
                lblTotalBulto.setText(String.valueOf(SumaBultos));
                lblTotalDesp.setText(String.valueOf(SumaDespachos));
        
        
        if (Speso.equals("0")){
            fmMain.Mensaje("Debe ingresar el peso del bulto");
            return -1;
        }
        
        
//         while(TableModel.getRowCount()>0)
//             TableModel.removeRow(0);
        try {
            
            // Trae el precio de Tnt
 
            String Query = "select tnt.ciudad, tnt.troncal_ramal, tnt.codigo,p_tnt.precio, p_tnt.minimo\n" +
            " from pd_ciudades_tnt tnt\n" +
            " left join pd_precios_tnt p_tnt\n" +
            " on p_tnt.codigo = tnt.codigo\n" +
            " where trim(tnt.ciudad) ='" + ciudad.trim() + "'\n " +
            " and p_tnt.inicio <= " + Speso + "  and p_tnt.fin >= " + Speso + ";";
            
            Double peso = Double.valueOf(Speso);
             
            Rs = Sql.Select(Query);
            if (Rs.next()){ 
                     nPrecio = Double.valueOf(Rs.getString("precio"));
                     nMinimo= Double.valueOf(Rs.getString("minimo"));
                    if(peso >=100){
                        nPrecio = nPrecio * peso;
                    }    
                    else
                    {
                       nPrecio = Double.valueOf(Rs.getString("precio")); 
                    }
                    nPrecio = Math.round(nPrecio);
                    
                    if(nPrecio < nMinimo ){
                        nPrecio = nMinimo;
                    }
                    
                    nPrecio =  Math.round(nPrecio);
                    
                
            }
            
        } catch (Exception e) {
          
        } finally{
            Sql.Close();
            return nPrecio;
        }
        
    }   
    
    
    public double  CargaBultos_Samex(String ciudad, String Speso ){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
      
        int SumaDespachos = 0;
        int SumaBultos = 0;
        int SumaPeso = 0;
        double nPrecio =-1;
        double nMinimo =0;
                lblTotalPeso.setText(String.valueOf(SumaPeso));
                lblTotalBulto.setText(String.valueOf(SumaBultos));
                lblTotalDesp.setText(String.valueOf(SumaDespachos));
        
        
        if (Speso.equals("0")){
            fmMain.Mensaje("Debe ingresar el peso del bulto");
            return -1;
        }
        
         Double peso = Double.valueOf(Speso);
        
        if (peso <1 && peso >0){
            peso=1.0;
            Speso="1";
        }

        try {
            
             String Query = "select samex.nombre, samex.base, samex.zona_influencia,p_samex.precio,p_samex.minimo\n" +
            " from pd_ciudades_samex samex\n" +
            " left join pd_precios_samex p_samex\n" +
             "on samex.zona_influencia = p_samex.zi\n" +
            " and  p_samex.base = samex.base \n" +
             " where upper(trim(samex.nombre))='" + ciudad.toUpperCase().trim() + "'\n "+         
            //" where trim(samex.nombre)='" + ciudad.trim() + "'\n "+
            //" and  samex.zona_influencia not in ('ZE','ZME') --- Fijo\n" +  //No se vera transporte para estas zonas
            " and p_samex.inicio <= " + Speso + "  and p_samex.fin >= " + Speso + ";";
            
         
             
            Rs = Sql.Select(Query);
            if (Rs.next()){ 
                    nPrecio = Double.valueOf( Rs.getDouble("precio"));
                    nMinimo = Rs.getDouble("minimo");
                    
                    nPrecio = nPrecio * peso;
                    if(nPrecio < nMinimo ){
                        nPrecio = nMinimo;
                    }
                    
                    nPrecio =  Double.valueOf(Math.round(nPrecio));
                    
            }
            
        } catch (Exception e) {
          
        } finally{
            Sql.Close();
            return nPrecio;
        }
        
    } 
    
    public double  CargaBultos_Blue(String ciudad, String Speso ){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
      
        int SumaDespachos = 0;
        int SumaBultos = 0;
        int SumaPeso = 0;
        double nPrecio =-1;
        double nMinimo =0;
                lblTotalPeso.setText(String.valueOf(SumaPeso));
                lblTotalBulto.setText(String.valueOf(SumaBultos));
                lblTotalDesp.setText(String.valueOf(SumaDespachos));
        
        
        if (Speso.equals("0")){
            fmMain.Mensaje("Debe ingresar el peso del bulto");
            return -1;
        }

        try {
            
             String Query = "select * \n" +
            " from pd_zonageografica_blue blue \n" +
            " left join pd_precios_blue p_blue\n" +
             "on trim(blue.zona) = trim(p_blue.zona)\n" +
            " and  trim(blue.posta)= trim(p_blue.base)  \n" +
            " where trim(blue.localidad) =  '" + ciudad.trim() + "'";          

            
            Double peso = Double.valueOf(Speso);
             
            Rs = Sql.Select(Query);
            if (Rs.next()){ 
//                if (peso>= 3.1 && peso <=6 ){
//                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p3c1_6")));
//                }
//                else if (peso>= 6.1 && peso <=10 ){
//                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p6c1_10")));
//                }
//                else if (peso>= 10.1 && peso <=20.9 ){
//                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p10c1_20")));
//                }
//                else if (peso>= 21 && peso <=50.9 ){
//                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p21_50")));
//                }
//                else if (peso>= 51 && peso <=100.9 ){
//                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p51_100")));
//                }
//                
//                 else if (peso>= 101 && peso <=200.9 ){
//                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p101_200")));
//                }
//                else if (peso>= 201 && peso <=400.9 ){
//                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p201_400")));
//                }
//                else if (peso>= 401 && peso <=600.9 ){
//                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p401_600")));
//                }
//                
//                else if (peso>= 601 && peso <=1000.9 ){
//                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p601_1000")));
//                }
//                else if (peso>= 1001 && peso <=2000.9){
//                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p1001_2000")));
//                }
//                else if (peso>= 2001 && peso <=3500.9){
//                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p2001_3500")));
//                }
//                
//                   else if (peso>= 3501 && peso <=5000.9 ){
//                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p3501_5000")));
//                }
//                else if (peso>=5001 && peso <=10000.9 ){
//                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p5001_10000")));
//                }
//                else if (peso>=10001 && peso <=18000.9 ){
//                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p10001_18000")));
//                }
                if (peso>= 3.1 && peso <=6 ){
                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p3c1_6")));
                }
                else if (peso>= 6.1 && peso <=10 ){
                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p6c1_10")));
                }
                else if (peso>= 10.1 && peso <=20 ){
                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p10c1_20")));
                    //nPrecio = Rs.getDouble("p10c1_20");
                }
                else if (peso>= 20.1 && peso <=50 ){
                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p21_50")));
                }
                else if (peso>= 50.1 && peso <=100 ){
                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p51_100")));
                }
                
                 else if (peso>= 100.1 && peso <=200.9 ){
                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p101_200")));
                }
                else if (peso>= 201 && peso <=400.9 ){
                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p201_400")));
                }
                else if (peso>= 401 && peso <=600.9 ){
                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p401_600")));
                }
                
                else if (peso>= 601 && peso <=1000.9 ){
                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p601_1000")));
                }
                else if (peso>= 1001 && peso <=2000.9){
                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p1001_2000")));
                }
                else if (peso>= 2001 && peso <=3500.9){
                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p2001_3500")));
                }
                
                   else if (peso>= 3501 && peso <=5000.9 ){
                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p3501_5000")));
                }
                else if (peso>=5001 && peso <=10000.9 ){
                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p5001_10000")));
                }
                else if (peso>=10001 && peso <=18000.9 ){
                    nPrecio = Double.valueOf( fmMain.FormatoTotal(Rs.getDouble("p10001_18000")));
                }
                   
                    nMinimo = Rs.getDouble("min_a_cobrar");
                    
                    if (nPrecio >0)
                    nPrecio = nPrecio * peso;
                    
                    if(nPrecio < nMinimo ){
                        nPrecio = nMinimo;
                    }
                    
                    
                    nPrecio =  Math.round(nPrecio);
                    
            }
            
        } catch (Exception e) {
          
        } finally{
            Sql.Close();
            return nPrecio;
        }
        
    } 
    
    
    
    
    
    
    
    
    public void abrir(String file ){
        
       try {
           String url = file;
           ProcessBuilder p = new ProcessBuilder();
           p.command("cmd.exe", "/c",url);
           p.start();
       } catch (IOException ex) {
           Logger.getLogger(jd_ValorDespacho.class.getName()).log(Level.SEVERE, null, ex);
       }
        
    }
    
    
    
    private void btAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAceptarActionPerformed
        dispose();
    }//GEN-LAST:event_btAceptarActionPerformed

    private void BtExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtExcelActionPerformed
        // TODO add your handling code here:
        
//        if(Grilla.getRowCount()==0){
//            fmMain.Mensaje("Nada que exportar");
//            return;
//        }
//
//        JFileChooser chooser = new JFileChooser();
//        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo Excel",".xls");
//        chooser.setFileFilter(filter);
//        chooser.setDialogTitle("Guardar Informe en Excel");
//        chooser.setMultiSelectionEnabled(false);
//        chooser.setAcceptAllFileFilterUsed(false);
//
//        if(chooser.showSaveDialog(null)== JFileChooser.APPROVE_OPTION){
//            List<JTable> tb=new ArrayList<>();
//            List<String> nom=new ArrayList<>();
//            tb.add(Grilla);
//            nom.add("Año: " + pano + " Mes: " + pmes + " Mes_OC: "+ pmes_oc);
//            String file=chooser.getSelectedFile().toString().concat(".xls");
//            try {
//                Exporter e = new Exporter(new File(file), tb, nom);
//                
//                if(e.export())
//                fmMain.Mensaje("Datos Exportados");
//                abrir(file);
//                
//            } catch (Exception e) {
//                fmMain.Mensaje(e.getMessage());
//            }
//
//           
//        }
        
        
        if(Grilla.getRowCount()==0){
            fmMain.Mensaje("Nada que exportar");
            return;
        }

//        JFileChooser chooser = new JFileChooser();
//        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo Excel",".xls");
//        chooser.setFileFilter(filter);
//        chooser.setDialogTitle("Guardar Informe en Excel");
//        chooser.setMultiSelectionEnabled(false);
//        chooser.setAcceptAllFileFilterUsed(false);


            List<JTable> tb=new ArrayList<>();
            List<String> nom=new ArrayList<>();
            tb.add(Grilla);
            nom.add("Agno->" + pano + " Mes->" + pmes + " Mes_OC->"+ pmes_oc);
            
            File folder = new File("c:/temp");
            if (!folder.exists())
            {
                folder.mkdir();
            }
            
             String file = "C:/temp/convenio" + pano + "-" + pmes + "-"+ pmes_oc +".xls";       
            
            
            try {
                Exporter e = new Exporter(new File(file), tb, nom);
                
                if(e.export())
                //fmMain.Mensaje("Datos Exportados");
                abrir(file);
                
            } catch (Exception e) {
                fmMain.Mensaje(e.getMessage());
            }

           

        
        
    }//GEN-LAST:event_BtExcelActionPerformed

    private void CboTransporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CboTransporteActionPerformed
        
    }//GEN-LAST:event_CboTransporteActionPerformed

    private void bt_cargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cargarActionPerformed
        // TODO add your handling code here:
        double nPrecio_tnt =0, nPrecio_samex =0, nPrecio_blue  =0;
       
        
        nPrecio_tnt= CargaBultos_tnt(CboTransporte.getSelectedItem().toString(),txPeso.getText());
        nPrecio_samex= CargaBultos_Samex(CboTransporte.getSelectedItem().toString(),txPeso.getText());
       nPrecio_blue= CargaBultos_Blue(CboTransporte.getSelectedItem().toString(),txPeso.getText());
       DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();   
             
           while(TableModel.getRowCount()>0)
             TableModel.removeRow(0);  
                TableModel.addRow(new Object[]{
                                               "TNT",
                                               String.valueOf(nPrecio_tnt), 
                                               CboTransporte.getSelectedItem(), txPeso.getText()
                        });      
                lblTotalDesp.setText(String.valueOf(nPrecio_tnt));
                
                
                TableModel.addRow(new Object[]{
                                               "SAMEX",
                                               String.valueOf(nPrecio_samex), 
                                               CboTransporte.getSelectedItem(), txPeso.getText()
                        });      
                lblTotalBulto.setText(String.valueOf(nPrecio_samex));
            
                
                  TableModel.addRow(new Object[]{
                                               "BLUE",
                                          String.valueOf(nPrecio_blue), 
                                               CboTransporte.getSelectedItem(), txPeso.getText()
                        });      
                lblTotalPeso.setText(String.valueOf(nPrecio_blue));
                
                
                
    }//GEN-LAST:event_bt_cargarActionPerformed

    private void txPesoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txPesoKeyPressed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_txPesoKeyPressed

    private void txPesoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txPesoKeyTyped
        // TODO add your handling code here:
        
        
        
    }//GEN-LAST:event_txPesoKeyTyped

    private void txPesoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txPesoKeyReleased
        // TODO add your handling code here:
          if(evt.getKeyCode()== KeyEvent.VK_ENTER)
                bt_cargar.doClick();
    }//GEN-LAST:event_txPesoKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jd_ValorDespacho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jd_ValorDespacho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jd_ValorDespacho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jd_ValorDespacho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jd_ValorDespacho dialog = new jd_ValorDespacho(new javax.swing.JFrame(), true);
                
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtExcel;
    private javax.swing.JComboBox<String> CboTransporte;
    private javax.swing.JTable Grilla;
    private javax.swing.JButton btAceptar;
    private javax.swing.JButton bt_cargar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFecha1;
    private javax.swing.JLabel lblTotalBulto;
    private javax.swing.JLabel lblTotalDesp;
    private javax.swing.JLabel lblTotalPeso;
    private javax.swing.JTextField txPeso;
    // End of variables declaration//GEN-END:variables
}
