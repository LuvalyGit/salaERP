/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import Conexion.ExeSql;
import Formularios.fmMain;
import java.sql.ResultSet;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cdiaz
 */
public class jdProtestos extends javax.swing.JDialog {

    /**
     * Creates new form jdProtestos
     */
    public jdProtestos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        CargaProtesto();
        GrillaProtestos.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent e){
            if (GrillaProtestos.getSelectedRowCount()>0)
                CargaGrillaCon(GrillaProtestos.getValueAt(GrillaProtestos.getSelectedRow(), 3).toString().trim());
        }});
        GrillaCon.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent e){
            if (GrillaCon.getSelectedRowCount()>0)
                CargaGrillaPago(GrillaCon.getValueAt(GrillaCon.getSelectedRow(), 3).toString().trim());
        }});
        GrillaPagado.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent e){
            if (GrillaPagado.getSelectedRowCount()>0)
                CargaGrillaConProtesto(GrillaPagado.getValueAt(GrillaPagado.getSelectedRow(), 6).toString().trim());
        }});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        GrillaProtestos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        GrillaCon = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        GrillaPagado = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        GrillaConProtesto = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        GrillaProtestos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Banco", "Detalle", "Cargo", "id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(GrillaProtestos);
        if (GrillaProtestos.getColumnModel().getColumnCount() > 0) {
            GrillaProtestos.getColumnModel().getColumn(0).setMinWidth(80);
            GrillaProtestos.getColumnModel().getColumn(0).setPreferredWidth(80);
            GrillaProtestos.getColumnModel().getColumn(0).setMaxWidth(80);
            GrillaProtestos.getColumnModel().getColumn(1).setMinWidth(100);
            GrillaProtestos.getColumnModel().getColumn(1).setPreferredWidth(100);
            GrillaProtestos.getColumnModel().getColumn(1).setMaxWidth(100);
            GrillaProtestos.getColumnModel().getColumn(3).setMinWidth(100);
            GrillaProtestos.getColumnModel().getColumn(3).setPreferredWidth(100);
            GrillaProtestos.getColumnModel().getColumn(3).setMaxWidth(100);
            GrillaProtestos.getColumnModel().getColumn(4).setMinWidth(0);
            GrillaProtestos.getColumnModel().getColumn(4).setPreferredWidth(0);
            GrillaProtestos.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        GrillaCon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Banco", "Detalle", "Abono", "id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(GrillaCon);
        if (GrillaCon.getColumnModel().getColumnCount() > 0) {
            GrillaCon.getColumnModel().getColumn(0).setMinWidth(80);
            GrillaCon.getColumnModel().getColumn(0).setPreferredWidth(80);
            GrillaCon.getColumnModel().getColumn(0).setMaxWidth(80);
            GrillaCon.getColumnModel().getColumn(1).setMinWidth(70);
            GrillaCon.getColumnModel().getColumn(1).setPreferredWidth(70);
            GrillaCon.getColumnModel().getColumn(1).setMaxWidth(70);
            GrillaCon.getColumnModel().getColumn(3).setMinWidth(80);
            GrillaCon.getColumnModel().getColumn(3).setPreferredWidth(80);
            GrillaCon.getColumnModel().getColumn(3).setMaxWidth(80);
            GrillaCon.getColumnModel().getColumn(4).setMinWidth(0);
            GrillaCon.getColumnModel().getColumn(4).setPreferredWidth(0);
            GrillaCon.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        GrillaPagado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Rut", "Nombre", "Documento", "Abono", "id", "id_cartola"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(GrillaPagado);
        if (GrillaPagado.getColumnModel().getColumnCount() > 0) {
            GrillaPagado.getColumnModel().getColumn(0).setMinWidth(80);
            GrillaPagado.getColumnModel().getColumn(0).setPreferredWidth(80);
            GrillaPagado.getColumnModel().getColumn(0).setMaxWidth(80);
            GrillaPagado.getColumnModel().getColumn(1).setMinWidth(70);
            GrillaPagado.getColumnModel().getColumn(1).setPreferredWidth(70);
            GrillaPagado.getColumnModel().getColumn(1).setMaxWidth(70);
            GrillaPagado.getColumnModel().getColumn(3).setMinWidth(80);
            GrillaPagado.getColumnModel().getColumn(3).setPreferredWidth(80);
            GrillaPagado.getColumnModel().getColumn(3).setMaxWidth(80);
            GrillaPagado.getColumnModel().getColumn(4).setMinWidth(100);
            GrillaPagado.getColumnModel().getColumn(4).setPreferredWidth(100);
            GrillaPagado.getColumnModel().getColumn(4).setMaxWidth(100);
            GrillaPagado.getColumnModel().getColumn(5).setMinWidth(0);
            GrillaPagado.getColumnModel().getColumn(5).setPreferredWidth(0);
            GrillaPagado.getColumnModel().getColumn(5).setMaxWidth(0);
            GrillaPagado.getColumnModel().getColumn(6).setMinWidth(0);
            GrillaPagado.getColumnModel().getColumn(6).setPreferredWidth(0);
            GrillaPagado.getColumnModel().getColumn(6).setMaxWidth(0);
        }

        GrillaConProtesto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Banco", "Detalle", "Abono", "id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(GrillaConProtesto);
        if (GrillaConProtesto.getColumnModel().getColumnCount() > 0) {
            GrillaConProtesto.getColumnModel().getColumn(0).setMinWidth(80);
            GrillaConProtesto.getColumnModel().getColumn(0).setPreferredWidth(80);
            GrillaConProtesto.getColumnModel().getColumn(0).setMaxWidth(80);
            GrillaConProtesto.getColumnModel().getColumn(1).setMinWidth(100);
            GrillaConProtesto.getColumnModel().getColumn(1).setPreferredWidth(100);
            GrillaConProtesto.getColumnModel().getColumn(1).setMaxWidth(100);
            GrillaConProtesto.getColumnModel().getColumn(3).setMinWidth(100);
            GrillaConProtesto.getColumnModel().getColumn(3).setPreferredWidth(100);
            GrillaConProtesto.getColumnModel().getColumn(3).setMaxWidth(100);
            GrillaConProtesto.getColumnModel().getColumn(4).setMinWidth(0);
            GrillaConProtesto.getColumnModel().getColumn(4).setPreferredWidth(0);
            GrillaConProtesto.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Cancel16.png"))); // NOI18N
        jButton1.setText("Cancelar");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/ok_16.png"))); // NOI18N
        jButton2.setText("Conciliar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(482, 482, 482)
                .addComponent(jButton1)
                .addGap(229, 229, 229)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
                        .addGap(7, 7, 7))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdProtestos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdProtestos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdProtestos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdProtestos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jdProtestos dialog = new jdProtestos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    public void CargaProtesto(){
        ResultSet Rs;
        ExeSql Sql = new ExeSql();
        DefaultTableModel Model = (DefaultTableModel) GrillaProtestos.getModel();
        fmMain.LimpiaGrilla(Model);
        
        try{
            Rs = Sql.Select("select bc.fecha,bb.nombre as banco, bc.detalle,  bc.cargo, bc.id from\n" +
                            " bco_cartola bc\n" +
                            " left join bco_cuentas bct on bc.cuenta=bct.id\n" +
                            " left join bco_bancos bb on bct.banco=bb.id\n" +
                            " where bc.asociado=false and bc.cargo>0 and bc.abono=0 and bc.detalle like '%Revers%' or bc.detalle like '%PROTES%'");
            while (Rs.next())
            {
               Model.addRow(new Object[] {
                                        Rs.getString("fecha"),
                                        Rs.getString("banco"),
                                        Rs.getString("detalle"),
                                        Rs.getInt("cargo"),
                                        Rs.getString("id")
                                        });  
            }
        
        }
        catch(Exception e){
            fmMain.Mensaje("Error al cargar datos de protestos: "+e);
        }
        finally{
            Sql.Close();
        }
    }
    
     public void CargaGrillaCon(String abono){
        ResultSet Rs;
        ExeSql Sql = new ExeSql();
        DefaultTableModel Model = (DefaultTableModel) GrillaCon.getModel();
        fmMain.LimpiaGrilla(Model);
        
        try{
            Rs = Sql.Select("select bc.fecha,bb.nombre as banco, bc.detalle,  bc.abono, bc.id from\n" +
                            "bco_cartola bc\n" +
                            "left join bco_cuentas bct on bc.cuenta=bct.id\n" +
                            "left join bco_bancos bb on bct.banco=bb.id\n" +
                            "where bc.asociado=false and bc.cargo=0 and bc.abono='"+abono+"'");
            while (Rs.next())
            {
               Model.addRow(new Object[] {
                                        Rs.getString("fecha"),
                                        Rs.getString("banco"),
                                        Rs.getString("detalle"),
                                        Rs.getInt("abono"),
                                        Rs.getString("id")
                                        });  
            }
        
        }
        catch(Exception e){
            fmMain.Mensaje("Error al cargar datos de protestos: "+e);
        }
        finally{
            Sql.Close();
        }
    }
     
     public void CargaGrillaPago(String abono){
        ResultSet Rs;
        ExeSql Sql = new ExeSql();
        DefaultTableModel Model = (DefaultTableModel) GrillaPagado.getModel();
        fmMain.LimpiaGrilla(Model);
        
        try{
            Rs = Sql.Select("select p.fechapago, c.rut,c.nombre,cxc.nrodocto, p.monto, p.id, p.id_cartola\n" +
                            "from cli_pagos p\n" +
                            "left join cli_cuentasxcobrar cxc on p.cuenta=cxc.id\n" +
                            "left join cliente c on cxc.rut=c.rut \n" +
                            "where p.id_cartola in (select bc.id from\n" +
                            "bco_cartola bc\n" +
                            "left join bco_cuentas bct on bc.cuenta=bct.id\n" +
                            "left join bco_bancos bb on bct.banco=bb.id\n" +
                            "where bc.asociado=true and bc.cargo=0 and bc.abono='"+abono+"')");
            while (Rs.next())
            {
               Model.addRow(new Object[] {
                                        Rs.getString("fechapago"),
                                        Rs.getString("rut"),
                                        Rs.getString("nombre").trim(),
                                        Rs.getString("nrodocto"),
                                        Rs.getInt("monto"),
                                        Rs.getInt("id"),
                                        Rs.getString("id_cartola")
                                        });  
            }
        
        }
        catch(Exception e){
            fmMain.Mensaje("Error al cargar datos de protestos: "+e);
        }
        finally{
            Sql.Close();
        }
    }
     
     public void CargaGrillaConProtesto(String id_cartola){
        ResultSet Rs;
        ExeSql Sql = new ExeSql();
        DefaultTableModel Model = (DefaultTableModel) GrillaConProtesto.getModel();
        fmMain.LimpiaGrilla(Model);
        
        try{
            Rs = Sql.Select("select bc.fecha,bb.nombre as banco, bc.detalle,  bc.abono, bc.id from\n" +
                            "bco_cartola bc\n" +
                            "left join bco_cuentas bct on bc.cuenta=bct.id\n" +
                            "left join bco_bancos bb on bct.banco=bb.id\n" +
                            "where bc.id='"+id_cartola+"'");
            while (Rs.next())
            {
               Model.addRow(new Object[] {
                                        Rs.getString("fecha"),
                                        Rs.getString("banco"),
                                        Rs.getString("detalle").trim(),
                                        Rs.getInt("abono"),
                                        Rs.getInt("id")
                                        });  
            }
        
        }
        catch(Exception e){
            fmMain.Mensaje("Error al cargar datos de protestos: "+e);
        }
        finally{
            Sql.Close();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable GrillaCon;
    private javax.swing.JTable GrillaConProtesto;
    private javax.swing.JTable GrillaPagado;
    private javax.swing.JTable GrillaProtestos;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
