/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import Conexion.ExeSql;
import Formularios.fmMain;
import Utilidades.ComboCodigos;
import Utilidades.Exporter;
import Utilidades.POI_excel;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DavidAlcaman
 */
public class jd_UbicacionesP extends javax.swing.JDialog {
   DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    private Object GrillaOCS;
    public static int pano; 
    public static int pmes;
    public static int pmes_oc;
    int id_trans=-1;
    String Ubicacion_sel="", UbicaCodigo_Sel="";
     public static Color DARK_GREEN = new Color(0,153,51);
    /**
     * Creates new form jdTrasnporte
     */
    public jd_UbicacionesP(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
         //Setea fecha inicial Desde y Hasta
        Date date = new Date();
  
//        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
//        Grilla.getColumnModel().getColumn(0).setCellRenderer(rightRenderer);
//        Grilla.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
//        Grilla.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        lblTotalDesp = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lbSku = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btOk = new javax.swing.JButton();
        lbskudesc = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sku", "Unidad", "cod_ubica", "Ubicacion", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.setCellSelectionEnabled(false);
        jScrollPane1.setViewportView(Grilla);
        Grilla.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(100);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(100);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(140);
            Grilla.getColumnModel().getColumn(1).setMinWidth(130);
            Grilla.getColumnModel().getColumn(1).setPreferredWidth(130);
            Grilla.getColumnModel().getColumn(1).setMaxWidth(180);
            Grilla.getColumnModel().getColumn(2).setMinWidth(150);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(150);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(150);
            Grilla.getColumnModel().getColumn(4).setMinWidth(70);
            Grilla.getColumnModel().getColumn(4).setPreferredWidth(70);
            Grilla.getColumnModel().getColumn(4).setMaxWidth(80);
        }

        lblTotalDesp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTotalDesp.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotalDesp.setText("0");

        jLabel1.setText("Total Sku");

        lbSku.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbSku.setText("sku");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Ubicaciones de un Producto ");

        btOk.setText("OK");
        btOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOkActionPerformed(evt);
            }
        });

        lbskudesc.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbskudesc.setText("desc");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbSku, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbskudesc, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btOk))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lblTotalDesp, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 772, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSku)
                    .addComponent(btOk, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(lbskudesc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblTotalDesp)
                        .addComponent(jLabel1)))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
//    private String Get_Ubicacion(String Ubica)
//    {
//         ExeSql Sql = new ExeSql();
//        ResultSet Rs, Rs1;
//        String Query2 ;
//        String strUbicacion = "";
//
//        try{
//            strUbicacion = Ubica.trim();
////            String ubicaArray[] = strUbicacion.split("\\.");
////
////            Query2 = "SELECT (b.bodega ||' - '|| r.rack ||' - '|| m.metro) as ubc\n" +
////            " from mt_bodega b, mt_rack r, mt_metro m\n" +
////            " where b.codigo='" + ubicaArray[0] + "' and r.codigo= " + ubicaArray[1] +  " and m.codigo= " + ubicaArray[2] + "  and m.rack=" + ubicaArray[1];
//            
//            Query2 = "SELECT nombre AS ubc FROM mt_codmetro WHERE codmetro = '"+strUbicacion+"'";            
//            
//            Rs1 = Sql.Select(Query2);
//            if (Rs1.next()){
//                strUbicacion =Rs1.getString("ubc").trim();
//                return strUbicacion;
//            }
//            else
//            {
//                return null;
//            }
//        }
//        catch (Exception e) {
//            System.out.println(e.getMessage());
//        } finally{
//            Sql.Close();
//        }
//        return null; 
//    }
    
    
    public void CargaBultos(String sku, String nombre){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        int SumaDespachos = 0;
        int SumaBultos = 0;
        int SumaPeso = 0;
        String Query = "";
        
                lblTotalDesp.setText(String.valueOf(SumaDespachos));
        
        int ContReg=0;
        lbSku.setText(sku);
        lbskudesc.setText(nombre);
        while(TableModel.getRowCount()>0)
             TableModel.removeRow(0);
         
        try {
//            Query = "select mp.sku, p.nombre,mp.ubicacion,u.unidad,sum(mp.cant) cantidad \n" +
//                    "from mt_productos mp\n" +
//                    "left join  producto p\n" +
//                    "on mp.sku = p.sku\n" +
//                    "left join par_unidad u on  u.codigo = p.unidad\n" +
//                    " where  mp.ubicacion not in  ('"  + fmMain.BodegaTransito() + "','"  + fmMain.BodegaNegativos() + "','"  + fmMain.BodegaPositivos() + "') \n" +
//                    "group by mp.sku, p.nombre,mp.ubicacion,u.unidad\n" +
//                    "having sum(mp.cant) <> 0 and mp.sku = '" + sku + "'";
            
            
            
            
            Query  = "SELECT mt.ubicacion, cm.nombre, mt.sku, mt.cant as cantidad, pu.unidad FROM mt_productos mt \n"+
                            "LEFT JOIN mt_codmetro cm ON mt.ubicacion = cm.codmetro "+
                            "LEFT JOIN producto p ON mt.sku = p.sku \n"+
                            "LEFT JOIN par_unidad pu ON pu.codigo = p.unidad \n"+
                            "WHERE mt.sku ='"+sku+"' AND mt.cant <> 0";
            
            
            
            
            
            Rs = Sql.Select(Query);
            
            while (Rs.next()){
                ContReg++;
                        TableModel.addRow(new Object[]{
                                               Rs.getString("sku").trim(),
                                               Rs.getString("unidad"),
                                               Rs.getString("ubicacion"),
                                                Rs.getString("nombre"),
                                               //Get_Ubicacion (Rs.getString("ubicacion")),
                                               //Rs.getInt("cantidad")
                                               Rs.getString("cantidad") 
                        });
                        
                //TableModel2.addRow(new Object[] {Rs.getString("ubicacion"),Rs.getString("nombre"),Rs.getString("sku"),Rs.getString("cant"), Rs.getString("unidad")});             
                        
                        
                SumaDespachos = SumaDespachos + Rs.getInt("cantidad");
                lblTotalDesp.setText(String.valueOf(SumaDespachos));
            }
                
               // Grilla_OC.changeSelection(0, 0 , false, false);
            
            Grilla.setDefaultRenderer(Object.class, new Elrender()); 
            
        } catch (Exception e) {
          
        } finally{
            Sql.Close();
        }
    }   
    
    
    public void abrir(String file ){
        
       try {
           String url = file;
           ProcessBuilder p = new ProcessBuilder();
           p.command("cmd.exe", "/c",url);
           p.start();
       } catch (IOException ex) {
           Logger.getLogger(jd_UbicacionesP.class.getName()).log(Level.SEVERE, null, ex);
       }
        
    }
    
    
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    
    public String GetUbicacion(){
        if (Ubicacion_sel .equals("")){
            Ubicacion_sel= Grilla.getValueAt(Grilla.getSelectedRow(),4).toString();
            UbicaCodigo_Sel = Grilla.getValueAt(Grilla.getSelectedRow(),3).toString();
        }
        return Ubicacion_sel;
    }
    
    public String GetUbicacionCod(){
        if (UbicaCodigo_Sel.equals("")){
            Ubicacion_sel= Grilla.getValueAt(Grilla.getSelectedRow(),4).toString();
            UbicaCodigo_Sel = Grilla.getValueAt(Grilla.getSelectedRow(),3).toString();
        }
        return UbicaCodigo_Sel;
    }
    
    
    
    private void btOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOkActionPerformed
        // TODO add your handling code here:
//        Ubicacion_sel= Grilla.getValueAt(Grilla.getSelectedRow(),4).toString();
//        UbicaCodigo_Sel = Grilla.getValueAt(Grilla.getSelectedRow(),3).toString();
        dispose();
        
        
    }//GEN-LAST:event_btOkActionPerformed

    
//    public Boolean selecciona_reg(){
//        Grilla.changeSelection(0, 0 , false, false);
//        return true;
//    }
    
    
    class Elrender extends DefaultTableCellRenderer {
         
        @Override
        public Component getTableCellRendererComponent(JTable tabla, Object valor, boolean isSelected, boolean hasFocus, int fila, int columna) {
        super.getTableCellRendererComponent(tabla,valor,isSelected, hasFocus, fila, columna);
         
            if( tabla.getValueAt(fila,2).toString().equals(fmMain.BodegaNCP()) || tabla.getValueAt(fila,2).toString().equals(fmMain.BodegaNCC())){
                
                if(isSelected==true){
                    this.setForeground(Color.white);    
                    this.setBackground(Color.RED);
                     this.setFont(new Font("Tahoma", Font.BOLD, 11));
                }else{
                
                    this.setForeground(Color.RED);
                    this.setBackground(Color.white);
                    this.setFont(new Font("Tahoma", Font.BOLD, 11));
                
                }
            
            }else if( tabla.getValueAt(fila,3).toString().contains("SALA")){
                
                
                if(isSelected==true){
                
                    this.setForeground(Color.white);
                    this.setBackground(DARK_GREEN);    
                    this.setFont(new Font("Tahoma", Font.BOLD, 11));
                    
                    
                
                }else{
                
                    this.setForeground(DARK_GREEN);
                    this.setBackground(Color.white);    
                    this.setFont(new Font("Tahoma", Font.BOLD, 11));
                    
                }
                
            
            }else {
                
                if(isSelected==true){
                
                    this.setForeground(Color.white);  
                    this.setBackground(Color.BLUE);
                    
                
                }else{
                
                    this.setForeground(Color.black);  
                    this.setBackground(Color.white);
                }
            } 
            
            
           
            
            
            return this;
        }
    }    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jd_UbicacionesP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jd_UbicacionesP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jd_UbicacionesP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jd_UbicacionesP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jd_UbicacionesP dialog = new jd_UbicacionesP(new javax.swing.JFrame(), true);
                
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla;
    private javax.swing.JButton btOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbSku;
    private javax.swing.JLabel lblTotalDesp;
    private javax.swing.JLabel lbskudesc;
    // End of variables declaration//GEN-END:variables
}
