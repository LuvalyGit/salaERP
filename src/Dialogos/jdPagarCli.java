/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import Conexion.ExeSql;
import Formularios.fmMain;
import PanelForm.pfTicketsLuvaly;
import Utilidades.SubeFTP;
import java.awt.Font;
import java.awt.HeadlessException;
import java.io.File;
import java.math.BigInteger;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David Alcaman
 */
public class jdPagarCli extends javax.swing.JDialog {
    int Tipo;
    int TipoPago; //1:Individual 2:Masivo
    BigInteger MontoTotal;
    String Cuenta;
    int PosFormaPago;
    int PosBanco;
    int PosCuenta;
    int CartolaBancaria;

    /**
     * Creates new form jdPagarPrv
     */
    
    public jdPagarCli(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        Tipo=-99;
        initComponents();
        CargaTipoPago();
        CargaBancos();
        cbBancoId.setVisible(false);
        cbFormaPagoId.setVisible(false);
        cbCuentaId.setVisible(false);
        lbPagado.setVisible(false);
        lbPagadoFecha.setVisible(false);
        Tipo=0;
        dtFechaPago.setDate(null);
        Grilla.getTableHeader().setFont(new Font("Arial", Font.BOLD, 9));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        txMontoPago = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txNroPago = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cbFormaPago = new javax.swing.JComboBox();
        cbFormaPagoId = new javax.swing.JComboBox();
        cbBancoId = new javax.swing.JComboBox();
        cbBanco = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        lbPagado = new javax.swing.JLabel();
        lbPagadoFecha = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        dtFechaPago = new org.jdesktop.swingx.JXDatePicker();
        jLabel3 = new javax.swing.JLabel();
        txObservacion = new javax.swing.JTextField();
        btGetMovimiento = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        cbCuenta = new javax.swing.JComboBox();
        cbCuentaId = new javax.swing.JComboBox();
        btAjuste = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txDv = new javax.swing.JTextField();
        txNombre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txRut = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btPagar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        btSolicitarAuto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Factura"));

        Grilla.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NUMERO", "FECHA", "ORDEN", "TOTAL", "id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Grilla);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Pago"));

        txMontoPago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txMontoPagoKeyTyped(evt);
            }
        });

        jLabel6.setText("Monto");

        jLabel7.setText("Forma de Pago");

        txNroPago.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txNroPagoFocusLost(evt);
            }
        });
        txNroPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNroPagoActionPerformed(evt);
            }
        });

        jLabel8.setText("Nro Documento");

        cbFormaPago.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbFormaPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFormaPagoActionPerformed(evt);
            }
        });

        cbFormaPagoId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbFormaPagoId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFormaPagoIdActionPerformed(evt);
            }
        });

        cbBancoId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbBancoId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBancoIdActionPerformed(evt);
            }
        });

        cbBanco.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBancoActionPerformed(evt);
            }
        });

        jLabel11.setText("Banco");

        lbPagado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbPagado.setForeground(new java.awt.Color(0, 102, 0));
        lbPagado.setText("PAGADO");

        lbPagadoFecha.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbPagadoFecha.setForeground(new java.awt.Color(0, 102, 0));
        lbPagadoFecha.setText("2015-08-01");

        jLabel12.setText("Fecha de Pago");

        jLabel3.setText("Observaci√≥n");

        btGetMovimiento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/derecha16.png"))); // NOI18N
        btGetMovimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGetMovimientoActionPerformed(evt);
            }
        });

        jLabel9.setText("Cuenta");

        cbCuenta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCuentaActionPerformed(evt);
            }
        });

        cbCuentaId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbCuentaId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCuentaIdActionPerformed(evt);
            }
        });

        btAjuste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/billetera24.png"))); // NOI18N
        btAjuste.setText("Ajustar");
        btAjuste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAjusteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel12)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txNroPago, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                                    .addComponent(dtFechaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btGetMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(125, 125, 125))
                            .addComponent(txObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbFormaPago, 0, 182, Short.MAX_VALUE)
                                    .addComponent(cbBanco, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbCuenta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbPagado)
                                            .addComponent(lbPagadoFecha))
                                        .addGap(36, 36, 36))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbFormaPagoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbBancoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addContainerGap())
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(cbCuentaId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap())))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txMontoPago, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btAjuste)
                                .addGap(0, 235, Short.MAX_VALUE))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbPagado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbPagadoFecha))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbFormaPagoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbBancoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel9)
                        .addComponent(cbCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbCuentaId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btGetMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txNroPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(dtFechaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txMontoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btAjuste))
                .addGap(0, 34, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Proveedor"));

        txDv.setEditable(false);

        txNombre.setEditable(false);

        jLabel1.setText("Rut");

        txRut.setEditable(false);

        jLabel2.setText("Nombre");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txRut, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txDv, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txDv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btPagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Peso16.png"))); // NOI18N
        btPagar.setText("Pagar");
        btPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPagarActionPerformed(evt);
            }
        });

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Cancel16.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btSolicitarAuto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/bloquear.png"))); // NOI18N
        btSolicitarAuto.setText("Solicitar Autorizacion");
        btSolicitarAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSolicitarAutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btSolicitarAuto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btPagar)
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(107, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelar)
                    .addComponent(btPagar)
                    .addComponent(btSolicitarAuto))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    

    public String getFechaPago() {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        return( sdf.format( (dtFechaPago.getDate()).getTime() ) );
        } catch (Exception e) {
            return "";
        }
        
    }
    
    public void CargaPago(String Pago,int Cant,int IdCartolaBancaria){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        BigInteger SumMontos = new BigInteger("0");  
        CartolaBancaria=0;
        
        // Si se paga mas de una factura, el monto no puede modificarse
        if(Cant>1){
            txMontoPago.setEditable(false);
            TipoPago=2;
        }
        else{
            txMontoPago.setEditable(true);
            TipoPago=1;
        }
            
            
        
        while(TableModel.getRowCount()>0)
                        TableModel.removeRow(0);    
        
        try {
            Rs = Sql.Select("select c.rut,c.dv,c.nombre,cxc.nrodocto, cxc.codigo_oc || '-' || case when cl.occh is null then '???' else cl.occh end as orden,\n" +
                            "cxc.femision,cxc.monto - cxc.pagado as monto,cxc.id\n" +
                            "from cli_cuentasxcobrar cxc\n" +
                            "left join cliente c on c.rut=cxc.rut\n" +
                            "left join ctactecli cl on c.rut=cl.rut and cxc.tipdocto=cl.tipdocto and cxc.nrodocto=cl.nrodocto\n" +
                            "where cxc.id in (" + Pago + ")");
            while(Rs.next()){
                txRut.setText(Rs.getString("Rut").trim());
                txDv.setText(Rs.getString("dv").trim());
                txNombre.setText(Rs.getString("Nombre").trim());
                
                TableModel.addRow(new Object[]{Rs.getString("NroDocto").trim(), 
                                               Rs.getString("femision").trim(), 
                                               Rs.getString("orden").trim(), 
                                               Rs.getInt("monto"),
                                               Rs.getInt("id")
                                               });
                SumMontos = SumMontos.add(new BigInteger(Rs.getString("monto"))) ;
            }
            Rs.next();
            txMontoPago.setText(fmMain.FormatoNumeroBigLimpio(SumMontos));
            MontoTotal = SumMontos;
            
            //Si es un pago amarrado ya con la cartola
            if(IdCartolaBancaria>0){
                Rs = Sql.Select("select ba.id,ca.nrodocumento,ca.fecha,ca.detalle,ca.abono,cu.id as CuentaID\n" +
                                "from bco_cartola ca\n" +
                                "left join bco_cuentas cu on ca.cuenta=cu.id\n" +
                                "left join bco_bancos ba on cu.banco=ba.id\n" +
                                "where ca.id=" + IdCartolaBancaria);
                Rs.next();
                cbFormaPagoId.setSelectedItem("6");
                cbBancoId.setSelectedItem(Rs.getString("id").trim());
                cbCuentaId.setSelectedItem(Rs.getString("CuentaID"));
                txNroPago.setText(Rs.getString("nrodocumento").trim());
                dtFechaPago.setDate(Rs.getDate("fecha"));
                txObservacion.setText(Rs.getString("detalle"));
                txMontoPago.setText(Rs.getString("abono"));
                
                PosFormaPago = cbFormaPago.getSelectedIndex();
                //-----------------------------------------------------------
                //Cambio: Le asigne los Id de (Banco y Cuenta) a la posicion de banco Banco y Cuenta 
                //Fecha: 13/11/2018
                //Autor Cristian Ram√≠rez
                 
//              PosBanco = cbBanco.getSelectedIndex();
//              PosCuenta = cbCuenta.getSelectedIndex();
                
                PosBanco = cbBancoId.getSelectedIndex();
                PosCuenta = cbCuentaId.getSelectedIndex();
                
                cbBanco.setSelectedIndex(PosBanco);
                cbCuenta.setSelectedIndex(PosCuenta);
                
                
                //-------------------------------------------------------------
                
                
                btGetMovimiento.setEnabled(false);
                txNroPago.setEditable(false);
                dtFechaPago.setEditable(false);
                txObservacion.setEditable(false);
                txMontoPago.setEditable(false);
                CartolaBancaria = IdCartolaBancaria;
                
            }
            
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }finally{
            Sql.Close();
        }
            
        
    }
    private void CargaTipoPago(){
    ExeSql Sql = new ExeSql();
    ResultSet Rs;
    
    cbFormaPago.removeAllItems();
    cbFormaPagoId.removeAllItems();
    
    try {
        Rs = Sql.Select("select codigo,nombre\n" +
                        "from par_general \n" +
                        "where tipo='TIPOPAGOCLI'\n" +
                        "and vigente=1\n" +
                        "order by codigo");
        while(Rs.next()){
            cbFormaPago.addItem(Rs.getString("nombre"));
            cbFormaPagoId.addItem(Rs.getString("codigo"));
        }
    } catch (Exception e) {
        fmMain.Mensaje(e.getMessage());
    } finally{
        Sql.Close();
    }
}
    
//------------------------------------------------------------------------------
// Carga BANCOS
//------------------------------------------------------------------------------
    private void CargaBancos(){
        ExeSql  Sql = new ExeSql();
        ResultSet Rs;

        cbBanco.removeAllItems();
        cbBancoId.removeAllItems();

        try {
            Rs = Sql.Select("select codigo, banco\n" +
                    "from par_banco\n" +
                    "order by codigo asc ");
            while(Rs.next()){
                cbBanco.addItem(Rs.getString("banco"));
                cbBancoId.addItem(Rs.getString("codigo"));
                
            }
        } catch (Exception e) {
            fmMain.Mensaje(e.getMessage());
        }finally{
            Sql.Close();
        }

    }
    public Integer GetPagado(){
        return Tipo;
    }
    
    private boolean ExisteNCC(){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        
        try {
            Rs = Sql.Select("select count(*) as Existe\n" +
                            "from ctactecli\n" +
                            "where tipdocto='NCC'\n" +
                            "and nrodocto="+ txNroPago.getText().trim() +"\n" +
                            "and rut=" + txRut.getText().trim());
            Rs.next();
            if(Rs.getInt("Existe")==0)
                if(Integer.valueOf(txNroPago.getText())<379)
                    return true;
                else    
                    return false;
            else
                return true;
                
        } catch (Exception e) {
            fmMain.Mensaje(e.getMessage());
            return false;
        } finally{
            Sql.Close();
        }
            
    }
    private String CupoNCP(){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        
        try {
            Rs = Sql.Select("select totaldocto - pagado as cupo\n" +
                            "from ctactecli\n" +
                            "where tipdocto='NCC'\n" +
                            "and nrodocto="+ txNroPago.getText().trim() +"\n" +
                            "and rut=" + txRut.getText().trim());
            Rs.next();
            return  Rs.getString("cupo");
                
        } catch (Exception e) {
            return "0";
        } finally{
            Sql.Close();
        }
    }
    private void btPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPagarActionPerformed
        
        double sumatoria = 0;
        for (int x = 0; x < Grilla.getRowCount(); x++) {
                sumatoria = sumatoria + Double.valueOf(Grilla.getValueAt(x, 3).toString().trim());
                sumatoria = Math.round(sumatoria);
                } 
        if (sumatoria < Double.valueOf(txMontoPago.getText().trim()) && !cbFormaPagoId.getSelectedItem().toString().trim().equals("9"))
        {
           fmMain.Mensaje("El monto a pagar no puede se menor al abono, revise su seleccion");
            return; 
        }
        if (sumatoria < Double.valueOf(txMontoPago.getText().trim()) && cbFormaPagoId.getSelectedItem().toString().trim().equals("9"))
        {
           fmMain.Mensaje("El monto a pagar no puede se menor al abono, revise su seleccion");
            return; 
        }
        //Validaci√≥n
        if(getFechaPago().isEmpty()){
            fmMain.Mensaje("Debe especificar la fecha de pago");
            return;
        }
        if(cbFormaPagoId.getSelectedItem().toString().equals("3") && cbBancoId.getSelectedItem().equals("0")){
            fmMain.Mensaje("El pago con CHEQUE debe tener un BANCO asociado");
            return;
        }
        if(cbFormaPagoId.getSelectedItem().toString().equals("3") && txNroPago.getText().equals("0")){
            fmMain.Mensaje("El pago con CHEQUE debe tener un NUMERO DE DOCUMENTO asociado");
            return;
        }
        
        
        if(!cbFormaPagoId.getSelectedItem().toString().trim().equals("9")){
            if(fmMain.OkCancel("¬øDesea realizar el pago?")== JOptionPane.OK_OPTION) {
                ExeSql Sql = new ExeSql();
                String NroPago="0";

                if(!txNroPago.getText().trim().isEmpty())
                    NroPago=txNroPago.getText().trim();
                try {
                    //Pago Individual
                    if(TipoPago==1){
                        Sql.ExeSql("insert into cli_pagos\n" +
                                    "(cuenta,tipopago,banco,monto,nrodocumento,fechapago,id_cartola)\n" +
                                    "values\n" +
                                    "("+ Grilla.getValueAt(0, 4).toString().trim() +","+ cbFormaPagoId.getSelectedItem().toString().trim() +","+ 
                                        cbBancoId.getSelectedItem().toString().trim() +"," + txMontoPago.getText().trim() +"," + 
                                        NroPago+",'" + getFechaPago() + "',"+ CartolaBancaria +")");
                    }
                    else{
                        for(int i=0 ; i<Grilla.getRowCount();i++){
                            Sql.ExeSql("insert into cli_pagos\n" +
                            "(cuenta,tipopago,banco,monto,nrodocumento,fechapago,id_cartola)\n" +
                            "values\n" +
                            "("+ Grilla.getValueAt(i, 4).toString().trim() +","+ 
                            cbFormaPagoId.getSelectedItem().toString().trim() +","+ 
                            cbBancoId.getSelectedItem().toString().trim() +"," + 
                            Grilla.getValueAt(i, 3).toString().trim() +"," + 
                            NroPago +",'" + 
                            getFechaPago() + "',"+ CartolaBancaria +")");
                        }

                    }

                    Sql.Commit();
                    JOptionPane.showMessageDialog(null,"Pagado");
                    Tipo=1;
                    dispose();
                } catch (SQLException | HeadlessException e) {
                        fmMain.Mensaje(e.getMessage());
                         Logger.getLogger(jdPagarCli.class.getName()).log(Level.SEVERE, null, e);
                        Sql.Rollback();

                }finally{
                    Sql.Close();
                }
            }
        }
        else if (cbFormaPagoId.getSelectedItem().toString().trim().equals("9")) {
            String nombre_archivo = "";
            if(fmMain.OkCancel("¬øDesea utilizar multa?")== JOptionPane.OK_OPTION) {
                ExeSql Sql = new ExeSql();
                String NroPago="0";
                if(JOptionPane.showConfirmDialog(rootPane, "¬øDesea subir archivo de multa?")==0){
                    String ruta ="", Query ="";
                    File f = new File("");
                    ExeSql sql = new ExeSql();
                    ResultSet rs = null;

                    String sistema = System.getProperty("os.name").toLowerCase();
                    if (sistema.contains("win"))
                    {
                        ruta = "c:/fotos2/multas/";
                        f = new File(ruta.substring(0,ruta.length()-1));
                    }
                    else{
                        ruta = "/fotos2/multas/";
                    }

                    if(!f.isDirectory()) {
                        String newFolder = ruta; //cualquierCarpeta es el nombre de la Carpeta que vamos a crear

                        File myNewFolder = new File(newFolder);
                        myNewFolder.mkdirs(); //creamos la carpeta
                    }
                    else
                    {
                        System.out.println("La carpeta ya estaba creada");
                    }
                    JFileChooser j=new JFileChooser();
                    j.setFileSelectionMode(JFileChooser.FILES_ONLY);//solo archivos y no carpetas
                    int estado=j.showOpenDialog(null);
                    if(estado== JFileChooser.APPROVE_OPTION){



                        String filename=j.getSelectedFile().getName();
                        nombre_archivo = "\\\\192.168.0.130\\Multas\\"+filename;
                        String[] split = filename.split("\\.");

                        String ext = split[split.length - 1];;

                        

                        System.out.println(filename);

                        
                        nombre_archivo = "\\\\\\\\192.168.0.130\\\\Multas\\\\"+filename;
                        String laruta = String.valueOf(j.getSelectedFile());
                        String rutafinal =  fmMain.GetStringDeFinal('\\', laruta);
                        String[] sas = laruta.split("//");
                        String path=j.getSelectedFile().getAbsolutePath();
                        
                        if (sistema.contains("win")){}
                        else {
                            rutafinal = filename;
                        }  

                        //                System.out.println(String.valueOf("RUTAAAAAA: "+ruta));
                        try
                        {

                            SubeFTP.SubeArch_imagen_multa(laruta, rutafinal,filename);
                            JOptionPane.showMessageDialog(null, "Archivo subido con √©xito.");
    //                        sql.Commit();
                        }
                        catch (Exception e)
                        {
                            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
                        }
                        finally
                        {
                            if(!txNroPago.getText().trim().isEmpty())
                                NroPago=txNroPago.getText().trim();
                            try {
                                //Pago Individual
                                if(TipoPago==1){
                                    Sql.ExeSql("insert into multas_autorizacion\n" +
                                        "(cuenta,tipopago,banco,monto,nrodocumento,fechapago,id_cartola,archivo)\n" +
                                        "values\n" +
                                        "("+ Grilla.getValueAt(0, 4).toString().trim() +","+ cbFormaPagoId.getSelectedItem().toString().trim() +","+ 
                                            cbBancoId.getSelectedItem().toString().trim() +"," + txMontoPago.getText().trim() +"," + 
                                            NroPago+",'" + getFechaPago() + "',"+ CartolaBancaria +",'"+nombre_archivo+"')");
                                }
                                else{
                                    for(int i=0 ; i<Grilla.getRowCount();i++){
                                        Sql.ExeSql("insert into multas_autorizacion\n" +
                                        "(cuenta,tipopago,banco,monto,nrodocumento,fechapago,id_cartola,archivo)\n" +
                                        "values\n" +
                                        "("+ Grilla.getValueAt(i, 4).toString().trim() +","+ 
                                        cbFormaPagoId.getSelectedItem().toString().trim() +","+ 
                                        cbBancoId.getSelectedItem().toString().trim() +"," + 
                                        Grilla.getValueAt(i, 3).toString().trim() +"," + 
                                        NroPago +",'" + 
                                        getFechaPago() + "',"+ CartolaBancaria +",'"+nombre_archivo+"')");
                                    }

                                }

                                Sql.Commit();
                                JOptionPane.showMessageDialog(null,"Multa ingresada, espere autorizaci√≥n.");
                                Tipo=1;
                                dispose();
                            } catch (SQLException | HeadlessException e) {
                                    fmMain.Mensaje(e.getMessage());
                                    Sql.Rollback();

                            }finally{
                                Sql.Close();
                            }
                        }
                    }

                }

                
            }
            
            
        }
        
        
        
        
    }//GEN-LAST:event_btPagarActionPerformed

    private void cbFormaPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFormaPagoActionPerformed
        if (Tipo != -99) {
            if (CartolaBancaria == 0) {
                cbFormaPagoId.setSelectedIndex(cbFormaPago.getSelectedIndex());
                if (cbFormaPagoId.getSelectedItem().toString().trim().equals("6")) {
                    txNroPago.setEditable(false);
                    dtFechaPago.setEditable(false);
                    txObservacion.setEditable(false);
                }
                else{
                    cbBanco.setSelectedIndex(-1);
                    cbCuenta.setSelectedIndex(-1);
                }
                if (cbFormaPagoId.getSelectedItem().toString().trim().equals("9")) {
                    cbBanco.setSelectedIndex(5);
                }
            }
            else{
                cbFormaPago.setSelectedIndex(PosFormaPago);
                cbFormaPagoId.setSelectedIndex(PosFormaPago);
            }
        }

    }//GEN-LAST:event_cbFormaPagoActionPerformed

    private void cbFormaPagoIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFormaPagoIdActionPerformed
        if(Tipo!=-99)
            cbFormaPago.setSelectedIndex(cbFormaPagoId.getSelectedIndex());
    }//GEN-LAST:event_cbFormaPagoIdActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void cbBancoIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBancoIdActionPerformed
        if(Tipo!=-99)
            cbBanco.setSelectedIndex(cbBancoId.getSelectedIndex());// TODO add your handling code here:
    }//GEN-LAST:event_cbBancoIdActionPerformed

    private void cbBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBancoActionPerformed
        if(Tipo!=-99){
            if(CartolaBancaria==0){
                cbBancoId.setSelectedIndex(cbBanco.getSelectedIndex());
                CargaCuentas();
            }
            else{
                cbBanco.setSelectedIndex(PosBanco);
                cbBancoId.setSelectedIndex(PosBanco);
            }
        }
            
    }//GEN-LAST:event_cbBancoActionPerformed
    
    private void CargaCuentas(){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        
        cbCuenta.removeAllItems();
        cbCuentaId.removeAllItems();
        
        try {
            Rs = Sql.Select("select id,cuenta\n" +
                            "from bco_cuentas \n" +
                            "where banco="+ cbBancoId.getSelectedItem().toString().trim() +"\n" +
                            "and cxc=true");
            while(Rs.next()){
                cbCuentaId.addItem(Rs.getString("id"));
                cbCuenta.addItem(Rs.getString("cuenta"));
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }
    }
    
    private void txNroPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNroPagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txNroPagoActionPerformed

    private void txNroPagoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txNroPagoFocusLost
        if(cbFormaPagoId.getSelectedItem().toString().equals("4") && !txNroPago.getText().isEmpty()){
            if(!ExisteNCC())
                fmMain.Mensaje("Nota de Credito no encontrada");
            else
                txMontoPago.setText(CupoNCP());
        }
    }//GEN-LAST:event_txNroPagoFocusLost

    private void txMontoPagoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txMontoPagoKeyTyped
        if(!Character.isDigit(evt.getKeyChar()))
            evt.consume();
    }//GEN-LAST:event_txMontoPagoKeyTyped

    private void btGetMovimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGetMovimientoActionPerformed
        jdBuscaCargoAbono Cabo = new jdBuscaCargoAbono(null, true);
        CartolaBancaria=Cabo.Show(cbCuentaId.getSelectedItem().toString() ,MontoTotal ,cbBanco.getSelectedItem().toString().trim(),cbCuenta.getSelectedItem().toString().trim());
        
        if(CartolaBancaria>0){
            ExeSql Sql = new ExeSql();
            ResultSet Rs;
            try {
                Rs = Sql.Select("select ca.fecha,ca.oficina,ca.nrodocumento,ca.detalle,ca.abono\n" +
                                "from bco_cartola ca\n" +
                                "where ca.id =" + CartolaBancaria);
                Rs.next();
                txNroPago.setText(Rs.getString("nrodocumento").trim());
                dtFechaPago.setDate(Rs.getDate("fecha"));
                txObservacion.setText(Rs.getString("detalle").trim());
                txMontoPago.setText(fmMain.SetGuardar(Rs.getString("abono").trim()));
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }finally{
                Sql.Close();
            }
        }
    }//GEN-LAST:event_btGetMovimientoActionPerformed

    private void cbCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCuentaActionPerformed
        if(Tipo!=99){
            if(CartolaBancaria==0)
                cbCuentaId.setSelectedIndex(cbCuenta.getSelectedIndex());
            else{
                
                //cbCuenta.setSelectedIndex(PosCuenta);
                //cbCuentaId.setSelectedIndex(PosCuenta);
                cbCuentaId.setSelectedIndex(cbCuenta.getSelectedIndex());
            }
        }
        
        
    }//GEN-LAST:event_cbCuentaActionPerformed

    private void cbCuentaIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCuentaIdActionPerformed
        if(CartolaBancaria>0)
            cbCuenta.setSelectedIndex(cbCuentaId.getSelectedIndex());        
    }//GEN-LAST:event_cbCuentaIdActionPerformed

    private void btSolicitarAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSolicitarAutoActionPerformed
        
        double sumatoria = 0;
        for (int x = 0; x < Grilla.getRowCount(); x++) {
                sumatoria = sumatoria + Double.valueOf(Grilla.getValueAt(x, 3).toString().trim());
                sumatoria = Math.round(sumatoria);
                } 
        if (sumatoria < Double.valueOf(txMontoPago.getText().trim()))
        {
           fmMain.Mensaje("El monto a pagar no puede se menor al abono, revise su seleccion");
            return; 
        }
        
        //Validaci√≥n
        if(getFechaPago().isEmpty()){
            fmMain.Mensaje("Debe especificar la fecha de pago");
            return;
        }
        if(cbFormaPagoId.getSelectedItem().toString().equals("3") && cbBancoId.getSelectedItem().equals("0")){
            fmMain.Mensaje("El pago con CHEQUE debe tener un BANCO asociado");
            return;
        }
        if(cbFormaPagoId.getSelectedItem().toString().equals("3") && txNroPago.getText().equals("0")){
            fmMain.Mensaje("El pago con CHEQUE debe tener un NUMERO DE DOCUMENTO asociado");
            return;
        }
        
        
        if(fmMain.OkCancel("¬øDesea solicitar la autorizacion?")== JOptionPane.OK_OPTION){
            String motivo;
            motivo = (JOptionPane.showInputDialog("Motivo del pago (120 caracteres max.)"));
            if (motivo.length()>=120){
               motivo = motivo.substring(0,119); 
            }
            
            ExeSql Sql = new ExeSql();
            String NroPago="0";
            
            if(!txNroPago.getText().trim().isEmpty())
                NroPago=txNroPago.getText().trim();
            try {
                //Pago Individual
                if(TipoPago==1){
                    Sql.ExeSql("insert into cli_pagos_autorizacion\n" +
                        "(cuenta,tipopago,banco,monto,nrodocumento,fechapago,id_cartola, tipo_autorizacion, motivo)\n" +
                        "values\n" +
                        "("+ Grilla.getValueAt(0, 4).toString().trim() +","+ cbFormaPagoId.getSelectedItem().toString().trim() +","+ 
                            cbBancoId.getSelectedItem().toString().trim() +"," + txMontoPago.getText().trim() +"," + 
                            NroPago+",'" + getFechaPago() + "',"  + CartolaBancaria +", 0, '"+ motivo.trim()+"')");
                }
                else{
                    for(int i=0 ; i<Grilla.getRowCount();i++){
                        Sql.ExeSql("insert into cli_pagos_autorizacion\n" +
                        "(cuenta,tipopago,banco,monto,nrodocumento,fechapago,id_cartola, tipo_autorizacion, motivo)\n" +
                        "values\n" +
                        "("+ Grilla.getValueAt(i, 4).toString().trim() +","+ 
                        cbFormaPagoId.getSelectedItem().toString().trim() +","+ 
                        cbBancoId.getSelectedItem().toString().trim() +"," + 
                        Grilla.getValueAt(i, 3).toString().trim() +"," + 
                        NroPago +",'" + 
                        getFechaPago() + "',"+ CartolaBancaria +", 0, '"+motivo.trim()+"')");
                    }
                    
                }
                
                Sql.Commit();
                JOptionPane.showMessageDialog(null,"Solicitud enviada");
                Tipo=1;
                dispose();
            } catch (SQLException | HeadlessException e) {
                    fmMain.Mensaje(e.getMessage());
                    Sql.Rollback();
            
            }finally{
                Sql.Close();
            }
        }
    }//GEN-LAST:event_btSolicitarAutoActionPerformed

    private void btAjusteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAjusteActionPerformed
       int monto_original = Integer.valueOf(txMontoPago.getText().trim());
        int monto_ajuste = Integer.valueOf(JOptionPane.showInputDialog("Monto Final (no puede ser superior a "+txMontoPago.getText().trim()+"):"));
        if (monto_ajuste <= monto_original)
        {
            txMontoPago.setText(String.valueOf(monto_ajuste));
        }
    }//GEN-LAST:event_btAjusteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdPagarPrv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdPagarPrv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdPagarPrv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdPagarPrv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jdPagarPrv dialog = new jdPagarPrv(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla;
    public javax.swing.JButton btAjuste;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btGetMovimiento;
    public javax.swing.JButton btPagar;
    public javax.swing.JButton btSolicitarAuto;
    private javax.swing.JComboBox cbBanco;
    private javax.swing.JComboBox cbBancoId;
    private javax.swing.JComboBox cbCuenta;
    private javax.swing.JComboBox cbCuentaId;
    private javax.swing.JComboBox cbFormaPago;
    private javax.swing.JComboBox cbFormaPagoId;
    private org.jdesktop.swingx.JXDatePicker dtFechaPago;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbPagado;
    private javax.swing.JLabel lbPagadoFecha;
    private javax.swing.JTextField txDv;
    private javax.swing.JTextField txMontoPago;
    private javax.swing.JTextField txNombre;
    private javax.swing.JTextField txNroPago;
    private javax.swing.JTextField txObservacion;
    private javax.swing.JTextField txRut;
    // End of variables declaration//GEN-END:variables
}
