/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import Conexion.ExeSql;
import Formularios.fmMain;
import Utilidades.Ftp;
import Utilidades.ImageSelection;
import Utilidades.SubeFTP;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David Alcaman
 */
public class jdPagadoPrvCli extends javax.swing.JDialog {
    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    
    public jdPagadoPrvCli(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        Grilla.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pmMenuPagos = new javax.swing.JPopupMenu();
        miReversarPago = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txTotalPagado = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txTotalCuota = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txDiferencia = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        miReversarPago.setText("Solicitar Reversa (Clientes)");
        miReversarPago.setToolTipText("");
        miReversarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miReversarPagoActionPerformed(evt);
            }
        });
        pmMenuPagos.add(miReversarPago);

        jMenuItem1.setText("jMenuItem1");
        pmMenuPagos.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Tipo Pago", "Banco", "Numero", "Usuario", "Monto Pagado", "id_cuenta", "id_pago", "PDF", "archivo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.setComponentPopupMenu(pmMenuPagos);
        Grilla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                GrillaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(90);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(90);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(90);
            Grilla.getColumnModel().getColumn(6).setMinWidth(0);
            Grilla.getColumnModel().getColumn(6).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(6).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(7).setMinWidth(0);
            Grilla.getColumnModel().getColumn(7).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(7).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(9).setMinWidth(0);
            Grilla.getColumnModel().getColumn(9).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(9).setMaxWidth(0);
        }

        jLabel1.setText("Total Pagado");

        txTotalPagado.setEditable(false);
        txTotalPagado.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txTotalPagado.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txTotalPagado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txTotalPagadoActionPerformed(evt);
            }
        });

        jLabel2.setText("Total Cuota");

        txTotalCuota.setEditable(false);
        txTotalCuota.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel3.setText("Diferencia");

        txDiferencia.setEditable(false);
        txDiferencia.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jButton1.setText("Cargar Imagen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1032, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(683, 683, 683)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txTotalPagado, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addComponent(txTotalCuota)
                            .addComponent(txDiferencia))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txTotalPagado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txTotalCuota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txDiferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txTotalPagadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txTotalPagadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txTotalPagadoActionPerformed

    private void miReversarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miReversarPagoActionPerformed
        if (this.getTitle().equals("Pagos Proveedor"))
        {
            fmMain.Mensaje("Reversa solo valida para pago de clientes");
            return;
        }
        
        ExeSql SqlR = new ExeSql();
        int cli_cartola;
        int cli_cuenta;
        int cli_pago;
        String motivo;
        ResultSet Rs;
        
        if(fmMain.OkCancel("Se solicitara la reversa del pago seleccionado")== JOptionPane.OK_OPTION){
               try{ 
            motivo = (JOptionPane.showInputDialog("Motivo de la reversa (120 caracteres max.)"));
            if (motivo.length()>=120){
               motivo = motivo.substring(0,119); 
            }
            
            cli_cuenta  = Integer.valueOf(Grilla.getValueAt(Grilla.getSelectedRow(), 6).toString().trim());
            cli_pago    = Integer.valueOf(Grilla.getValueAt(Grilla.getSelectedRow(), 7).toString().trim());
            
            
            Rs = SqlR.Select("select tipopago, banco, monto, nrodocumento, fechapago, id_cartola from cli_pagos where id="+cli_pago);
            Rs.next();
                
            SqlR.ExeSql("insert into cli_pagos_autorizacion\n" +
                        "(cuenta,tipopago,banco,monto,nrodocumento,fechapago,id_cartola, tipo_autorizacion, motivo)\n" +
                        "values\n" +
                        "("+ cli_cuenta +","+ Rs.getString("tipopago").trim() +","+ 
                            Rs.getString("banco").trim() +"," + Rs.getString("monto").trim() +"," + 
                            Rs.getString("nrodocumento").trim() +",'" + Rs.getString("fechapago").trim() + "',"+ Rs.getString("id_cartola").trim() +", 1, '" +motivo.trim()+"')");
            SqlR.Commit();
            fmMain.Mensaje("Solicitacion enviada.");
               }
               catch (Exception e)
               {
                   SqlR.Rollback();
                   fmMain.Mensaje("Error al enviar solicitud. "+e);
               }
             finally {
                   SqlR.Close();
               }
         }
         
         
    }//GEN-LAST:event_miReversarPagoActionPerformed

    private void GrillaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GrillaKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_F12 ) {
            boolean bol = (boolean) Grilla.getValueAt(Grilla.getSelectedRow(),8);
            String id = Grilla.getValueAt(Grilla.getSelectedRow(),7).toString();
            String archivo = Grilla.getValueAt(Grilla.getSelectedRow(),9).toString();
            if(bol && archivo.isEmpty()){
                ExeSql sql = new ExeSql();
                ResultSet rs = null;
                
                try {
                    rs=sql.Select("select archivo from cli_pagos where id = '"+id+"' limit 1");
                    rs.next();
                    if(rs.getString("archivo")!=null){
                        CargaPdf(id, rs.getString("archivo"));
                    }
                    else {
                        JOptionPane.showMessageDialog(null, "No posee archivo de imagen");
                    }
                } catch (SQLException ex) {
                    fmMain.Mensaje(ex.getMessage());
                }
                finally {
                    sql.Close();
                }
            }
            else if(bol && !archivo.isEmpty()) {
                CargaPdfTransferencia(id, archivo);
            }
        }        
    }//GEN-LAST:event_GrillaKeyReleased
    public void CargaPdfTransferencia(String id, String Voucher){
        ResultSet Rs;
        ExeSql Sql = new ExeSql();
        String server,user,pass,ruta_local="";
        int puerto =21;
         String rutaimage="";
          String rutrans="";
        try {

//            server= "192.168.0.130";
//            user="voucher";
//            pass="V2369";
            
            
           //trae datos ftp
            server="";
            puerto=0;
            user=""; 
            pass="";
            
            	Rs = Sql.Select("SELECT * from conexiones where tipo='multa_tran'");
                if (Rs.next())
                {
                    if(!fmMain.GetInternet()){
                        server = Rs.getString("serv");
                        user  = Rs.getString("usu");
                        puerto  = Rs.getInt("port");
                        pass = Rs.getString("pass");
                    }
                    else {
                        server = "186.67.157.227";
                        user  = Rs.getString("usu");
                        puerto  = 21;
                        pass = Rs.getString("pass");
                    }
                }
           //trae datos ftp
            
            Rs = Sql.Select("SELECT count(*) as hay \n" +
                            "from ctacteprv c\n" +
                            "left join prv_cuentasxpagar pc on pc.nrodocto = c.nrodocto\n" +
                            "left join prv_pagos pp on pp.cuenta = pc.id\n" +
                            "where c.tipdocto = 'MUL' and pp.id = "+id+"\n" +
                            "");
            Rs.next();
            if (Rs.getInt("hay")>0)
            {
                Rs = Sql.Select("SELECT pp.id, c.archivo as pdf \n" +
                "from ctacteprv c\n" +
                "left join prv_cuentasxpagar pc on pc.nrodocto = c.nrodocto\n" +
                "left join prv_pagos pp on pp.cuenta = pc.id\n" +
                "where c.tipdocto = 'MUL' and pp.id = "+id+"");
                Rs.next();
                if (Rs.getString("pdf") != null)
                {

                    //Verifica SO
                    String sistema = System.getProperty("os.name").toLowerCase();
                    File folder = new File("");
                    if (sistema.contains("win"))
                    {
                         ruta_local = "c:/fotos2/multa/";
                         folder = new File(ruta_local);
                    }
                    else{
                          ruta_local = "/fotos2/multa/";
                          folder = new File(ruta_local);
                    }
                    if (!folder.exists())
                    {
                        folder.mkdir();
                    }
                    String archivo = "";

                    rutaimage = Rs.getString("pdf");
                    
                    if (Rs.getString("pdf") != null)
                    {
                        
                        archivo = fmMain.GetStringDeFinal('\\', rutaimage);
                        rutrans = fmMain.GetStringDeFinal('\\', rutaimage);
                        System.out.println(rutrans);
                        System.out.println(archivo);
                    }
//                            String rutrans="";
//                            if (Transporte == 1)
//                            {
//                                rutrans = "/tnt/";
//                                //archivo = rutaimage.substring(33,rutaimage.length());
//                                archivo = fmMain.GetStringDeFinal('\\', rutaimage);
//                            }
//                            else if (Transporte == 7)
//                            {
//                                rutrans = "/blue/";
//                                //archivo = rutaimage.substring(34,rutaimage.length());
//                                archivo = fmMain.GetStringDeFinal('\\', rutaimage);
//                            }
//                            else
//                                {
//                                rutrans = "/";
//                                archivo = fmMain.GetStringDeFinal('\\', rutaimage);
//                            }
                      
//                        rutrans = "/";
//                        archivo = fmMain.GetStringDeFinal('\\', rutaimage);
                    
//                    String  Archivo_buscado = Ftp.busca_archivoFTP(server, puerto, user, pass, ruta_local, "",archivo);
//                   if (Archivo_buscado.equals("") )
//                   {
                    Ftp.baja_archivo_ftp(server, puerto,user, pass,"/" + rutrans,ruta_local + archivo);
                    ImageIcon image = new ImageIcon(ruta_local + archivo);
                    File file = new File(archivo);
                    File pathCompleto = new File(ruta_local + file);
                    Desktop.getDesktop().open(pathCompleto); 
//                   }

                    
//                   else
//                   {
//                       rutrans = "/";
//                       Ftp.baja_archivo_ftp(server, puerto,user, pass,rutrans+archivo,ruta_local + Archivo_buscado);
//                       File file = new File(archivo);
//                       File pathCompleto = new File(ruta_local + file);
//                       Desktop.getDesktop().open(pathCompleto); 
//                   }
                    
                                      
                }
               
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
        finally{
            Sql.Close();
            
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nombre_archivo = "";
        String id = Grilla.getValueAt(Grilla.getSelectedRow(),7).toString();
        boolean bol = (boolean) Grilla.getValueAt(Grilla.getSelectedRow(),8);
        String pago = Grilla.getValueAt(Grilla.getSelectedRow(),1).toString().trim();
        if(!bol && pago.equals("MULTA")) {
            if(JOptionPane.showConfirmDialog(rootPane, "¿Desea subir archivo de multa?")==0){
                        String ruta ="", Query ="";
                        
                        File f = new File("");
                        ExeSql sql = new ExeSql();
                        ResultSet rs = null;

                        String sistema = System.getProperty("os.name").toLowerCase();
                        if (sistema.contains("win"))
                        {
                            ruta = "c:/fotos2/multas/";
                            f = new File(ruta.substring(0,ruta.length()-1));
                        }
                        else{
                            ruta = "/fotos2/multas/";
                        }

                        if(!f.isDirectory()) {
                            String newFolder = ruta; //cualquierCarpeta es el nombre de la Carpeta que vamos a crear

                            File myNewFolder = new File(newFolder);
                            myNewFolder.mkdirs(); //creamos la carpeta
                        }
                        else
                        {
                            System.out.println("La carpeta ya estaba creada");
                        }
                        JFileChooser j=new JFileChooser();
                        j.setFileSelectionMode(JFileChooser.FILES_ONLY);//solo archivos y no carpetas
                        int estado=j.showOpenDialog(null);
                        if(estado== JFileChooser.APPROVE_OPTION){



                            String filename=j.getSelectedFile().getName();
                            nombre_archivo = "\\\\\\\\192.168.0.130\\\\Multas\\\\"+filename;
                            String laruta = String.valueOf(j.getSelectedFile());
                            String rutafinal =  fmMain.GetStringDeFinal('\\', laruta);
                            String[] sas = laruta.split("//");
                            String path=j.getSelectedFile().getAbsolutePath();
                            



                            System.out.println(filename);



                            String conection = String.valueOf(laruta);
                            //                System.out.println(String.valueOf("RUTAAAAAA: "+ruta));
                            try
                            {
                                 if (sistema.contains("win")){}
                                else {
                                    rutafinal = filename;
                                }
                                System.out.println(laruta);
                                System.out.println(rutafinal);
                                System.out.println(filename);
                                SubeFTP.SubeArch_imagen_multa(laruta, rutafinal,filename);
                                
        //                        sql.Commit();
                            }
                            catch (Exception e)
                            {
                                JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
                            }
                            finally
                            {
                                try {
                                    sql.ExeSqlInt("update cli_pagos set archivo = '"+nombre_archivo+"' where id = "+id+"");
                                } catch (SQLException ex) {
                                    Logger.getLogger(jdPagadoPrvCli.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                finally {
                                    JOptionPane.showMessageDialog(null, "Archivo subido con éxito.");
                                }
                                
                            }
                        }

                    }
        }
        else if (bol) {
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar multa sin archivo.");
        }
        else if (pago.equals("MULTA")) {
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar multa.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    public void CargaPdf(String id, String Voucher){
        ResultSet Rs;
        ExeSql Sql = new ExeSql();
        String server,user,pass,ruta_local="";
        int puerto =21;
         String rutaimage="";
          String rutrans="";
        try {

//            server= "192.168.0.130";
//            user="voucher";
//            pass="V2369";
            
            
           //trae datos ftp
            server="";
            puerto=0;
            user=""; 
            pass="";
            
            	Rs = Sql.Select("SELECT * from conexiones where tipo='multa'");
                if (Rs.next())
                {
                    if(!fmMain.GetInternet()){
                        server = Rs.getString("serv");
                        user  = Rs.getString("usu");
                        puerto  = Rs.getInt("port");
                        pass = Rs.getString("pass");
                    }
                    else {
                        server = "186.67.157.227";
                        user  = Rs.getString("usu");
                        puerto  = 21;
                        pass = Rs.getString("pass");
                    }
                }
           //trae datos ftp
            
            Rs = Sql.Select("SELECT count(*) as hay from cli_pagos where id='"+id+"'");
            Rs.next();
            if (Rs.getInt("hay")>0)
            {
                Rs = Sql.Select("SELECT archivo as pdf from cli_pagos where id='"+id+"'");
                Rs.next();
                if (Rs.getString("pdf") != null)
                {

                    //Verifica SO
                    String sistema = System.getProperty("os.name").toLowerCase();
                    File folder = new File("");
                    if (sistema.contains("win"))
                    {
                         ruta_local = "c:/fotos2/multa/";
                         folder = new File(ruta_local);
                    }
                    else{
                          ruta_local = "/fotos2/multa/";
                          folder = new File(ruta_local);
                    }
                    if (!folder.exists())
                    {
                        folder.mkdir();
                    }
                    String archivo = "";

                    rutaimage = Rs.getString("pdf");
                    
                    if (Rs.getString("pdf") != null)
                    {
                        
                        archivo = fmMain.GetStringDeFinal('\\', rutaimage);
                        rutrans = fmMain.GetStringDeFinal('\\', rutaimage);
                        System.out.println(rutrans);
                        System.out.println(archivo);
                    }
//                            String rutrans="";
//                            if (Transporte == 1)
//                            {
//                                rutrans = "/tnt/";
//                                //archivo = rutaimage.substring(33,rutaimage.length());
//                                archivo = fmMain.GetStringDeFinal('\\', rutaimage);
//                            }
//                            else if (Transporte == 7)
//                            {
//                                rutrans = "/blue/";
//                                //archivo = rutaimage.substring(34,rutaimage.length());
//                                archivo = fmMain.GetStringDeFinal('\\', rutaimage);
//                            }
//                            else
//                                {
//                                rutrans = "/";
//                                archivo = fmMain.GetStringDeFinal('\\', rutaimage);
//                            }
                      
//                        rutrans = "/";
//                        archivo = fmMain.GetStringDeFinal('\\', rutaimage);
                    
//                    String  Archivo_buscado = Ftp.busca_archivoFTP(server, puerto, user, pass, ruta_local, "",archivo);
//                   if (Archivo_buscado.equals("") )
//                   {
                    Ftp.baja_archivo_ftp(server, puerto,user, pass,"/" + rutrans,ruta_local + archivo);
                    ImageIcon image = new ImageIcon(ruta_local + archivo);
                    jLabel1.setIcon(image);
                    File file = new File(archivo);
                    File pathCompleto = new File(ruta_local + file);
                    Desktop.getDesktop().open(pathCompleto); 
//                   }

                    
//                   else
//                   {
//                       rutrans = "/";
//                       Ftp.baja_archivo_ftp(server, puerto,user, pass,rutrans+archivo,ruta_local + Archivo_buscado);
//                       File file = new File(archivo);
//                       File pathCompleto = new File(ruta_local + file);
//                       Desktop.getDesktop().open(pathCompleto); 
//                   }
                    
                                      
                }
               
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
        finally{
            Sql.Close();
            
        }
    }
    public void CargaPagosCli(String cuenta){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        double Sumador=0;
        
        try {
            Rs = Sql.Select("select p.id, p.cuenta, p.fechapago as fecha,g.nombre,b.banco,p.nrodocumento,p.monto,p.usuario,\n" +
                            "p.archivo\n" +
                            "from cli_pagos p\n" +
                            "left join par_general g on g.tipo='TIPOPAGOCLI' and g.codigo=p.tipopago\n" +
                            "left join par_banco b on b.codigo=p.banco\n" +
                            "where p.cuenta=" + cuenta );
            
            while (Rs.next()){
                
                boolean archivo = false;
                if(Rs.getString("archivo").trim().isEmpty()){
                    archivo = false;
                }
                else {
                    archivo = true;
                }
                TableModel.addRow(new Object[]{Rs.getString("fecha").trim(), 
                                               Rs.getString("nombre").trim(), 
                                               Rs.getString("banco").trim(),
                                               Rs.getString("nrodocumento").trim(), 
                                               Rs.getString("usuario").trim(), 
                                               fmMain.FormatoTotal(Rs.getDouble("monto")),
                                               Rs.getString("cuenta").trim(), 
                                               Rs.getString("id").trim(),
                                               archivo, ""});
                Sumador = Sumador + Rs.getDouble("monto");
            }
            txTotalPagado.setText(fmMain.FormatoTotal(Sumador));
            
            Rs = Sql.Select("select monto, monto-pagado as diferencia from cli_cuentasxcobrar where id=" + cuenta);
            Rs.next();
            txTotalCuota.setText(fmMain.FormatoTotal(Rs.getDouble("monto")));
            txDiferencia.setText(fmMain.FormatoTotal(Rs.getDouble("diferencia")));
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally{
            Sql.Close();
        }
        
    }
    public void CargaPagosPrv(String cuenta, String tipo){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        double Sumador=0;
        
        try {
            Rs = Sql.Select("select p.id, p.cuenta, p.fechapago as fecha,g.nombre,b.banco,p.nrodocumento,p.monto,p.usuario\n" +
                            "from prv_pagos p\n" +
                            "left join par_general g on g.tipo='TIPOPAGOPRV' and g.codigo=p.tipopago\n" +
                            "left join par_banco b on b.codigo=p.banco\n" +
                            "where p.cuenta=" + cuenta );
            
            while (Rs.next()){
                boolean archivo = false;
                String file = "";
                if(tipo.equals("MUL")){
                    ResultSet rss = Sql.Select("select c.archivo\n" +
                                            "from ctacteprv c\n" +
                                            "left join prv_cuentasxpagar pp on pp.nrodocto = c.nrodocto\n" +
                                            "where pp.id = "+cuenta+" and c.tipdocto = 'MUL'");
                    rss.next();
                    
                    if(rss.getString("archivo").trim().isEmpty()){
                        archivo = false;
                    }
                    else {
                        archivo = true;
                        file = rss.getString("archivo").trim();
                    }
                }
                else {
                    archivo = false;
                }
                TableModel.addRow(new Object[]{Rs.getString("fecha").trim(), 
                                               Rs.getString("nombre").trim(), 
                                               Rs.getString("banco").trim(),
                                               Rs.getString("nrodocumento").trim(), 
                                               Rs.getString("usuario").trim(), 
                                               fmMain.FormatoTotal(Rs.getDouble("monto")),
                                               Rs.getString("cuenta").trim(), 
                                               Rs.getString("id").trim(),
                                               archivo,file});
                Sumador = Sumador + Rs.getDouble("monto");
            }
            txTotalPagado.setText(fmMain.FormatoTotal(Sumador));
            
            Rs = Sql.Select("select monto, monto-pagado as diferencia from prv_cuentasxpagar where id=" + cuenta);
            Rs.next();
            txTotalCuota.setText(fmMain.FormatoTotal(Rs.getDouble("monto")));
            txDiferencia.setText(fmMain.FormatoTotal(Rs.getDouble("diferencia")));
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally{
            Sql.Close();
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdPagadoPrvCli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdPagadoPrvCli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdPagadoPrvCli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdPagadoPrvCli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jdPagadoPrvCli dialog = new jdPagadoPrvCli(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem miReversarPago;
    private javax.swing.JPopupMenu pmMenuPagos;
    private javax.swing.JTextField txDiferencia;
    private javax.swing.JTextField txTotalCuota;
    private javax.swing.JTextField txTotalPagado;
    // End of variables declaration//GEN-END:variables
}
