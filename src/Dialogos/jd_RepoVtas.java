/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import Conexion.ExeSql;
import Formularios.fmMain;
import Utilidades.ComboCodigos;
import Utilidades.Exporter;
import Utilidades.POI_excel;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DavidAlcaman
 */
public class jd_RepoVtas extends javax.swing.JDialog {
   DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
   DefaultTableCellRenderer CenterRenderer = new DefaultTableCellRenderer();
    private Object GrillaOCS;
    public static int pano; 
    public static int pmes;
    public static int pmes_oc;
    int id_trans=-1;
    String Ubicacion_sel="", UbicaCodigo_Sel="";
    /**
     * Creates new form jdTrasnporte
     */
    public jd_RepoVtas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
         //Setea fecha inicial Desde y Hasta
        Date date = new Date();
  
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        CenterRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        Grilla.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        Grilla.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        Grilla.getColumnModel().getColumn(4).setCellRenderer(CenterRenderer);
        
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        btOk = new javax.swing.JButton();
        lblAñoAnt = new javax.swing.JLabel();
        LblAñoAct = new javax.swing.JLabel();
        lblMes = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblAño = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Grilla.setAutoCreateRowSorter(true);
        Grilla.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rut", "Cliente", "Año Anterior", "Año Actual", "Variacion %"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.setColumnSelectionAllowed(true);
        Grilla.setComponentPopupMenu(jPopupMenu1);
        Grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Grilla);
        Grilla.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(80);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(130);
            Grilla.getColumnModel().getColumn(1).setMinWidth(250);
            Grilla.getColumnModel().getColumn(1).setPreferredWidth(250);
            Grilla.getColumnModel().getColumn(1).setMaxWidth(300);
            Grilla.getColumnModel().getColumn(2).setMinWidth(80);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(130);
            Grilla.getColumnModel().getColumn(3).setMinWidth(80);
            Grilla.getColumnModel().getColumn(3).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(3).setMaxWidth(130);
            Grilla.getColumnModel().getColumn(4).setMinWidth(80);
            Grilla.getColumnModel().getColumn(4).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(4).setMaxWidth(130);
        }

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Ordenes de Compra por Cliente Año Actual y Año Anterior");

        btOk.setText("OK");
        btOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOkActionPerformed(evt);
            }
        });

        lblAñoAnt.setText("Año Ant");

        LblAñoAct.setText("Año Act");

        lblMes.setText("MES");

        jLabel1.setText("MES:");

        jLabel2.setText("AÑO");

        lblAño.setText("AÑO");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(441, 441, 441))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 890, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAño)
                                    .addComponent(lblMes))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btOk))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(440, 440, 440)
                        .addComponent(lblAñoAnt)
                        .addGap(96, 96, 96)
                        .addComponent(LblAñoAct)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btOk, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(lblAño))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(lblMes))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAñoAnt)
                    .addComponent(LblAñoAct))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private String Get_Ubicacion(String Ubica)
    {
         ExeSql Sql = new ExeSql();
        ResultSet Rs, Rs1;
        String Query2 ;
        String strUbicacion = "";

        try{
            strUbicacion = Ubica.trim();
            String ubicaArray[] = strUbicacion.split("\\.");

            Query2 = "SELECT (b.bodega ||' - '|| r.rack ||' - '|| m.metro) as ubc\n" +
            " from mt_bodega b, mt_rack r, mt_metro m\n" +
            " where b.codigo='" + ubicaArray[0] + "' and r.codigo= " + ubicaArray[1] +  " and m.codigo= " + ubicaArray[2] + "  and m.rack=" + ubicaArray[1];
            Rs1 = Sql.Select(Query2);
            if (Rs1.next()){
                strUbicacion =Rs1.getString("ubc").trim();
                return strUbicacion;
            }
            else
            {
                return null;
            }
        }
        catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }
        return null; 
    }
    
    
    public void CargaReporte(String rut, String mes, String ano, boolean sus_vtas, int vendedor){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        double SumaDespachos = 0;
        int SumaBultos = 0;
        int SumaPeso = 0;
        String Query = "";
        int Nivel=0;
        int ContReg=0;
        int AnoAnt = Integer.valueOf(ano)-1;
        
        Nivel = fmMain.trae_nivel(fmMain.GetUsuario());
        while(TableModel.getRowCount()>0)
             TableModel.removeRow(0);
         
        try {
//            Query = "select \n" +
//                        "  q.rut,\n" +
//                        "  q.nombreCliente,\n" +
//                        "  case when SUM(q.año_anterior) is NULL then 0 else SUM(q.año_anterior) end as año_ante,\n" +
//                        "  case when SUM(q.año_actual) is NULL then 0 else SUM(q.año_actual) end as año_act\n" +
//                        "from \n" +
//                        "(\n" +
//                        " select \n" +
//                        "        o.rut as rut,\n" +
//                        "        trim(c.nombre) as nombreCliente,\n" +
//                        "	    case extract(year from femision) when extract(year from now()) -1 then  case when SUM(d.cantidad * d.valorunitario) is NULL then 0 else SUM(d.cantidad * d.valorunitario) end  end as año_anterior,\n" +
//                        " 		case extract(year from femision) when extract(year from now())  then SUM(d.cantidad * d.valorunitario) end as año_actual,\n" +
//                        "        extract(year from femision) as ano,\n" +
//                        "        extract(month from femision)  as mes\n" +
//                        " from occh o\n" +
//                        "      left join occhdet d on o.rut = d.rut and o.codigo_oc = d.codigo_oc and\n" +
//                        "       o.orden = d.orden\n" +
//                        "      left join cliente c on c.rut = o.rut\n" +
//                        "      left join personal p on p.usuario = '" + fmMain.GetUsuario().trim()  + "' \n";
//                        
//                        if ((sus_vtas || vendedor >0) || fmMain.trae_nivel(fmMain.GetUsuario())<80){
//                            Query = Query  + "   inner join cli_cartera_venta cv on cv.rut_cliente = o.rut \n";}
//                         
//                         if ((sus_vtas || vendedor >0) && Nivel <80) {
//                              Query = Query + " and cv.cod_vendedor = o.vendedor\n";
//                         }                            
//                        
//                        Query = Query + "      inner join producto pr on d.sku = pr.sku\n" +
//                        " Where femision is not null and\n" +
//                        "       extract(year from femision) >= " + AnoAnt + " " +
//                        "  and   extract(year from femision) <= " + ano;
//                        
//                        if (Nivel<80){
//                            Query = Query + " and cv.cod_vendedor = p.vendedor\n";
//                        }
//                                
//                                //+ "extract(year from now()) -1 and \n" +
//                        Query = Query + "   and     extract(month from femision) = " + mes + " \n";
//                        
//                        if (rut.equals("")){
//                        }
//                        else{Query = Query + " and o.rut = " + rut ;}
//                        
//                        if (vendedor >0 && Nivel <80){
//                            Query = Query + " and o.vendedor = " + vendedor ;
//                        }
//                        
//                        
//                        Query = Query + "  group by \n" +
//                        "      o.femision,\n" +
//                        "      o.rut, trim(c.nombre)) as q\n" +
//                        "group by \n" +
//                        "  q.rut,\n" +
//                        "  q.nombreCliente  ";

            
  Query = "select \n" +
                        "  q.rut,\n" +
                        "  q.nombreCliente,\n" +
                        "  case when SUM(q.año_anterior) is NULL then 0 else SUM(q.año_anterior) end as año_ante,\n" +
                        "  case when SUM(q.año_actual) is NULL then 0 else SUM(q.año_actual) end as año_act\n" +
                        "from \n" +
                        "(\n" +
                        " select \n" +
                        "        o.rut as rut,\n" +
                        "        trim(c.nombre) as nombreCliente,\n" +
                        "	    case extract(year from femision) when " + AnoAnt + " then  case when SUM(d.cantidad * d.valorunitario) is NULL then 0 else SUM(d.cantidad * d.valorunitario) end  end as año_anterior,\n" +
                        " 		case extract(year from femision) when " + ano + "  then SUM(d.cantidad * d.valorunitario) end as año_actual,\n" +
                        "        extract(year from femision) as ano,\n" +
                        "        extract(month from femision)  as mes\n" +
                        " from occh o\n" +
                        "      left join occhdet d on o.rut = d.rut and o.codigo_oc = d.codigo_oc and\n" +
                        "       o.orden = d.orden\n" +
                        "      left join cliente c on c.rut = o.rut\n" +
                        "      left join personal p on p.usuario = '" + fmMain.GetUsuario().trim()  + "' \n";
                        
                        if (vendedor>0 ||  Nivel <80   ) {
                            Query = Query + "inner join cli_cartera_venta cv on cv.rut_cliente=o.rut\n";
                        }     
                        //}
                        Query = Query + " inner join producto pr \n" +
                        " on d.sku = pr.sku   Where femision is not null \n";
                        if (!rut.equals("") ){
                               
                               Query = Query + " and o.rut = " +  rut;
                        }      

                        
                        
                        if (Nivel<80 && sus_vtas  ) {
                            Query = Query + " and cv.cod_vendedor= p.vendedor and o.vendedor=p.vendedor ";
                        }
                        else if (Nivel<80 && !sus_vtas  )  {
                                    Query = Query + " and cv.cod_vendedor = p.vendedor";
                                }
                        
                        
                        
                        if (Nivel>=80 ) {
                                if (vendedor>0   &&   !sus_vtas  ) {
                                        
                                        Query = Query + " and cv.cod_vendedor =" +  vendedor  ;
                                    }
                                else if (vendedor>0   &&   sus_vtas){
                                     Query = Query + " and cv.cod_vendedor = " +  vendedor + "   and o.vendedor = " + vendedor ;}
                        }
                        
                        
                         Query = Query + "  and extract(year from femision) >= " + AnoAnt + " " +
                                         "  and   extract(year from femision) <= " + ano;
                         Query = Query + "  and     extract(month from femision) = " + mes + " \n";
                        
                        
                        Query = Query + "  group by \n" +
                        "      o.femision,\n" +
                        "      o.rut, trim(c.nombre)) as q\n" +
                        "group by \n" +
                        "  q.rut,\n" +
                        "  q.nombreCliente  ";            
            
            
            
            
            
            
            
            
            Rs = Sql.Select(Query);
            double  actual = 0;
            double anterior =0;
            
            while (Rs.next()){
                ContReg++;
                
                
                anterior = Rs.getDouble("año_ante");
                actual = Rs.getDouble("año_act");
                
                
                if (ContReg==1){
                    lblAño.setText(ano);
                    LblAñoAct.setText(ano);
                    lblAñoAnt.setText(String.valueOf(AnoAnt));
                    lblMes.setText(mes);
                }
                
                  
                
                
                
                
                if (anterior <=0){
                    TableModel.addRow(new Object[]{
                                               Rs.getString("rut").trim(),
                                               Rs.getString("nombreCliente"),
                                               fmMain.FormatoTotal(anterior),
                                               fmMain.FormatoTotal(actual),
                                                100});
                }
                else
                {
                        TableModel.addRow(new Object[]{
                                               Rs.getString("rut").trim(),
                                               Rs.getString("nombreCliente"),
                                               fmMain.FormatoTotal(anterior),
                                               fmMain.FormatoTotal(actual),
                                               fmMain.FormatoTotal(((actual/anterior)-1)*100
                                               )});
                }        
                        
                        
                        
                SumaDespachos =  SumaDespachos + Rs.getDouble("año_act") - Rs.getDouble("año_ante");
                
               }
            
                
            
                
               // Grilla_OC.changeSelection(0, 0 , false, false);
            
        } catch (Exception e) {
          
        } finally{
            Sql.Close();
          }
    }   
    
    
    public void abrir(String file ){
        
       try {
           String url = file;
           ProcessBuilder p = new ProcessBuilder();
           p.command("cmd.exe", "/c",url);
           p.start();
       } catch (IOException ex) {
           Logger.getLogger(jd_RepoVtas.class.getName()).log(Level.SEVERE, null, ex);
       }
        
    }
    
    
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    
    public String GetUbicacion(){
        if (Ubicacion_sel .equals("")){
            Ubicacion_sel= Grilla.getValueAt(Grilla.getSelectedRow(),4).toString();
            UbicaCodigo_Sel = Grilla.getValueAt(Grilla.getSelectedRow(),3).toString();
        }
        return Ubicacion_sel;
    }
    
    public String GetUbicacionCod(){
        if (UbicaCodigo_Sel.equals("")){
            Ubicacion_sel= Grilla.getValueAt(Grilla.getSelectedRow(),4).toString();
            UbicaCodigo_Sel = Grilla.getValueAt(Grilla.getSelectedRow(),3).toString();
        }
        return UbicaCodigo_Sel;
    }
    
    
    public  String GetCliente(){
        
        String nombre="";
        
        nombre = Grilla.getValueAt(Grilla.getSelectedRow(),1).toString();
        return nombre;
     }
    
    
    
    
    private void btOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOkActionPerformed
        // TODO add your handling code here:
//        Ubicacion_sel= Grilla.getValueAt(Grilla.getSelectedRow(),4).toString();
//        UbicaCodigo_Sel = Grilla.getValueAt(Grilla.getSelectedRow(),3).toString();
        dispose();
        
        
    }//GEN-LAST:event_btOkActionPerformed

    private void GrillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMouseClicked
        // TODO add your handling code here:
        
     
        
    }//GEN-LAST:event_GrillaMouseClicked

    

    
    
    public Boolean selecciona_reg(){
        Grilla.changeSelection(0, 0 , false, false);
        return true;
    }
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jd_RepoVtas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jd_RepoVtas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jd_RepoVtas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jd_RepoVtas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jd_RepoVtas dialog = new jd_RepoVtas(new javax.swing.JFrame(), true);
                
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla;
    private javax.swing.JLabel LblAñoAct;
    private javax.swing.JButton btOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAño;
    private javax.swing.JLabel lblAñoAnt;
    private javax.swing.JLabel lblMes;
    // End of variables declaration//GEN-END:variables
}
