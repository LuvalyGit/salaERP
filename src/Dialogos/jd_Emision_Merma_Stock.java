/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import Conexion.ExeSql;
import Formularios.fmMain;
import static PanelForm.pfGDCliente.GetCol;
import Utilidades.ComboCodigos;
import Utilidades.Exporter;
import Utilidades.POI_excel;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;



/**
 *
 * @author DavidAlcaman
 */
public class jd_Emision_Merma_Stock extends javax.swing.JDialog {
   DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    private Object GrillaOCS;
    public static int pano; 
    public static int pmes;
    public static int pmes_oc;
    public static String Rut, Numero,  TipDocto,  Cliente, Codigo_oc;
    int id_trans=-1;
    String Ubicacion_sel="", UbicaCodigo_Sel="";
    private Object btIngresar;
    /**
     * Creates new form jdTrasnporte
     */
    public jd_Emision_Merma_Stock(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
         //Setea fecha inicial Desde y Hasta
        Date date = new Date();
  
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        Grilla.getColumnModel().getColumn(0).setCellRenderer(rightRenderer);
        Grilla.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        Grilla.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
 
    
        
        
        
        
    }

    public jd_Emision_Merma_Stock() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        btAceptar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lbRut = new javax.swing.JLabel();
        lbCliente = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lbCodigoOC = new javax.swing.JLabel();
        chkTodo = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        lbNroDocto = new javax.swing.JLabel();
        lbTipo = new javax.swing.JLabel();
        lb_Suma = new javax.swing.JLabel();
        lb_Pago = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        bt_Recalcular = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Grilla.setAutoCreateRowSorter(true);
        Grilla.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sku", "Nombre", "Unidad", "Cantidad", "Valor Unitario", "Total", "Merma", "Ingreso", "Pago", "En Merma", "En Ingreso", "En Pago", "Ok", "C. Procesada", "C. Pendiente"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, true, true, true, false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.setColumnSelectionAllowed(true);
        Grilla.setComponentPopupMenu(jPopupMenu1);
        Grilla.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaMouseClicked(evt);
            }
        });
        Grilla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                GrillaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                GrillaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                GrillaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(Grilla);
        Grilla.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(100);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(50);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(150);
            Grilla.getColumnModel().getColumn(1).setMinWidth(100);
            Grilla.getColumnModel().getColumn(1).setMaxWidth(300);
            Grilla.getColumnModel().getColumn(2).setMinWidth(30);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(70);
            Grilla.getColumnModel().getColumn(3).setMinWidth(70);
            Grilla.getColumnModel().getColumn(3).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(4).setMinWidth(90);
            Grilla.getColumnModel().getColumn(4).setMaxWidth(150);
            Grilla.getColumnModel().getColumn(5).setMinWidth(90);
            Grilla.getColumnModel().getColumn(5).setMaxWidth(150);
            Grilla.getColumnModel().getColumn(6).setMinWidth(50);
            Grilla.getColumnModel().getColumn(6).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(7).setMinWidth(50);
            Grilla.getColumnModel().getColumn(7).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(8).setMinWidth(50);
            Grilla.getColumnModel().getColumn(8).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(9).setMinWidth(50);
            Grilla.getColumnModel().getColumn(9).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(10).setMinWidth(50);
            Grilla.getColumnModel().getColumn(10).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(11).setMinWidth(50);
            Grilla.getColumnModel().getColumn(11).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(12).setMinWidth(40);
            Grilla.getColumnModel().getColumn(12).setPreferredWidth(40);
            Grilla.getColumnModel().getColumn(12).setMaxWidth(60);
            Grilla.getColumnModel().getColumn(13).setMinWidth(50);
            Grilla.getColumnModel().getColumn(13).setMaxWidth(150);
            Grilla.getColumnModel().getColumn(14).setMinWidth(50);
            Grilla.getColumnModel().getColumn(14).setMaxWidth(150);
        }

        btAceptar.setText("Cerrar");
        btAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAceptarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Rut");

        lbRut.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbRut.setText("rut");
        lbRut.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbCliente.setBackground(new java.awt.Color(0, 51, 204));
        lbCliente.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbCliente.setText("Cliente");
        lbCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Codigo_OC");

        lbCodigoOC.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbCodigoOC.setText("Codigo_OC");
        lbCodigoOC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        chkTodo.setText("Todo");
        chkTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTodoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbRut, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(chkTodo))
                    .addComponent(lbCodigoOC, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lbRut)
                    .addComponent(lbCliente)
                    .addComponent(chkTodo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lbCodigoOC))
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Nro");

        lbNroDocto.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbNroDocto.setText("Nro Guia");
        lbNroDocto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbTipo.setBackground(new java.awt.Color(0, 51, 204));
        lbTipo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbTipo.setText("Tipo");
        lbTipo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lb_Suma.setText("0");

        lb_Pago.setText("0");

        jLabel1.setText("Total");

        jLabel4.setText("Pago");

        jButton2.setText("Procesar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        bt_Recalcular.setText("Re-CALCULAR");
        bt_Recalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_RecalcularActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbNroDocto, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(lbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(82, 82, 82)
                                .addComponent(bt_Recalcular)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 760, Short.MAX_VALUE)
                                .addGap(69, 69, 69)))
                        .addGap(154, 154, 154)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btAceptar)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(129, 129, 129))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(321, 321, 321)
                        .addComponent(jLabel1)
                        .addGap(34, 34, 34)
                        .addComponent(lb_Suma, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(293, 293, 293)
                        .addComponent(jLabel4)
                        .addGap(31, 31, 31)
                        .addComponent(lb_Pago, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(297, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(lbNroDocto))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbTipo)
                        .addComponent(bt_Recalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_Suma)
                    .addComponent(jLabel1)
                    .addComponent(lb_Pago)
                    .addComponent(jLabel4))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private String Get_Ubicacion(String Ubica)
    {
         ExeSql Sql = new ExeSql();
        ResultSet Rs, Rs1;
        String Query2 ;
        String strUbicacion = "";

        try{
            lbNroDocto.setVisible(true);
            strUbicacion = Ubica.trim();
            String ubicaArray[] = strUbicacion.split("\\.");

            Query2 = "SELECT (b.bodega ||' - '|| r.rack ||' - '|| m.metro) as ubc\n" +
            " from mt_bodega b, mt_rack r, mt_metro m\n" +
            " where b.codigo='" + ubicaArray[0] + "' and r.codigo= " + ubicaArray[1] +  " and m.codigo= " + ubicaArray[2] + "  and m.rack=" + ubicaArray[1];
            Rs1 = Sql.Select(Query2);
            if (Rs1.next()){
                strUbicacion =Rs1.getString("ubc").trim();
                return strUbicacion;
            }
            else
            {
                return null;
            }
        }
        catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }
        return null; 
    }
    
    

    
    
    public void abrir(String file ){
        
       try {
           String url = file;
           ProcessBuilder p = new ProcessBuilder();
           p.command("cmd.exe", "/c",url);
           p.start();
       } catch (IOException ex) {
           Logger.getLogger(jd_Emision_Merma_Stock.class.getName()).log(Level.SEVERE, null, ex);
       }
        
    }
    
    
    
    public void Actualiza_valores(){

        
        if (!Grilla.getValueAt(Grilla.getSelectedRow(), 3).toString().equals("") && !Grilla.getValueAt(Grilla.getSelectedRow(), 4).toString().equals("")  ) 
        {
                double cantidad=0, val_unit=0, Total =0;
                cantidad=Double.valueOf (Grilla.getValueAt(Grilla.getSelectedRow(), 3).toString());
                val_unit=Double.valueOf (Grilla.getValueAt(Grilla.getSelectedRow(), 4).toString());
                Total = cantidad*val_unit;
                Grilla.setValueAt(fmMain.FormatoNumero(Total), Grilla.getSelectedRow(), 5);
        }        
                
    }
    
    
    
    public void AbrirGuia2(){
       ResultSet Rs;
       ExeSql Sql = new ExeSql();    
       double dcantidad = 0.0;
       
       DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
       while(TableModel.getRowCount()>0)
               TableModel.removeRow(0);
            try {
            Rs = Sql.Select("select d.sku,p.nombre,u.um,d.cantidad, d.cant_procesada, d.valorunitario, d.totallinea, "
                    + "ingreso, merma , pago, boocheck \n"
                    + "from ctacteclidet d\n"
                    + "left join producto p\n"
                    + "on d.sku=p.sku\n"
                    + "left join par_unidad u\n"
                    + "on p.unidad=u.codigo\n"
                    + "where d.rut=" + Rut + "\n"
                    + "and d.tipdocto='" + TipDocto + "'\n"
                    + "and d.nrodocto=" + Numero );
            
                    
            
            while (Rs.next()) {
                dcantidad = Rs.getDouble("cantidad") - Rs.getDouble("cant_procesada");
                TableModel.addRow(new Object[]{
                    Rs.getString("sku").trim(), //0
                    Rs.getString("nombre").trim(), //1
                    Rs.getString("um").trim(),//2
                    fmMain.FormatoNumero(Rs.getDouble("cantidad")),//3
                    fmMain.FormatoNumero(Rs.getDouble("valorunitario")),//4
                    fmMain.FormatoNumero(Rs.getDouble("totallinea")),0,0,0,//5,6,7,8
                    fmMain.FormatoNumero(Rs.getDouble("merma")),//9
                    fmMain.FormatoNumero(Rs.getDouble("ingreso")),//10
                    fmMain.FormatoNumero(Rs.getDouble("pago")),//11
                    Rs.getBoolean("boocheck"),//012
                    fmMain.FormatoNumero(Rs.getDouble("cant_procesada")),//013
                    fmMain.FormatoNumero(dcantidad),//014
                });
                
//                
//                        if( Rs.getBoolean("boocheck"))
//                        {
//                                Grilla =  new javax.swing.JTable(){
//                                   public boolean isCellEditable(int rowIndex, int colIndex)
//                                   {
//                                       return false;
//                                   }
//                               };
//                        } 
//                        else
//                        {
//                                Grilla =  new javax.swing.JTable(){
//                                   public boolean isCellEditable(int rowIndex, int colIndex)
//                                   {
//                                       return true;
//                                   }
//                               };
//                        } 
//                        
//                        TableColumn Columna = this.Grilla.getColumnModel().getColumn(2);
                        
                       
                        
                        
                        
                        
                
                
            }
            
            lbRut.setText(Rut);
            lbCliente.setText(Cliente);
            lbTipo.setText(TipDocto);
            lbNroDocto.setText(Numero);
            
        } catch (Exception e) {
            System.out.println(e);
        } finally{
            Sql.Close();
        }
    }
    
    
    
    
    private void btAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAceptarActionPerformed
        dispose();
    }//GEN-LAST:event_btAceptarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    
    public String GetUbicacion(){
        if (Ubicacion_sel .equals("")){
            Ubicacion_sel= Grilla.getValueAt(Grilla.getSelectedRow(),4).toString();
            UbicaCodigo_Sel = Grilla.getValueAt(Grilla.getSelectedRow(),3).toString();
        }
        return Ubicacion_sel;
    }
    
    public String GetUbicacionCod(){
        if (UbicaCodigo_Sel.equals("")){
            Ubicacion_sel= Grilla.getValueAt(Grilla.getSelectedRow(),4).toString();
            UbicaCodigo_Sel = Grilla.getValueAt(Grilla.getSelectedRow(),3).toString();
        }
        return UbicaCodigo_Sel;
    }
    
    
    private  boolean valida_ubicacion(String Ubica){
        ExeSql Sql = new ExeSql();
        ResultSet Rs,Rs1;
        String  Query2;
        boolean esta = false;
        
        try
        {
                    Query2 = "select *  from mt_codmetro where codmetro = '" + Ubica + "';";
                    Rs1 = Sql.Select(Query2);
                     if (Rs1.next()){
                         esta =  true;
                     }
                     else{
                         esta =  false;
                         }
        
          }
            catch (Exception e) {
                System.out.println(e.getMessage());
                Sql.Rollback();
            } finally{
                Sql.Close();
            }          
        
        return esta;
    }
    

  
    private void GrillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMouseClicked
        System.out.println(Grilla.getValueAt(Grilla.getSelectedRow(), Grilla.getSelectedColumn()));
            
    }//GEN-LAST:event_GrillaMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // Ejecuta segun Grilla
        
        //Si el producto es devuelto: cuantos son a Merma o a Devolucion, elo GDC va a 0
        // Si el producto es pagado, se debe:
                // 1. descontar el Stock
                // 2. dejar GDC
                // 3. Contabilizar en Cobranza.
        
        ExeSql Sql = new ExeSql();
        ExeSql Sql1 = new ExeSql();
        ExeSql Sql2 = new ExeSql();
        
  
          
        ResultSet Rs,Rs1,Rs2;
        String  Qry="", qry_gdc="";
        double Suma=0, Suma_Pago=0;
        double pago2=0;
        String Sku="", Cant="",StUsuario="";
        String Tran_Merma = "TRAN.1009.1"; 
        String Tran_Ingreso = "TRAN.1001.1", QryConsulta="", qryIns="";
        StUsuario = fmMain.GetUsuario();
        
        boolean valida=false;
        bt_Recalcular.doClick();
        // Valida Grilla  que tenga valores Positivos
        
        double merma=0, ingreso=0, pago=0, cantidad_solicitada=0, cantidad_gdc =0, cant_procesada =0, cant_pendiente=0;
        double En_merma=0, En_ingreso=0, En_pago=0, canti =0, Sku_gdc=0;
        double mover_ingreso=0, mover_pago=0 , mover_merma=0;
        boolean EstaMarcado =false, EstaMarcadoLinea=false;
        
        // Valida Valores que sean positivos
        for(int i=0;i< Grilla.getRowCount();i++)
        {
            merma = Double.valueOf (Grilla.getValueAt(i, 6).toString());
            ingreso = Double.valueOf (Grilla.getValueAt(i, 7).toString());
            pago = Double.valueOf (Grilla.getValueAt(i, 8).toString());

            En_merma = Double.valueOf (Grilla.getValueAt(i, 9).toString());
            En_ingreso = Double.valueOf (Grilla.getValueAt(i, 10).toString());
            En_pago = Double.valueOf (Grilla.getValueAt(i, 11).toString());
            
            
            cantidad_solicitada=Double.valueOf (Grilla.getValueAt(i, 3).toString());
            
            Suma=0;
            if (merma <0 || ingreso <0 || pago <0)
            {
                valida=false;
                fmMain.Mensaje("Valores Negativos");
                break;
            }
            
            if( cantidad_solicitada != merma+ingreso+pago)
            {
                valida=false;

                if (JOptionPane.showConfirmDialog(null, "Cantidades no son correctas con respecto a Merma - Ingreso - Pago,  Desea Continuar??", "Validacion", JOptionPane.YES_OPTION) == JOptionPane.YES_OPTION) 
                {
                        //fmMain.Mensaje("Cantidad Solicitada es distinta con respecto a  ( Merma + Ingreso + Pago ), de todas formas el proceso Continuara");
                        break;
                }
                else
                {
                    return;
                }
            }
        }
        try
           {
                    for(int i=0;i< Grilla.getRowCount();i++)
                    {
                        Sku=Grilla.getValueAt(i, 0).toString().trim();
                        merma = Double.valueOf (Grilla.getValueAt(i, 6).toString());
                        ingreso = Double.valueOf (Grilla.getValueAt(i, 7).toString());
                        pago = Double.valueOf (Grilla.getValueAt(i, 8).toString());
                        cantidad_solicitada=Double.valueOf (Grilla.getValueAt(i, 3).toString());
                        cant_procesada=Double.valueOf (Grilla.getValueAt(i, 13).toString());
                        cant_pendiente=Double.valueOf (Grilla.getValueAt(i, 14).toString());
                        En_merma = Double.valueOf (Grilla.getValueAt(i, 9).toString());
                        En_ingreso = Double.valueOf (Grilla.getValueAt(i, 10).toString());
                        En_pago = Double.valueOf (Grilla.getValueAt(i, 11).toString());
                        EstaMarcadoLinea = (boolean) Grilla.getValueAt(i, 12);
                        //EstaMarcadoLinea=Boolean.valueOf(Grilla.getValueAt(i, 12).toString());
                         
                      // En todos los casos se disminuye el GDC  
                        
                        //Resctata el gdc de inventario
                        qry_gdc = "select gdc from inventario where sku ='" + Sku + "'";
                            Rs2 = Sql.Select(qry_gdc);
                            if (Rs2.next())
                            {
                                Sku_gdc =   Rs2.getDouble("gdc");
                            }
                            Rs2.close();
                      
                   if (merma >0 && (pago ==0))
                     {
                        if (merma + Sku_gdc<=0)  
                                      {          
                                            // no mueve Stock, solo descuenta el GDC
                                            Sql.ExeSql("insert into movimientos_stock \n" + 
                                            "(sku,rut,tipdocto,nrodocto,cantidad,tipomovimiento)values" +
                                            "('" + Sku + "'," +
                                            lbRut.getText().trim() + ",'" +
                                            lbTipo.getText().trim() + "'," + 
                                            lbNroDocto.getText().trim() + "," +
                                            "0" + ",'FAT-MERMA')"
                                             );     
                                            
                                            if (Sku_gdc+merma>0)
                                            {
                                                Qry = "update inventario set gdc =  " +  "0" + 
                                                      " where sku = '" + Sku + "'";
                                             Sql.ExeSql(Qry);                               
                                            }   
                                            else
                                            {   
                                                Qry = "update inventario set gdc = gdc + " +  merma + 
                                                          " where sku = '" + Sku + "'";
                                                 Sql.ExeSql(Qry);                               
                                            }
                                      }
                                      else if (merma + Sku_gdc > 0)  
                                      {
                                            mover_merma = Sku_gdc + merma;
                                          
                                            Sql.ExeSql("insert into movimientos_stock \n" + 
                                            "(sku,rut,tipdocto,nrodocto,cantidad,tipomovimiento)values" +
                                            "('" + Sku + "'," +
                                            lbRut.getText().trim() + ",'" +
                                            lbTipo.getText().trim() + "'," + 
                                            lbNroDocto.getText().trim() + "," +
                                            mover_merma + ",'FAT-MERMA')"
                                             );    
                                             
                                            //Actualiza Cantidad en Bodega
                                            QryConsulta = " select * from mt_productos where sku = '" + Sku + "'" +
                                                " and ubicacion = '" + Tran_Merma + "'";
                                            Rs1 = Sql.Select(QryConsulta);

                                            if (Rs1.next())
                                            {
                                                qryIns = " update  mt_productos set cant = cant + " + mover_merma  + ",\n" +
                                                 "  usuario_mod ='" +fmMain.GetUsuario() + "', fecha_mod = current_date, ubica_origen ='" + "FAT " + lbNroDocto.getText().trim()  + "' " +
                                                 " where ubicacion = '" + Tran_Merma + "' and sku = '" + Sku + "' ";
                                                System.out.println("Fila grabada: " + i + " Ubic: " + Tran_Merma + " SKU: " + Sku + " Cantidad :" + merma);
                                                Sql.ExeSql(qryIns);
                                            }
                                            else
                                            {
                                                   qryIns = "insert into mt_productos (ubicacion,sku,usuario,cant)\n" +
                                                    " values ('" + Tran_Merma + "','" + Sku + "','" + StUsuario +  "'," + mover_merma + ");";
                                                    Sql.ExeSql(qryIns);
                                            }
                                                
                                                qryIns = " update  inventario set stock = stock + " +  mover_merma + "\n" +
                                                    " where sku  = '" + Sku + "'";
                                                 System.out.println("Actualiza inventario Ingreso: " + i + " Ubic: " + Tran_Merma + " SKU: " + Sku);
                                                 Sql.ExeSql(qryIns);                            
                                             
                                             Qry = "update inventario set gdc =  " +  "0" + "" +
                                                      " where sku = '" + Sku + "'";
                                             Sql.ExeSql(Qry);
                                             
                                      } // Fin Else
                     } 
                     
                   
                       //Resctata el gdc de inventario
                        qry_gdc = "select gdc from inventario where sku ='" + Sku + "'";
                            Rs2 = Sql.Select(qry_gdc);
                            if (Rs2.next())
                            {
                                Sku_gdc =   Rs2.getDouble("gdc");
                            }
                            Rs2.close();
                     
                     if (  ingreso >0 && (pago ==0))
                     {
                              if (ingreso + Sku_gdc<=0)  
                                        {    
                                            //Actualiza Movimientos Stock
                                            Sql.ExeSql("insert into movimientos_stock \n" + 
                                            "(sku,rut,tipdocto,nrodocto,cantidad,tipomovimiento)values" +
                                            "('" + Sku + "'," +
                                            lbRut.getText().trim() + ",'" +
                                            lbTipo.getText().trim() + "'," + 
                                            lbNroDocto.getText().trim() + "," +
                                            "0" + ",'FAT-INGRESO')"
                                             );            
                                            
                                            //No se mueve el inventario, se mantiene
                                            
                                             //Actualiza Inventario GDC
                                             if (Sku_gdc+ingreso>0)
                                            {
                                                Qry = "update inventario set gdc =  " +  "0" + 
                                                      " where sku = '" + Sku + "'";
                                             Sql.ExeSql(Qry);                               
                                            }   
                                            else
                                            {   
                                                Qry = "update inventario set gdc = gdc + " +  ingreso + 
                                                          " where sku = '" + Sku + "'";
                                                 Sql.ExeSql(Qry);                               
                                            }  
                                               
                                               
                                        } 
                                        else if((ingreso + Sku_gdc>0))
                                        {
                                            mover_ingreso=Sku_gdc+ingreso;
                                            
                                            Sql.ExeSql("insert into movimientos_stock \n" + 
                                            "(sku,rut,tipdocto,nrodocto,cantidad,tipomovimiento)values" +
                                            "('" + Sku + "'," +
                                            lbRut.getText().trim() + ",'" +
                                            lbTipo.getText().trim() + "'," + 
                                            lbNroDocto.getText().trim() + "," +
                                            mover_ingreso + ",'FAT-INGRESO')"
                                             );   
                                            
                                            //Actualiza Bodega.
                                            QryConsulta = " select * from mt_productos where sku = '" + Sku + "'" +
                                                " and ubicacion = '" + Tran_Ingreso + "'";
                                            Rs1 = Sql.Select(QryConsulta);

                                            if (Rs1.next())
                                            {

                                                 qryIns = " update  mt_productos set cant = cant + " + mover_ingreso  + ",\n" +
                                                 "  usuario_mod ='" +fmMain.GetUsuario() + "', fecha_mod = current_date, ubica_origen ='" + "FAT " + lbNroDocto.getText().trim()  + "' " +
                                                 " where ubicacion = '" + Tran_Ingreso + "' and sku = '" + Sku + "' ";

                                                System.out.println("Fila grabada: " + i + " Ubic: " + Tran_Ingreso + " SKU: " + Sku);
                                                Sql.ExeSql(qryIns);
                                            }
                                            else
                                            {
                                                   qryIns = "insert into mt_productos (ubicacion,sku,usuario,cant)\n" +
                                                    " values ('" + Tran_Ingreso + "','" + Sku + "','" + StUsuario +  "'," + mover_ingreso + ");";
                                                    Sql.ExeSql(qryIns);
                                            }
                                            //Actualiza Inventario Stock
                                            qryIns = "update  inventario set stock = stock + " +  mover_ingreso + "\n" +
                                                " where sku  = '" + Sku + "'";
                                             Sql.ExeSql(qryIns);
                                            
                                            // Actualiza GDC.
                                            Qry = "update inventario set gdc =  " +  "0" + "" +
                                                        " where sku = '" + Sku + "'";
                                               Sql.ExeSql(Qry);
                                               
                                        }               
                           
                     } 
                     
                      //Resctata el gdc de inventario
                        qry_gdc = "select gdc from inventario where sku ='" + Sku + "'";
                            Rs2 = Sql.Select(qry_gdc);
                            if (Rs2.next())
                            {
                                Sku_gdc =   Rs2.getDouble("gdc");
                            }
                            Rs2.close();
                     
                    //mover_pago = pago + Sku_gdc;
                     
                    if (  pago>0 && (ingreso + merma ==0) ) 
                     {
                         if (pago>0)  
                                    {  
                                        if (pago + Sku_gdc<=0)  
                                        {    
                                            //Actualiza Movimientos Stock
                                            Sql.ExeSql("insert into movimientos_stock \n" + 
                                            "(sku,rut,tipdocto,nrodocto,cantidad,tipomovimiento)values" +
                                            "('" + Sku + "'," +
                                            lbRut.getText().trim() + ",'" +
                                            lbTipo.getText().trim() + "'," + 
                                            lbNroDocto.getText().trim() + ",-" +
                                            pago + ",'FAT-PAGO')"
                                             );            
                                            
                                            //Actualiza Inventario Stock
                                            qryIns = "update  inventario set stock = stock - " +  pago + "\n" +
                                                " where sku  = '" + Sku + "'";
                                             Sql.ExeSql(qryIns);
                                               
                                               //Actualiza Inventario GDC
                                             if (Sku_gdc+pago>0)
                                            {
                                                Qry = "update inventario set gdc =  " +  "0" + 
                                                      " where sku = '" + Sku + "'";
                                             Sql.ExeSql(Qry);                               
                                            }   
                                            else
                                            {   
                                                Qry = "update inventario set gdc = gdc + " +  pago + 
                                                          " where sku = '" + Sku + "'";
                                                 Sql.ExeSql(Qry);                               
                                            }
                                               
                                               
                                               
                                               
                                               
                                        } 
                                        else if((pago + Sku_gdc>0))
                                        {
                                            Sql.ExeSql("insert into movimientos_stock \n" + 
                                            "(sku,rut,tipdocto,nrodocto,cantidad,tipomovimiento)values" +
                                            "('" + Sku + "'," +
                                            lbRut.getText().trim() + ",'" +
                                            lbTipo.getText().trim() + "'," + 
                                            lbNroDocto.getText().trim() + ",-" +
                                            "0" + ",'FAT-PAGO-GDC')"
                                             );     
                                            
                                            //Actualiza Inventario Stock
                                            qryIns = "update  inventario set stock = stock + " +  Sku_gdc + "\n" +
                                                " where sku  = '" + Sku + "'";
                                             Sql.ExeSql(qryIns);
                                            
                                            
                                            Qry = "update inventario set gdc =  " +  "0" + "" +
                                                        " where sku = '" + Sku + "'";
                                               Sql.ExeSql(Qry);
                                        }
                              }    
                     }
                    
                    //Resctata el gdc de inventario
                        qry_gdc = "select gdc from inventario where sku ='" + Sku + "'";
                            Rs2 = Sql.Select(qry_gdc);
                            if (Rs2.next())
                            {
                                Sku_gdc =   Rs2.getDouble("gdc");
                            }
                            Rs2.close();
                            
                     if (   pago>0 && (ingreso + merma >0)) 
                     {
                    // Se realiza la operacion de Pago                          
                              if (pago>0)  
                                    {  
                                        if (pago + Sku_gdc<=0)  
                                        {    
                                            //Actualiza Movimientos Stock
                                            Sql.ExeSql("insert into movimientos_stock \n" + 
                                            "(sku,rut,tipdocto,nrodocto,cantidad,tipomovimiento)values" +
                                            "('" + Sku + "'," +
                                            lbRut.getText().trim() + ",'" +
                                            lbTipo.getText().trim() + "'," + 
                                            lbNroDocto.getText().trim() + ",-" +
                                            pago + ",'FAT-PAGO')"
                                             );            
                                            
                                            //Actualiza Inventario Stock
                                            qryIns = "update  inventario set stock = stock - " +  pago + "\n" +
                                                " where sku  = '" + Sku + "'";
                                             Sql.ExeSql(qryIns);
                                            
                                            //Actualiza Inventario GDC
                                             if (Sku_gdc+pago>0)
                                            {
                                                Qry = "update inventario set gdc =  " +  "0" + 
                                                      " where sku = '" + Sku + "'";
                                             Sql.ExeSql(Qry);                               
                                            }   
                                            else
                                            {   
                                                Qry = "update inventario set gdc = gdc + " +  pago + 
                                                          " where sku = '" + Sku + "'";
                                                 Sql.ExeSql(Qry);                               
                                            }
                                        } 
                                        else if((pago + Sku_gdc>0))
                                        {
                                            Sql.ExeSql("insert into movimientos_stock \n" + 
                                            "(sku,rut,tipdocto,nrodocto,cantidad,tipomovimiento)values" +
                                            "('" + Sku + "'," +
                                            lbRut.getText().trim() + ",'" +
                                            lbTipo.getText().trim() + "'," + 
                                            lbNroDocto.getText().trim() + ",-" +
                                            "0" + ",'FAT-PAGO-GDC')"
                                             );     
                                            
                                            //Actualiza Inventario Stock
                                            qryIns = "update  inventario set stock = stock + " +  Sku_gdc + "\n" +
                                                " where sku  = '" + Sku + "'";
                                             Sql.ExeSql(qryIns);
                                            
                                            
                                            Qry = "update inventario set gdc =  " +  "0" + "" +
                                                        " where sku = '" + Sku + "'";
                                               Sql.ExeSql(Qry);
                                        }
                              }              
                         
                        //Resctata el gdc de inventario
                        qry_gdc = "select gdc from inventario where sku ='" + Sku + "'";
                            Rs2 = Sql.Select(qry_gdc);
                            if (Rs2.next())
                            {
                                Sku_gdc =   Rs2.getDouble("gdc");
                            }
                            Rs2.close();
                         
                         
                         
                           if (ingreso>0)
                           {
                              if (ingreso + Sku_gdc<=0)  
                                        {    
                                            //Actualiza Movimientos Stock
                                            Sql.ExeSql("insert into movimientos_stock \n" + 
                                            "(sku,rut,tipdocto,nrodocto,cantidad,tipomovimiento)values" +
                                            "('" + Sku + "'," +
                                            lbRut.getText().trim() + ",'" +
                                            lbTipo.getText().trim() + "'," + 
                                            lbNroDocto.getText().trim() + "," +
                                            "0" + ",'FAT-INGRESO')"
                                             );            
                                            
                                            //No se mueve el inventario, se mantiene
                                            
                                               
                                               
                                        //Actualiza Inventario GDC
                                             if (Sku_gdc+ingreso>0)
                                            {
                                                Qry = "update inventario set gdc =  " +  "0" + 
                                                      " where sku = '" + Sku + "'";
                                             Sql.ExeSql(Qry);                               
                                            }   
                                            else
                                            {   
                                                Qry = "update inventario set gdc = gdc + " +  ingreso + 
                                                          " where sku = '" + Sku + "'";
                                                 Sql.ExeSql(Qry);                               
                                            }

                                        } 
                                        else if((ingreso + Sku_gdc>0))
                                        {
                                            mover_ingreso=Sku_gdc+ingreso;
                                            
                                            Sql.ExeSql("insert into movimientos_stock \n" + 
                                            "(sku,rut,tipdocto,nrodocto,cantidad,tipomovimiento)values" +
                                            "('" + Sku + "'," +
                                            lbRut.getText().trim() + ",'" +
                                            lbTipo.getText().trim() + "'," + 
                                            lbNroDocto.getText().trim() + "," +
                                            mover_ingreso + ",'FAT-INGRESO')"
                                             );   
                                            
                                            //Actualiza Bodega.
                                            QryConsulta = " select * from mt_productos where sku = '" + Sku + "'" +
                                                " and ubicacion = '" + Tran_Ingreso + "'";
                                            Rs1 = Sql.Select(QryConsulta);

                                            if (Rs1.next())
                                            {

                                                 qryIns = " update  mt_productos set cant = cant + " + mover_ingreso  + ",\n" +
                                                 "  usuario_mod ='" +fmMain.GetUsuario() + "', fecha_mod = current_date, ubica_origen ='" + "FAT " + lbNroDocto.getText().trim()  + "' " +
                                                 " where ubicacion = '" + Tran_Ingreso + "' and sku = '" + Sku + "' ";

                                                System.out.println("Fila grabada: " + i + " Ubic: " + Tran_Ingreso + " SKU: " + Sku);
                                                Sql.ExeSql(qryIns);
                                            }
                                            else
                                            {
                                                   qryIns = "insert into mt_productos (ubicacion,sku,usuario,cant)\n" +
                                                    " values ('" + Tran_Ingreso + "','" + Sku + "','" + StUsuario +  "'," + mover_ingreso + ");";
                                                    Sql.ExeSql(qryIns);
                                            }
                                            //Actualiza Inventario Stock
                                            qryIns = "update  inventario set stock = stock + " +  mover_ingreso + "\n" +
                                                " where sku  = '" + Sku + "'";
                                             Sql.ExeSql(qryIns);
                                            
                                            // Actualiza GDC.
                                            Qry = "update inventario set gdc =  " +  "0" + "" +
                                                        " where sku = '" + Sku + "'";
                                               Sql.ExeSql(Qry);
                                        }               
                           }
                           
                        //Resctata el gdc de inventario
                        qry_gdc = "select gdc from inventario where sku ='" + Sku + "'";
                            Rs2 = Sql.Select(qry_gdc);
                            if (Rs2.next())
                            {
                                Sku_gdc =   Rs2.getDouble("gdc");
                            }
                            Rs2.close();   
                           
                        if (merma>0)
                        {
                                      if (merma + Sku_gdc<=0)  
                                      {          
                                            // no mueve Stock, solo descuenta el GDC
                                            Sql.ExeSql("insert into movimientos_stock \n" + 
                                            "(sku,rut,tipdocto,nrodocto,cantidad,tipomovimiento)values" +
                                            "('" + Sku + "'," +
                                            lbRut.getText().trim() + ",'" +
                                            lbTipo.getText().trim() + "'," + 
                                            lbNroDocto.getText().trim() + "," +
                                            "0" + ",'FAT-MERMA')"
                                             );     
                                            
                                            Qry = "update inventario set gdc = gdc + " +  merma + "" +
                                                      " where sku = '" + Sku + "'";
                                             Sql.ExeSql(Qry);                               
                                      }
                                      else if (merma + Sku_gdc > 0)  
                                      {
                                            mover_merma = Sku_gdc + merma;
                                          
                                            Sql.ExeSql("insert into movimientos_stock \n" + 
                                            "(sku,rut,tipdocto,nrodocto,cantidad,tipomovimiento)values" +
                                            "('" + Sku + "'," +
                                            lbRut.getText().trim() + ",'" +
                                            lbTipo.getText().trim() + "'," + 
                                            lbNroDocto.getText().trim() + "," +
                                            mover_merma + ",'FAT-MERMA')"
                                             );    
                                             
                                            //Actualiza Cantidad en Bodega
                                            QryConsulta = " select * from mt_productos where sku = '" + Sku + "'" +
                                                " and ubicacion = '" + Tran_Merma + "'";
                                            Rs1 = Sql.Select(QryConsulta);

                                            if (Rs1.next())
                                            {
                                                qryIns = " update  mt_productos set cant = cant + " + mover_merma  + ",\n" +
                                                 "  usuario_mod ='" +fmMain.GetUsuario() + "', fecha_mod = current_date, ubica_origen ='" + "FAT " + lbNroDocto.getText().trim()  + "' " +
                                                 " where ubicacion = '" + Tran_Merma + "' and sku = '" + Sku + "' ";
                                                System.out.println("Fila grabada: " + i + " Ubic: " + Tran_Merma + " SKU: " + Sku + " Cantidad :" + merma);
                                                Sql.ExeSql(qryIns);
                                            }
                                            else
                                            {
                                                   qryIns = "insert into mt_productos (ubicacion,sku,usuario,cant)\n" +
                                                    " values ('" + Tran_Merma + "','" + Sku + "','" + StUsuario +  "'," + mover_merma + ");";
                                                    Sql.ExeSql(qryIns);
                                            }
                                                
                                                qryIns = " update  inventario set stock = stock + " +  mover_merma + "\n" +
                                                    " where sku  = '" + Sku + "'";
                                                 System.out.println("Actualiza inventario Ingreso: " + i + " Ubic: " + Tran_Merma + " SKU: " + Sku);
                                                 Sql.ExeSql(qryIns);                            
                                             
                                             Qry = "update inventario set gdc =  " +  "0" + "" +
                                                      " where sku = '" + Sku + "'";
                                             Sql.ExeSql(Qry);
                                             
                                      } // Fin Else
                            
                           }// Fin Merma
                     } // Fin Else IF
                     
//                      EstaMarcadoLinea = (boolean) Grilla.getValueAt(i, 12);
//                      EstaMarcadoLinea=(cantidad_solicitada <= cantidad_gdc+cant_procesada);
                     // Actualizión en la tabla ctacteclidet cantidad de Merma, ingreso, pago
                      
                      
                     canti = merma+ ingreso + pago;
                     
                    
                     
                     
                     
                     
                     if(canti>0)
                     {    
                            qryIns = " update  ctacteclidet set ingreso  = ingreso + " +  ingreso + "," + " merma  = merma + " +  merma + "," + " pago   = pago + " +  pago + "," + "cant_procesada = cant_procesada + " +  canti
                                       + " ," + "boocheck = "  + EstaMarcadoLinea 
                                       + "  where rut=" + Rut + "\n"
                                        + "  and tipdocto='" + TipDocto + "'\n"
                                        + "  and nrodocto=" + Numero + " and sku = '" + Sku +"'";
                            Sql.ExeSql(qryIns);		       
                     } 
                    
              } // Fin For

              } catch (Exception e) {
                    Sql.Rollback();
                    JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
                    dispose();
                } finally {
                    // Realiza el Commit de todo
                    Sql.Close();
                }          
                    
                    
                // Ahora Agrego el insert de la Cuenta Cte si es que tiene para Items a pagar.
                // SOLO SE DEBE HACER SI HA FINALIZADO TODOS LOS iTEMS.       

                for (int i=0; i<=Grilla.getRowCount()-1; i++ )
                {
                    
                        Sku=Grilla.getValueAt(i, 0).toString().trim();
                        merma = Double.valueOf (Grilla.getValueAt(i, 6).toString());
                        ingreso = Double.valueOf (Grilla.getValueAt(i, 7).toString());
                        pago = Double.valueOf (Grilla.getValueAt(i, 8).toString());
                        cantidad_solicitada=Double.valueOf (Grilla.getValueAt(i, 3).toString());
                        cant_procesada=Double.valueOf (Grilla.getValueAt(i, 13).toString());
                        cant_pendiente=Double.valueOf (Grilla.getValueAt(i, 14).toString());
                        En_merma = Double.valueOf (Grilla.getValueAt(i, 9).toString());
                        En_ingreso = Double.valueOf (Grilla.getValueAt(i, 10).toString());
                        En_pago = Double.valueOf (Grilla.getValueAt(i, 11).toString());
                       
                        EstaMarcado= (boolean) Grilla.getValueAt(i, 12);
                        //EstaMarcado=(cantidad_solicitada <= cant_procesada+ingreso+pago+merma);
                          if (EstaMarcado==false)
                        {
                            break;
                        }
                }
                
                  Suma_Pago = Math.round(Double.valueOf (fmMain.SetGuardar(lb_Pago.getText().trim())));
                  // Solo se debe realizar la cta por cobrar con el monto total de lo pagado cuando se termine de ingresar todos los sku
                  if (Suma_Pago >0 && EstaMarcado)  
                  {    
                        try
                        {
                         qryIns = " insert into cli_cuentasxcobrar " +
                          "(rut,tipdocto,nrodocto,femision,codigo_oc,monto) " + 
                          "values " +
                          "(" + lbRut.getText() + ", '" + lbTipo.getText() + "'," + lbNroDocto.getText()+ ",current_date ," + Codigo_oc + "," + Suma_Pago    + ")";       
                          //"(" + lbRut.getText() + ", '" + lbTipo.getText() + "'," + lbNroDocto.getText()+ ",current_date ," + Codigo_oc + "," + Math.round(Double.valueOf(fmMain.SetGuardar(lb_Pago.getText())))    + ")";
                         Sql1.ExeSql(qryIns);
                           } catch (Exception e) {
                          Sql1.Rollback();
                          JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
                          dispose();
                          
                      } finally {
                          // Realiza el Commit de todo
                          Sql1.Close();
                      }    
                  } 
                  
                  try
                  {
                      // Finaliza la Guia de despacho y la deja emitida
                        if (EstaMarcado)
                        {    
                              //----------------  PROCESO DE FINALIZAC
                              qryIns = " update ctactecli set estado =3 where nrodocto = " + lbNroDocto.getText() + " and tipdocto = '" + lbTipo.getText() + "'";
                              Sql2.ExeSql(qryIns);

                              qryIns = " update ctactecli set estado =1 where nrodocto = " + lbNroDocto.getText() + " and tipdocto = '" + lbTipo.getText() + "'";
                              Sql2.ExeSql(qryIns);
                        }
                   } 
                  catch (Exception e) 
                  {
                          Sql2.Rollback();
                          JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
                          dispose();
                  } 
                  finally 
                  {
                          // Realiza el Commit de todo

                      Sql2.Close();
                  }    
                  
                  fmMain.Mensaje("Proceso terminado Correctamente");
                  
                  dispose();
                    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void GrillaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GrillaKeyPressed


        if (evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER)
        {
           evt.setKeyCode(java.awt.event.KeyEvent.VK_TAB);
           {
             //este codigo lo que hace es convertir el enter en tab
               Grilla.getCellEditor().stopCellEditing();
           }
        }
        
    }//GEN-LAST:event_GrillaKeyPressed

    private void GrillaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GrillaKeyTyped
        // TODO add your handling code here:
              
    }//GEN-LAST:event_GrillaKeyTyped

    private void GrillaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GrillaKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_GrillaKeyReleased

    private void bt_RecalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_RecalcularActionPerformed
        // TODO add your handling code here:

        double Suma1=0;
        boolean valida1=false, EstaMarcadoLinea=false;
        double merma1=0, ingreso1=0, pago1=0, cantidad_solicitada1=0, cant_procesada=0, cant_total=0,cant_pendiente=0;
        
        double merma=0, ingreso=0, pago=0, cantidad_solicitada=0, cantidad_gdc =0, cant_real=0;
        double En_merma=0, En_ingreso=0, En_pago=0;
        boolean EstaMarcado =false;
        String Sku="";
        
        
        
        // Valida Valores que sean positivos
        DefaultTableModel model = (DefaultTableModel) Grilla.getModel();
        int s = model.getRowCount();
        for(int i=0;i< Grilla.getRowCount();i++)
        {
            merma1 = Double.valueOf (Grilla.getValueAt(i, 6).toString());
            ingreso1 = Double.valueOf (Grilla.getValueAt(i, 7).toString());
            pago1 = Double.valueOf (Grilla.getValueAt(i, 8).toString());
            cantidad_solicitada1=Double.valueOf (Grilla.getValueAt(i, 3).toString());
            Suma1=0;
            if (merma1 <0 || ingreso1 <0 || pago1 <0)
            {
                valida1=false;
                fmMain.Mensaje("Valores Negativos");
                break;
            }
            
            if( cantidad_solicitada1 != merma1+ingreso1+pago1)
            {
                valida1=false;
                fmMain.Mensaje("Existen valores mal ingresados, Merma + Ingreso + Pago deben ser igual a la cantidad");
                break;
            }
        } 
        
        
        double cantidad=0, val_unit=0, Total =0, Suma=0, cantidad_pago=0, Suma_Pago=0, Total_pago=0;
         for(int i=0;i< Grilla.getRowCount();i++){
             Total =0;
             Total_pago=0;
                cantidad=Double.valueOf (fmMain.SetGuardar(Grilla.getValueAt(i, 3).toString()));
                merma = Double.valueOf (Grilla.getValueAt(i, 6).toString());
                ingreso = Double.valueOf (Grilla.getValueAt(i, 7).toString());
                pago=Double.valueOf (fmMain.SetGuardar(Grilla.getValueAt(i, 8).toString()));

                val_unit=Double.valueOf (fmMain.SetGuardar(Grilla.getValueAt(i, 4).toString()));
                En_merma = Double.valueOf (Grilla.getValueAt(i, 9).toString());
                En_ingreso = Double.valueOf (Grilla.getValueAt(i, 10).toString());
                En_pago = Double.valueOf (Grilla.getValueAt(i, 11).toString());
                cant_real=Double.valueOf (fmMain.SetGuardar(Grilla.getValueAt(i, 14).toString()));
                cant_procesada = Double.valueOf (fmMain.SetGuardar(Grilla.getValueAt(i, 13).toString()));
                cant_pendiente = Double.valueOf (fmMain.SetGuardar(Grilla.getValueAt(i, 14).toString()));
                Total = (cant_pendiente + cant_procesada) * val_unit;
                Total_pago = (pago+ En_pago) * val_unit;
                Sku=Grilla.getValueAt(i, 0).toString().trim();
                
                
                
                
                Suma = Suma +Total;
                Suma_Pago = Suma_Pago +Total_pago;
          
                
          
          
          //EstaMarcadoLinea=(cant_real == cant_procesada+ingreso+pago+merma);
          EstaMarcadoLinea=(cantidad_solicitada1 <= cantidad_gdc+cant_procesada);
          
          //Grilla.setValueAt(EstaMarcadoLinea, i, 12);
                
         }
         lb_Suma.setText((fmMain.FormatoTotal(Math.round(Suma))));
         lb_Pago.setText((fmMain.FormatoTotal(Math.round(Suma_Pago))));
         
          
         
         
    }//GEN-LAST:event_bt_RecalcularActionPerformed

    private void chkTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTodoActionPerformed
        // TODO add your handling code here:

        if (chkTodo.isSelected()){
            for (int i=0; i<=Grilla.getRowCount()-1; i++ ){

                Grilla.setValueAt(chkTodo.isSelected(), i, 12);

            }
        }
        else{

            for (int i=0; i<=Grilla.getRowCount()-1; i++ ){

                Grilla.setValueAt(chkTodo.isSelected(), i, 12);

            }
        }
    }//GEN-LAST:event_chkTodoActionPerformed

    
    public Boolean selecciona_reg(){
        Grilla.changeSelection(0, 0 , false, false);
        return true;
    }
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jd_Emision_Merma_Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jd_Emision_Merma_Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jd_Emision_Merma_Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jd_Emision_Merma_Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jd_Emision_Merma_Stock dialog = new jd_Emision_Merma_Stock(new javax.swing.JFrame(), true);
                
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla;
    private javax.swing.JButton btAceptar;
    private javax.swing.JButton bt_Recalcular;
    private javax.swing.JCheckBox chkTodo;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCliente;
    private javax.swing.JLabel lbCodigoOC;
    private javax.swing.JLabel lbNroDocto;
    private javax.swing.JLabel lbRut;
    private javax.swing.JLabel lbTipo;
    private javax.swing.JLabel lb_Pago;
    private javax.swing.JLabel lb_Suma;
    // End of variables declaration//GEN-END:variables
}
