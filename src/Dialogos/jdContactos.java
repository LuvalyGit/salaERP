/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import Conexion.ExeSql;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David Alcaman
 */
public class jdContactos extends javax.swing.JDialog {
    String Eliminados;
    int EliminadosCont;
    String IdContacto="";
    String NombreContacto="";
    String RutMaster;
    /**
     * Creates new form jdContacto
     */
    public jdContactos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btCancelar = new javax.swing.JButton();
        btAgregarContacto = new javax.swing.JButton();
        btEliminarContacto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        GrillaContactos = new javax.swing.JTable();
        btAceptar = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Cancel16.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btAgregarContacto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Agregar.png"))); // NOI18N
        btAgregarContacto.setToolTipText("Agregar Contacto");
        btAgregarContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarContactoActionPerformed(evt);
            }
        });

        btEliminarContacto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Eliminar.png"))); // NOI18N
        btEliminarContacto.setToolTipText("Eliminar Contacto");
        btEliminarContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminarContactoActionPerformed(evt);
            }
        });

        GrillaContactos.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        GrillaContactos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "NOMBRE", "FONO 1", "FONO 2", "EMAIL", "CARGO", "Id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(GrillaContactos);
        if (GrillaContactos.getColumnModel().getColumnCount() > 0) {
            GrillaContactos.getColumnModel().getColumn(5).setMinWidth(100);
            GrillaContactos.getColumnModel().getColumn(5).setPreferredWidth(100);
            GrillaContactos.getColumnModel().getColumn(5).setMaxWidth(100);
        }

        btAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/ok_16.png"))); // NOI18N
        btAceptar.setText("Seleccionar");
        btAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAceptarActionPerformed(evt);
            }
        });

        btEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Pencil16.png"))); // NOI18N
        btEditar.setToolTipText("Eliminar Contacto");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 795, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btAceptar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btAgregarContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEliminarContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btAgregarContacto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btEliminarContacto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btEditar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAceptar)
                    .addComponent(btCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        IdContacto="";
        dispose();
    }//GEN-LAST:event_btCancelarActionPerformed
    private void CargaContactosPrv(){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel Model = (DefaultTableModel) GrillaContactos.getModel();
        String Nombre="";
        String Fono1="";
        String Fono2="";
        String Email="";
        String Cargo="";
        
        while(Model.getRowCount()>0)
              Model.removeRow(0);
        
        try {
            
                Rs = Sql.Select("select p.id,p.nombre,p.fono1,p.fono2,p.email,g.nombre as cargo\n" +
                           "from prv_contacto p\n" +
                           "left join par_general g on p.tipo=g.codigo and g.tipo='TIPCONTACTOPRV'" + 
                           "where p.rut=" + RutMaster);
                while(Rs.next()){
                    try {
                        Nombre = Rs.getString("nombre").trim();
                    } catch (Exception e) {
                        Nombre="";
                    }
                    try {
                        Fono1=Rs.getString("fono1").trim();
                    } catch (Exception e) {
                        Fono1="";
                    }
                    try {
                        Fono2=Rs.getString("Fono2").trim();
                    } catch (Exception e) {
                        Fono2="";
                    }
                    try {
                        Email = Rs.getString("email").trim();
                    } catch (Exception e) {
                    }
                    
                    Model.addRow(new Object[]{
                        Nombre,
                        Fono1,
                        Fono2,
                        Email,
                        Rs.getString("cargo").trim(),
                        Rs.getString("id").trim()
                    });
                }
            this.setLocationRelativeTo(null);
            this.setVisible(true);    
            
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
            
        }
        
    }
    
    
    private void CargaVendedores(){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel Model = (DefaultTableModel) GrillaContactos.getModel();
        String Nombre="";
        String Fono1="";
        String Fono2="";
        String Email="";
        String Cargo="";
        String Query = "";
        while(Model.getRowCount()>0)
              Model.removeRow(0);
        
        try {
            
                /*Rs = Sql.Select("select p.id,p.nombre,p.fono1,p.fono2,p.email,g.nombre as cargo\n" +
                           "from prv_contacto p\n" +
                           "left join par_general g on p.tipo=g.codigo and g.tipo='" + Tipo + "'" + 
                           "where p.rut=" + RutMaster);*/
                
                Query = "select p.nombre || ' ' ||  p.apellidopaterno || ' ' ||   p.apellidomaterno as nombre,"
                        + "'' as fono1,'' as Fono2,'Vendedor' as cargo,"
                        + " p.mail as email, p.vendedor as id\n" +
                        "from personal p\n" +
                        "where p.vendedor >0";
                Rs = Sql.Select(Query);
                while(Rs.next()){
                    try {
                        Nombre = Rs.getString("nombre").trim();
                    } catch (Exception e) {
                        Nombre="";
                    }
                    try {
                        Fono1=Rs.getString("fono1").trim();
                    } catch (Exception e) {
                        Fono1="";
                    }
                    try {
                        Fono2=Rs.getString("Fono2").trim();
                    } catch (Exception e) {
                        Fono2="";
                    }
                    try {
                        Email = Rs.getString("email").trim();
                    } catch (Exception e) {
                    }
                    
                    Model.addRow(new Object[]{
                        Nombre,
                        Fono1,
                        Fono2,
                        Email,
                        Rs.getString("cargo").trim(),
                        Rs.getString("id").trim()
                    });
                }
            this.setLocationRelativeTo(null);
            this.setVisible(true);    
            
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
            
        }
        
    }
    
    private void CargaContactos(String Tipo){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel Model = (DefaultTableModel) GrillaContactos.getModel();
        String Nombre="";
        String Fono1="";
        String Fono2="";
        String Email="";
        String Cargo="";
        
        while(Model.getRowCount()>0)
              Model.removeRow(0);
        
        try {
            
                Rs = Sql.Select("select p.id,p.nombre,p.fono1,p.fono2,p.email,g.nombre as cargo\n" +
                           "from prv_contacto p\n" +
                           "left join par_general g on p.tipo=g.codigo and g.tipo='" + Tipo + "'" + 
                           "where p.rut=" + RutMaster);
                while(Rs.next()){
                    try {
                        Nombre = Rs.getString("nombre").trim();
                    } catch (Exception e) {
                        Nombre="";
                    }
                    try {
                        Fono1=Rs.getString("fono1").trim();
                    } catch (Exception e) {
                        Fono1="";
                    }
                    try {
                        Fono2=Rs.getString("Fono2").trim();
                    } catch (Exception e) {
                        Fono2="";
                    }
                    try {
                        Email = Rs.getString("email").trim();
                    } catch (Exception e) {
                    }
                    
                    Model.addRow(new Object[]{
                        Nombre,
                        Fono1,
                        Fono2,
                        Email,
                        Rs.getString("cargo").trim(),
                        Rs.getString("id").trim()
                    });
                }
            this.setLocationRelativeTo(null);
            this.setVisible(true);    
            
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
            
        }
        
    }
    
    
    public String Show(String Rut,String Tipo, boolean Seleccionar){
        
        RutMaster = Rut;
        btAceptar.setVisible(Seleccionar);
        if(Tipo.equals("PRV")){
            CargaContactosPrv();}
        else if (Tipo.equals("VENDEDORES")){
            btAgregarContacto.setVisible(false);
            btEliminarContacto.setVisible(false);
            btEditar.setVisible(false);
            CargaVendedores();
            
        }
        else{
            CargaContactos(Tipo);
        }
 
        
        
       
        return IdContacto;
        
        
        
    }
    public String GetUsuarioId(){
        return IdContacto;
    }
    public String GetUsuario(){
        return NombreContacto.trim();
    }
    private void btAgregarContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarContactoActionPerformed
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        int i = GrillaContactos.getRowCount();
        
        DefaultTableModel TModel = (DefaultTableModel) GrillaContactos.getModel();

        jdAddDatosPersona Persona = new jdAddDatosPersona(null, true);
        Persona.ConTipo("proveedor");
        Persona.setLocationRelativeTo(null);
        Persona.setVisible(true);
        TModel.addRow(Persona.GetFila());
        
        try {
            Sql.ExeSql("insert into prv_contacto \n" +
                        "(rut,nombre,fono1,fono2,email,tipo) values (" + 
                        RutMaster + ",'" +
                        GrillaContactos.getModel().getValueAt(i,0).toString() + "','" +
                        GrillaContactos.getModel().getValueAt(i,1).toString() + "','" +
                        GrillaContactos.getModel().getValueAt(i,2).toString() + "','" + 
                        GrillaContactos.getModel().getValueAt(i,3).toString() + "',"  +
                        GrillaContactos.getModel().getValueAt(i,5).toString() + ")");
            Sql.Commit();
            CargaContactosPrv();
        } catch (Exception e) {
            Sql.Rollback();
        }finally{
            Sql.Close();
        }
        
        
    }//GEN-LAST:event_btAgregarContactoActionPerformed

    private void btEliminarContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminarContactoActionPerformed
       ExeSql Sql = new ExeSql();
       
        try {
            Sql.ExeSql("DELETE FROM prv_contacto WHERE id = " + GrillaContactos.getModel().getValueAt(GrillaContactos.getSelectedRow(),5).toString());
            Sql.Commit();
            CargaContactosPrv();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }
    }//GEN-LAST:event_btEliminarContactoActionPerformed

    private void btAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAceptarActionPerformed
        try {
            IdContacto = GrillaContactos.getValueAt(GrillaContactos.getSelectedRow(),5).toString().trim();
            NombreContacto = GrillaContactos.getValueAt(GrillaContactos.getSelectedRow(),0).toString().trim();
        } catch (Exception e) {
            
        } finally{
            dispose();
        }
        
        

    }//GEN-LAST:event_btAceptarActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        jdAddDatosPersona Persona = new jdAddDatosPersona(null, true);
        Persona.ConTipo("proveedor");
        Persona.EditarContactoPrv(RutMaster,GrillaContactos.getValueAt(GrillaContactos.getSelectedRow(),5).toString().trim());
        Persona.setLocationRelativeTo(null);
        Persona.setVisible(true);
    }//GEN-LAST:event_btEditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdContactos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdContactos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdContactos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdContactos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jdContactos dialog = new jdContactos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable GrillaContactos;
    private javax.swing.JButton btAceptar;
    private javax.swing.JButton btAgregarContacto;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btEliminarContacto;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
