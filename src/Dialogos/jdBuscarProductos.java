/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import Conexion.ExeSql;
import Conexion.ExeSqlLuvaly;
import Utilidades.CargaGrillas;
import Utilidades.TableCellRendererBuscaProducto;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author DavidAlcaman
 */
public class jdBuscarProductos extends javax.swing.JDialog {

    private String CodigoPro;
    private String NombrePro;
    private boolean Insumos=false;
    private boolean esCotiza=false;
    private boolean notran=false;
    private boolean desxpr=false;
    private boolean nstock=false;
    private String matriz[][] = new String[10000][2];
    
    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    
    
    public jdBuscarProductos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        Grilla.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        CodigoPro="";
        NombrePro="";
        jCheckBox1.setVisible(false);
        jCheckBox1.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent e) {
                        
            }


        });
    }
public String GetCodigo(){
        return CodigoPro;
        
    }
public String GetNombre(){
        return NombrePro;
        
    }
public void SetInsumo(){
    Insumos=true;
}
public void SetTexto(String Texto){
    txBuscar.setText(Texto);
}

public void SetCotiza(Boolean Cotiza){
    esCotiza = Cotiza;
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txBuscar = new javax.swing.JTextField();
        btBuscar = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel1.setPreferredSize(new java.awt.Dimension(867, 49));

        jLabel1.setText("Nombre");

        txBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txBuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txBuscarKeyReleased(evt);
            }
        });

        btBuscar.setText("Buscar");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Con Stock");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btBuscar)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox1)
                .addContainerGap(298, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscar)
                    .addComponent(jCheckBox1))
                .addContainerGap())
        );

        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "CÃ³digo", "ID", "Nombre", "Stock", "notran", "desxprecio", "nostock", "Sala"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaMouseClicked(evt);
            }
        });
        Grilla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                GrillaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(80);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(1).setPreferredWidth(200);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(300);
            Grilla.getColumnModel().getColumn(3).setMinWidth(60);
            Grilla.getColumnModel().getColumn(3).setPreferredWidth(60);
            Grilla.getColumnModel().getColumn(3).setMaxWidth(60);
            Grilla.getColumnModel().getColumn(4).setMinWidth(0);
            Grilla.getColumnModel().getColumn(4).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(4).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(5).setMinWidth(0);
            Grilla.getColumnModel().getColumn(5).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(5).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(6).setMinWidth(0);
            Grilla.getColumnModel().getColumn(6).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(6).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(7).setMinWidth(40);
            Grilla.getColumnModel().getColumn(7).setPreferredWidth(40);
            Grilla.getColumnModel().getColumn(7).setMaxWidth(40);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 861, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String TextoBusqueda(){
        String Texto="upper(p.nombre) like '%";
        String Palabras[] = txBuscar.getText().split(" ");
        
        if(Palabras.length>0){
            Texto = Texto + Palabras[0] + "%' ";
            for(int i=1; i< Palabras.length; i++){
                Texto = Texto + "or upper(p.nombre) like '%" + Palabras[i] + "%' ";
            }
        }
        else{
            Texto = Texto + txBuscar.getText() + "%' ";         
        }
        return Texto;
    }
    
    
    public void buscar_prod(Boolean cotiza){
        
//      DefaultTableModel tbMd = new DefaultTableModel();
        DefaultTableModel tbMd = (DefaultTableModel) Grilla.getModel();
        
        while (tbMd.getRowCount() > 0) {
        
            tbMd.removeRow(0);
        }
        
        
        ExeSqlLuvaly luv = new ExeSqlLuvaly();
        ExeSqlLuvaly Sql2 = new ExeSqlLuvaly();
        
        ResultSet Rs,Rs2, producto;
        
        boolean sala = false;
            
        int cant = 0;


        String ID = "";
        
        String sql = "SELECT p.sku,id2.ids,p.nombre,i.stock AS stock,p.notransado,p.desxprecio, sinstock \n" +
                     "FROM producto p\n" +
                     "LEFT JOIN inventario i ON p.sku=i.sku \n" + 
                     "LEFT JOIN (SELECT sku, STRING_AGG (idch, ' - ' ORDER BY idch) AS ids \n" +
                     "FROM codchile GROUP BY sku) id2 ON (p.sku = id2.sku)" ;
        
        if(Insumos)
            sql = sql + "where insumo=true\n";
        else
            sql = sql + "where insumo=false\n";
        
            sql = sql + "and (" + TextoBusqueda() + ") ";
                
        if ( cotiza ){}

        else
            sql = sql  + " and p.es_cotiza <> 1 \n";

        if(jCheckBox1.isSelected()){
            sql = sql + " and i.stock > 0\n";
        }
        

        if ( cotiza ){
            sql = sql  + " order by nombre";
        }    
        else if (!jCheckBox1.isSelected())
           
            sql = sql  + " order by nombre";
            

        try {
            
//            CargaGrillas c = new CargaGrillas();
//            tbMd = c.returndata(sql);
            
            
            Rs = luv.Select(sql);
            
            while (Rs.next()){

                ID = Rs.getString("ids");
                notran=Rs.getBoolean("notransado");
                desxpr=Rs.getBoolean("desxprecio");
                nstock=Rs.getBoolean("sinstock");
                
     //**************************************************************************************************************************************************//            
                
                 Rs2 = Sql2.Select("SELECT mt.sku, case when sum(mt.cant) is null then 0 else sum(mt.cant) end as total FROM mt_productos mt \n" +
                                   "WHERE mt.sku = '"+Rs.getString("sku")+"' AND mt.ubicacion LIKE '%SAL%' \n" +
                                   "GROUP BY mt.sku");
                 
                if (Sql2.GetRowCount() > 0){
                 
                    Rs2.next();
                    
                    cant = Rs2.getInt("total"); 
                    
                    if (cant > 0){
                    
                        sala = true; 
                       
                    
                    }else {
                    
                      sala = false;      
                    
                    }
                 
                }else {
                
                    sala = false; 
                
                }
               
                
    //**************************************************************************************************************************************************//            
                
                
                
                
                
                tbMd.addRow(new Object[]{Rs.getString("sku"),ID,Rs.getString("nombre"),Rs.getString("stock"),notran,desxpr,nstock,sala});
            
            }
            
            Grilla.setDefaultRenderer(Object.class, new TableCellRendererBuscaProducto());
            
            Grilla.setDefaultRenderer(Object.class, new Elrender()); 
            
            Grilla.repaint();
            
//            Grilla.setModel(tbMd);
//            Grilla.getColumnModel().getColumn(0).setPreferredWidth(90);//Sku
//            Grilla.getColumnModel().getColumn(1).setPreferredWidth(180);//ID
//            Grilla.getColumnModel().getColumn(2).setPreferredWidth(280);//Nombre
//            Grilla.getColumnModel().getColumn(3).setPreferredWidth(80);//Stock
//
//            jScrollPane1.getViewport().add(Grilla);
//            Grilla.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        } catch (Exception e) {
        }
        finally {

            luv.Close();
        }
    }
    
    
    
    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed


        buscar_prod(esCotiza);

//        DefaultTableModel tbMd = new DefaultTableModel();
//        
//        String sql = "select p.sku,p.nombre,u.unidad,i.stock as stock\n" +
//                     "from producto p\n" +
//                     "left join par_unidad u\n" +
//                     "on p.unidad=u.codigo\n" +
//                     "left join inventario i\n" +
//                     "on p.sku=i.sku\n" ;
//        
//        if(Insumos)
//            sql = sql + "where insumo=true\n";
//        else
//            sql = sql + "where insumo=false\n";
//        
//        
//        
//        
//        sql = sql + "and (" + TextoBusqueda() + ") and p.es_cotiza =0 order by nombre";
//
//        try {
//            CargaGrillas c = new CargaGrillas();
//            tbMd = c.returndata(sql);
//            Grilla.setModel(tbMd);
//            Grilla.getColumnModel().getColumn(0).setPreferredWidth(90);//Sku
//            Grilla.getColumnModel().getColumn(1).setPreferredWidth(280);//Nombre
//            Grilla.getColumnModel().getColumn(2).setPreferredWidth(80);//Unidad
//            Grilla.getColumnModel().getColumn(3).setPreferredWidth(80);//Stock
//
//            jScrollPane1.getViewport().add(Grilla);
//            Grilla.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
//        } catch (Exception e) {
//        }
    }//GEN-LAST:event_btBuscarActionPerformed

    private void GrillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMouseClicked
        if(evt.getClickCount()==2 && !Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString().isEmpty()){
              SelCodigo();
        }
    }//GEN-LAST:event_GrillaMouseClicked

    private void GrillaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GrillaKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER && !Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString().isEmpty()){
              SelCodigo();
        }
    }//GEN-LAST:event_GrillaKeyPressed

    private void txBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txBuscarKeyReleased
//        txBuscar.setText(txBuscar.getText().toUpperCase());
//        if(evt.getKeyCode()== KeyEvent.VK_ENTER)
//        btBuscar.doClick();
//        if(evt.getKeyCode()== KeyEvent.VK_DOWN)
//        Grilla.requestFocus();
    }//GEN-LAST:event_txBuscarKeyReleased

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        buscar_prod(esCotiza);

    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void txBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txBuscarKeyPressed
        
        txBuscar.setText(txBuscar.getText().toUpperCase());
        if(evt.getKeyCode()== KeyEvent.VK_ENTER)
        btBuscar.doClick();
        if(evt.getKeyCode()== KeyEvent.VK_DOWN)
        Grilla.requestFocus();
        
    }//GEN-LAST:event_txBuscarKeyPressed
    private void SelCodigo(){ 

        CodigoPro = Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString().trim();
        NombrePro = Grilla.getValueAt(Grilla.getSelectedRow(), 2).toString().trim();

        dispose();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdBuscarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdBuscarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdBuscarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdBuscarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jdBuscarProductos dialog = new jdBuscarProductos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    
    class Elrender extends DefaultTableCellRenderer {
         
        @Override
        public Component getTableCellRendererComponent(JTable tabla, Object valor, boolean isSelected, boolean hasFocus, int fila, int columna) {
        super.getTableCellRendererComponent(tabla,valor,isSelected, hasFocus, fila, columna);

               if(isSelected){
                   
                   this.setBackground(Color.blue);
                   this.setForeground(Color.white);    
                   
                   
               }else{
                
                   this.setForeground(Color.black);  
                   this.setBackground(Color.white);
               
               
               }  
               return this;
        
        }
    } 
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla;
    public javax.swing.JButton btBuscar;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txBuscar;
    // End of variables declaration//GEN-END:variables
}

