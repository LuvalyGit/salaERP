/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import Conexion.ExeSql;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author infornatica
 */
public class jdRelacionadosReporte extends javax.swing.JDialog {

    /**
     * Creates new form jdRelacionadosReporte
     */
    public jdRelacionadosReporte(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        CargaRelacionados();
        CargaTrans();
        CargaMadre();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        GrillaMadre = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        GrillaHijo = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txSku4 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        madre_label = new javax.swing.JLabel();
        relacionados_label = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        GrillaTrans = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        GrillaTrans2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtHijo = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        txtMadre = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTabbedPane2.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Relacionados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Origen", "SKU (Origen)", "Relacionado", "SKU (Relacionado)", "Fecha CreaciÃ³n", "Usuario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaMouseClicked(evt);
            }
        });
        Grilla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                GrillaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(350);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(350);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(350);
            Grilla.getColumnModel().getColumn(1).setMinWidth(100);
            Grilla.getColumnModel().getColumn(1).setPreferredWidth(100);
            Grilla.getColumnModel().getColumn(1).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(2).setMinWidth(350);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(350);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(350);
            Grilla.getColumnModel().getColumn(3).setMinWidth(100);
            Grilla.getColumnModel().getColumn(3).setPreferredWidth(100);
            Grilla.getColumnModel().getColumn(3).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(4).setMinWidth(100);
            Grilla.getColumnModel().getColumn(4).setPreferredWidth(100);
            Grilla.getColumnModel().getColumn(4).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(5).setMinWidth(100);
            Grilla.getColumnModel().getColumn(5).setPreferredWidth(100);
            Grilla.getColumnModel().getColumn(5).setMaxWidth(100);
        }

        GrillaMadre.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Origen", "SKU"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GrillaMadre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaMadreMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(GrillaMadre);
        if (GrillaMadre.getColumnModel().getColumnCount() > 0) {
            GrillaMadre.getColumnModel().getColumn(0).setMinWidth(350);
            GrillaMadre.getColumnModel().getColumn(0).setPreferredWidth(350);
            GrillaMadre.getColumnModel().getColumn(0).setMaxWidth(350);
            GrillaMadre.getColumnModel().getColumn(1).setMinWidth(100);
            GrillaMadre.getColumnModel().getColumn(1).setPreferredWidth(100);
            GrillaMadre.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        GrillaHijo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto Relacionado", "SKU"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(GrillaHijo);
        if (GrillaHijo.getColumnModel().getColumnCount() > 0) {
            GrillaHijo.getColumnModel().getColumn(0).setMinWidth(350);
            GrillaHijo.getColumnModel().getColumn(0).setPreferredWidth(350);
            GrillaHijo.getColumnModel().getColumn(0).setMaxWidth(350);
            GrillaHijo.getColumnModel().getColumn(1).setMinWidth(100);
            GrillaHijo.getColumnModel().getColumn(1).setPreferredWidth(100);
            GrillaHijo.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Filtro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel13.setText("FILTRO:");

        txSku4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txSku4KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txSku4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txSku4KeyTyped(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Cancel16.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txSku4, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txSku4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Cantidad", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel2.setText("Relacionados:");

        jLabel3.setText("Productos Madre:");

        madre_label.setText("0");

        relacionados_label.setText("0");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(relacionados_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(madre_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(madre_label))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(relacionados_label))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 562, Short.MAX_VALUE)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(226, 226, 226))
        );

        jTabbedPane2.addTab("Reporte Relacionados", jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Transformaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        GrillaTrans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre Producto Madre", "SKU Madre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GrillaTrans.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaTransMouseClicked(evt);
            }
        });
        GrillaTrans.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                GrillaTransKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(GrillaTrans);
        if (GrillaTrans.getColumnModel().getColumnCount() > 0) {
            GrillaTrans.getColumnModel().getColumn(1).setMinWidth(100);
            GrillaTrans.getColumnModel().getColumn(1).setPreferredWidth(100);
            GrillaTrans.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        GrillaTrans2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SKU", "Producto Hijo", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GrillaTrans2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                GrillaTrans2KeyReleased(evt);
            }
        });
        jScrollPane5.setViewportView(GrillaTrans2);
        if (GrillaTrans2.getColumnModel().getColumnCount() > 0) {
            GrillaTrans2.getColumnModel().getColumn(0).setMinWidth(100);
            GrillaTrans2.getColumnModel().getColumn(0).setPreferredWidth(100);
            GrillaTrans2.getColumnModel().getColumn(0).setMaxWidth(100);
            GrillaTrans2.getColumnModel().getColumn(2).setMinWidth(100);
            GrillaTrans2.getColumnModel().getColumn(2).setPreferredWidth(100);
            GrillaTrans2.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/derecha16.png"))); // NOI18N

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Filtro Producto Hijo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel14.setText("FILTRO:");

        txtHijo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHijoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHijoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHijoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHijo)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtHijo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Filtro Producto Madre", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel15.setText("FILTRO:");

        txtMadre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMadreKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMadreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMadreKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMadre)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtMadre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                            .addComponent(jScrollPane5))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Transformaciones", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 616, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GrillaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GrillaKeyPressed
        
    }//GEN-LAST:event_GrillaKeyPressed

    private void GrillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMouseClicked
        CargaMadre();
    }//GEN-LAST:event_GrillaMouseClicked

    private void GrillaMadreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMadreMouseClicked
        CargaHijo(GrillaMadre.getValueAt(GrillaMadre.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_GrillaMadreMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String Query = "delete from codproducto_rel where sku = '"+Grilla.getValueAt(Grilla.getSelectedRow(), 3)+"' and sku_rel = '"+Grilla.getValueAt(Grilla.getSelectedRow(), 1)+"' ";
        ExeSql sql = new ExeSql();
        try {
            if(JOptionPane.showConfirmDialog(rootPane, "Desea eliminar relaciÃ³n?")==1){
                
            }
            else {

                sql.ExeSql(Query);
                JOptionPane.showMessageDialog(rootPane, "Relacion eliminada.");
                CargaRelacionados();
            }
        } catch (SQLException ex) {
            Logger.getLogger(jdRelacionadosReporte.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Error al eliminar relaciÃ³n.");
            CargaRelacionados();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txSku4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txSku4KeyPressed

        
        

    }//GEN-LAST:event_txSku4KeyPressed

    private void txSku4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txSku4KeyReleased
        TableRowSorter<TableModel>sorter = new TableRowSorter<TableModel>(Grilla.getModel());
        Grilla.setRowSorter(sorter);
        String sku = txSku4.getText().trim();
        if (sku.length()==0)
        {
            sorter.setRowFilter(null);
        }
        else{
            int cant=0;
            int ev=0;
            String precio = "";
            sorter.setRowFilter(RowFilter.regexFilter(sku));
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txSku4KeyReleased

    private void txSku4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txSku4KeyTyped
        // TODO add your handling code here:
        if (Character.isLowerCase(evt.getKeyChar()))
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    }//GEN-LAST:event_txSku4KeyTyped

    private void txtHijoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHijoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHijoKeyPressed

    private void txtHijoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHijoKeyReleased
        TableRowSorter<TableModel>sorter = new TableRowSorter<TableModel>(GrillaTrans2.getModel());
        GrillaTrans2.setRowSorter(sorter);
        String sku = txtHijo.getText().trim();
        if (sku.length()==0)
        {
            sorter.setRowFilter(null);
        }
        else{
            int cant=0;
            int ev=0;
            String precio = "";
            sorter.setRowFilter(RowFilter.regexFilter(sku));
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtHijoKeyReleased

    private void txtHijoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHijoKeyTyped
        if (Character.isLowerCase(evt.getKeyChar()))
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    }//GEN-LAST:event_txtHijoKeyTyped

    private void txtMadreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMadreKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMadreKeyPressed

    private void txtMadreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMadreKeyReleased
        TableRowSorter<TableModel>sorter = new TableRowSorter<TableModel>(GrillaTrans.getModel());
        GrillaTrans.setRowSorter(sorter);
        String sku = txtMadre.getText().trim();
        if (sku.length()==0)
        {
            sorter.setRowFilter(null);
        }
        else{
            int cant=0;
            int ev=0;
            String precio = "";
            sorter.setRowFilter(RowFilter.regexFilter(sku));
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtMadreKeyReleased

    private void txtMadreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMadreKeyTyped
        if (Character.isLowerCase(evt.getKeyChar()))
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    }//GEN-LAST:event_txtMadreKeyTyped

    private void GrillaTransMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaTransMouseClicked
        CargarProductosTransformacion();
    }//GEN-LAST:event_GrillaTransMouseClicked

    private void GrillaTransKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GrillaTransKeyReleased
        
    }//GEN-LAST:event_GrillaTransKeyReleased

    private void GrillaTrans2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GrillaTrans2KeyReleased
        
    }//GEN-LAST:event_GrillaTrans2KeyReleased
    public void CargaHijo(String sku_rel) {
        if(GrillaMadre.getModel().getRowCount()==0){
            
        }
        else {
             
            String Query = "SELECT pp.sku, pp.nombre\n" +
                            "from codproducto_rel as rel\n" +
                            "left join producto p on p.sku = rel.sku_rel\n" +
                            "left join producto pp on pp.sku = rel.sku\n" +
                            "where rel.sku_rel = '"+sku_rel+"'";
            ExeSql sql = new ExeSql();
            ResultSet rs = null;
            DefaultTableModel model = (DefaultTableModel) GrillaHijo.getModel();
            while(model.getRowCount()>0){
                model.removeRow(0);
            }
            try {
                rs = sql.Select(Query);
                for(int i = 0;rs.next(); i++){
                    model.addRow(new Object[]{ 
                        rs.getString("nombre"),
                        rs.getString("sku")
                    });

                }
            } catch (SQLException ex) {
                Logger.getLogger(jdRelacionadosReporte.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    public void CargaMadre() {
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        String Query = "select DISTINCT on (cod.sku_rel) p.nombre, cod.sku_rel from codproducto_rel cod\n" +
        "left join producto p on p.sku = cod.sku_rel";
        DefaultTableModel model = (DefaultTableModel) GrillaMadre.getModel();
        while(model.getRowCount()>0){
            model.removeRow(0);
        }
        try {
            int conteo = 0;
            rs = sql.Select(Query);
            for(int i = 0; rs.next(); i++){
                model.addRow(new Object[]{
                    rs.getString("nombre"),
                    rs.getString("sku_rel")
                });
                conteo = conteo + 1;
            }
            madre_label.setText(String.valueOf(conteo));
        } catch (SQLException ex) {
            Logger.getLogger(jdRelacionadosReporte.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void CargaRelacionados() {
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        String Query = "select p.nombre as origen, p.sku ,\n" +
        "pp.nombre as hijo, pp.sku as sku_1, rel.fcreacion, rel.usuario\n" +
        "from codproducto_rel as rel\n" +
        "left join producto p on p.sku = rel.sku_rel\n" +
        "left join producto pp on pp.sku = rel.sku\n" +
        "order by p.nombre";
        DefaultTableModel model = (DefaultTableModel) Grilla.getModel();
        while(model.getRowCount()>0){
            model.removeRow(0);
        }
        int conteo = 0;
        try {
            rs = sql.Select(Query);
            for(int i = 0; rs.next(); i++){
                model.addRow(new Object[]{
                    rs.getString("origen"),
                    rs.getString("sku"),
                    rs.getString("hijo"),
                    rs.getString("sku_1"),
                    rs.getString("fcreacion"),
                    rs.getString("usuario")
                });
                conteo = conteo + 1;
            }
            relacionados_label.setText(String.valueOf(conteo));
        } catch (SQLException ex) {
            Logger.getLogger(jdRelacionadosReporte.class.getName()).log(Level.SEVERE, null, ex);
        }

        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdRelacionadosReporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdRelacionadosReporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdRelacionadosReporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdRelacionadosReporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jdRelacionadosReporte dialog = new jdRelacionadosReporte(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla;
    private javax.swing.JTable GrillaHijo;
    private javax.swing.JTable GrillaMadre;
    private javax.swing.JTable GrillaTrans;
    private javax.swing.JTable GrillaTrans2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel madre_label;
    private javax.swing.JLabel relacionados_label;
    private javax.swing.JTextField txSku4;
    private javax.swing.JTextField txtHijo;
    private javax.swing.JTextField txtMadre;
    // End of variables declaration//GEN-END:variables

    private void CargaTrans() {
        String Query = "select p.nombre as madre, p.sku as sku_1, pp.nombre as hijo, pp.sku as sku_2, tra.cantidad\n" +
        "from transformacion as tra\n" +
        "left join producto p on p.sku = tra.sku\n" +
        "left join producto pp on pp.sku = tra.skurel";
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        try {
            rs = sql.Select(Query);
            DefaultTableModel model = (DefaultTableModel) GrillaTrans.getModel();
            while(model.getRowCount()>0){
                model.removeRow(0);
            }
            for(int i = 0; rs.next();i++){
                model.addRow(new Object[]{
                    rs.getString("madre"),
                    rs.getString("sku_1"),                   
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(jdRelacionadosReporte.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void CargarProductosTransformacion(){
        String Query = "select pp.nombre as hijo, pp.sku as sku_2, tra.cantidad\n" +
        "from transformacion as tra\n" +
        "left join producto p on p.sku = tra.sku\n" +
        "left join producto pp on pp.sku = tra.skurel\n" +
        "where tra.sku = '"+GrillaTrans.getValueAt(GrillaTrans.getSelectedRow(),1).toString()+"'";
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        try {
            rs = sql.Select(Query);
            DefaultTableModel model = (DefaultTableModel) GrillaTrans2.getModel();
            while(model.getRowCount()>0){
                model.removeRow(0);
            }
            for(int i = 0; rs.next(); i++){
                model.addRow(new Object[]{
                    rs.getString("sku_2"),
                    rs.getString("hijo"),
                    rs.getString("cantidad")
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(jdRelacionadosReporte.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
}
