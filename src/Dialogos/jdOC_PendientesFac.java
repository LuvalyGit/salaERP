/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import Conexion.ExeSql;
import Formularios.fmMain;
import Utilidades.Exporter;
import Utilidades.POI_excel;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DavidAlcaman
 */
public class jdOC_PendientesFac extends javax.swing.JDialog {
   DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    private Object GrillaOCS;
    public static int pano; 
    public static int pmes;
    public static int pmes_oc;

    /**
     * Creates new form jdTrasnporte
     */
    public jdOC_PendientesFac(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        Grilla.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        btAceptar = new javax.swing.JButton();
        lbmar3 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        BtExcel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Grilla.setAutoCreateRowSorter(true);
        Grilla.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Convenio", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(50);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(50);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(50);
            Grilla.getColumnModel().getColumn(1).setMinWidth(370);
            Grilla.getColumnModel().getColumn(1).setPreferredWidth(370);
            Grilla.getColumnModel().getColumn(1).setMaxWidth(370);
            Grilla.getColumnModel().getColumn(2).setMinWidth(150);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(150);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(150);
        }

        btAceptar.setText("Aceptar");
        btAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAceptarActionPerformed(evt);
            }
        });

        lbmar3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbmar3.setText("Total");

        lblTotal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotal.setText("0.00");

        BtExcel.setText("Excel");
        BtExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(btAceptar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lbmar3)
                        .addGap(42, 42, 42)
                        .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(BtExcel)
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(BtExcel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotal)
                    .addComponent(lbmar3))
                .addGap(18, 18, 18)
                .addComponent(btAceptar))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void CargaOC(int agno, int mes, int mes_oc  ){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        pano = agno;
        pmes = mes; 
        pmes_oc = mes_oc;
        
        
        double Sumador = 0.00;
        
           lblTotal.setText(String.valueOf(fmMain.FormatoNumero(Sumador)));      
        
        int ContReg=0;
         while(TableModel.getRowCount()>0)
             TableModel.removeRow(0);
        try {
            
            String Query ="select ALL_OC.codigo, ALL_OC.convenio,sum(ALL_OC.sum_oc) sum_oc\n" +
"FROM\n" +
"(select \n" +
"conv.codigo, conv.convenio,c.rut,c.codigo_oc,c.orden,\n" +
"SUM(d.cantidad * d.valorunitario) sum_oc\n" +
"          from occh c\n" +
"         left join occhdet d on c.rut = d.rut and \n" +
"          c.orden = d.orden \n" +
"          and  c.codigo_oc   = d.codigo_oc\n" +
"     left join producto p on d.sku = p.sku\n" +
"     left join par_convenio conv on conv.codigo = p.convenio\n" +
"          where \n" +
"          extract(year from c.femision) =" + agno + " and \n" +
"          extract(month from c.femision) =" + mes_oc + " and \n" +
"          conv.convenio is  not null\n" +
"group by \n" +
"conv.codigo, conv.convenio,c.rut,c.codigo_oc,c.orden) ALL_OC\n" +
"Left join (SELECT  \n" +
"                         conv.codigo, conv.convenio,\n" +
"                         c.rut, c.codigo_oc , c.occh, \n" +
"                          SUM(d.cantidad * d.valorunitario) sum_fac\n" +
"					from ctactecli c\n" +
"                       left join ctacteclidet d on c.rut = d.rut and c.tipdocto =\n" +
"                        d.tipdocto and c.nrodocto = d.nrodocto\n" +
"                       left join producto p on d.sku = p.sku\n" +
"                       left join par_convenio conv on conv.codigo = p.convenio\n" +
"                       inner join \n" +
"                       (\n" +
"                         select distinct orden,\n" +
"                                codigo_oc\n" +
"                         from occh  where \n" +
"          extract(year from femision) =" + agno + " and \n" +
"          extract(month from femision) =" + mes_oc + " \n" +
"                       ) oc on c.occh = oc.orden and c.codigo_oc = oc.codigo_oc\n" +
"                  where c.tipdocto in ('NCC','FAC','FEC') and\n" +
"                       extract(year from c.femision) = " + agno + " and \n" +
"                       extract(month from c.femision) BETWEEN 1 and " + mes + " and\n" +
"                   conv.convenio is not null\n" +
"                  group by  \n" +
"					conv.codigo, conv.convenio,c.rut, c.codigo_oc , c.occh) ALL_FAC \n" +
"on \n" +
"		ALL_FAC.rut  = all_oc.rut and\n" +
"		ALL_FAC.codigo_oc  = all_oc.codigo_oc and\n" +
"        ALL_FAC.occh  = all_oc.orden and\n" +
"        ALL_FAC.codigo  = all_oc.codigo \n" +
"    where ALL_FAC.rut is NULL\n" +
"group by ALL_OC.codigo, ALL_OC.convenio   order by ALL_OC.codigo  ";
            
            Rs = Sql.Select(Query);
            
            while (Rs.next()){
                ContReg++;
                        TableModel.addRow(new Object[]{
                                               Rs.getString("codigo").trim(),
                                               Rs.getString("convenio").trim(), 
                                               fmMain.FormatoNumero(Rs.getDouble("sum_oc"))});
                        
                        
                        
                        
                Sumador = Sumador + Rs.getDouble("sum_oc");
                lblTotal.setText(String.valueOf(fmMain.FormatoNumero(Sumador)));
               }
                
               // Grilla_OC.changeSelection(0, 0 , false, false);
            
        } catch (Exception e) {
          
        } finally{
            Sql.Close();
            
        }
        
    }   
    
    
    public void abrir(String file ){
        
       try {
           String url = file;
           ProcessBuilder p = new ProcessBuilder();
           p.command("cmd.exe", "/c",url);
           p.start();
       } catch (IOException ex) {
           Logger.getLogger(jdOC_PendientesFac.class.getName()).log(Level.SEVERE, null, ex);
       }
        
    }
    
    
    
    private void btAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAceptarActionPerformed
        dispose();
    }//GEN-LAST:event_btAceptarActionPerformed

    private void BtExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtExcelActionPerformed
        // TODO add your handling code here:
        
//        if(Grilla.getRowCount()==0){
//            fmMain.Mensaje("Nada que exportar");
//            return;
//        }
//
//        JFileChooser chooser = new JFileChooser();
//        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo Excel",".xls");
//        chooser.setFileFilter(filter);
//        chooser.setDialogTitle("Guardar Informe en Excel");
//        chooser.setMultiSelectionEnabled(false);
//        chooser.setAcceptAllFileFilterUsed(false);
//
//        if(chooser.showSaveDialog(null)== JFileChooser.APPROVE_OPTION){
//            List<JTable> tb=new ArrayList<>();
//            List<String> nom=new ArrayList<>();
//            tb.add(Grilla);
//            nom.add("Año: " + pano + " Mes: " + pmes + " Mes_OC: "+ pmes_oc);
//            String file=chooser.getSelectedFile().toString().concat(".xls");
//            try {
//                Exporter e = new Exporter(new File(file), tb, nom);
//                
//                if(e.export())
//                fmMain.Mensaje("Datos Exportados");
//                abrir(file);
//                
//            } catch (Exception e) {
//                fmMain.Mensaje(e.getMessage());
//            }
//
//           
//        }
        
        
        if(Grilla.getRowCount()==0){
            fmMain.Mensaje("Nada que exportar");
            return;
        }

//        JFileChooser chooser = new JFileChooser();
//        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo Excel",".xls");
//        chooser.setFileFilter(filter);
//        chooser.setDialogTitle("Guardar Informe en Excel");
//        chooser.setMultiSelectionEnabled(false);
//        chooser.setAcceptAllFileFilterUsed(false);


            List<JTable> tb=new ArrayList<>();
            List<String> nom=new ArrayList<>();
            tb.add(Grilla);
            nom.add("Agno->" + pano + " Mes->" + pmes + " Mes_OC->"+ pmes_oc);
            
            File folder = new File("c:/temp");
            if (!folder.exists())
            {
                folder.mkdir();
            }
            
             String file = "C:/temp/convenio" + pano + "-" + pmes + "-"+ pmes_oc +".xls";       
            
            
            try {
                Exporter e = new Exporter(new File(file), tb, nom);
                
                if(e.export())
                //fmMain.Mensaje("Datos Exportados");
                abrir(file);
                
            } catch (Exception e) {
                fmMain.Mensaje(e.getMessage());
            }
    }//GEN-LAST:event_BtExcelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdOC_PendientesFac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdOC_PendientesFac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdOC_PendientesFac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdOC_PendientesFac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jdOC_PendientesFac dialog = new jdOC_PendientesFac(new javax.swing.JFrame(), true);
                
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtExcel;
    private javax.swing.JTable Grilla;
    private javax.swing.JButton btAceptar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lbmar3;
    // End of variables declaration//GEN-END:variables
}
