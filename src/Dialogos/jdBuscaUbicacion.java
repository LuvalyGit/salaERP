/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import Conexion.ExeSql;
import Formularios.fmMain;
import Utilidades.ComboCodigos;
import Utilidades.Combo_CodStr;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author David Alcaman
 */
public class jdBuscaUbicacion extends javax.swing.JDialog {

    /**
     * Creates new form jdAjustePesos
     */
    public jdBuscaUbicacion(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        txtUbicacionOrig.setEnabled(false);
        txtUbicacionOrig.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        cbBodegaOR = new javax.swing.JComboBox<String>();
        cbRackOR = new javax.swing.JComboBox<String>();
        cbMetroOR = new javax.swing.JComboBox<String>();
        txtUbicacionOrig = new javax.swing.JTextField();
        txNombreUbicaOrig = new javax.swing.JTextField();
        btDesde = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("UBICACION"));

        cbBodegaOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBodegaORActionPerformed(evt);
            }
        });

        cbRackOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRackORActionPerformed(evt);
            }
        });

        cbMetroOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMetroORActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(cbBodegaOR, 0, 112, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbRackOR, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbMetroOR, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbBodegaOR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbRackOR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbMetroOR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtUbicacionOrig.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUbicacionOrigFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUbicacionOrigFocusLost(evt);
            }
        });
        txtUbicacionOrig.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUbicacionOrigKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUbicacionOrigKeyReleased(evt);
            }
        });

        txNombreUbicaOrig.setEditable(false);
        txNombreUbicaOrig.setBackground(new java.awt.Color(255, 255, 255));
        txNombreUbicaOrig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNombreUbicaOrigActionPerformed(evt);
            }
        });

        btDesde.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Ok.png"))); // NOI18N
        btDesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDesdeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtUbicacionOrig)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txNombreUbicaOrig, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUbicacionOrig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txNombreUbicaOrig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public String  GetUbicacion(){
        return txtUbicacionOrig.getText().trim();
    }
    
    public String  GetNombreUbicacion(){
        return txNombreUbicaOrig.getText().trim();
    }
    
//  -------------------  Agrega la carga de combos en Ubicacion Original----------------------------
    public void CargaBodegaOR(int ConTransito){
         
        //ConTransito=0, no agrega bodega Transito
        //ConTransito=1,  agrega bodega Transito 
        DefaultComboBoxModel value;
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        String Query="";
        cbBodegaOR.removeAllItems();
        int i=0;
        value = new DefaultComboBoxModel();
        try {
           
//            Query="SELECT split_part(mt.nombre, '-',1) AS nombre \n"+
//                  "FROM mt_codmetro mt WHERE codmetro LIKE '%SAL%' or codmetro IN ('TRAN.1001.1') \n";
            
            Query="SELECT split_part(mt.nombre, '-',1) AS nombre \n"+
                  "FROM mt_codmetro mt WHERE mt.habilita = 1 \n";
            

            Query = Query + "GROUP BY split_part(mt.nombre, '-',1) order by split_part(mt.nombre, '-',1);";
            
            Rs = Sql.Select(Query);
            
            if(Sql.GetRowCount()==0) return;
                
            value.addElement(new Combo_CodStr("Seleccione","",0));     
            
            while(Rs.next()){
              
              value.addElement(new Combo_CodStr(Rs.getString("nombre").trim(),"",i));
              
              System.out.println(Rs.getString("nombre").trim());
              
              i++;
            } 
           
            cbBodegaOR.setModel(value);
            cbBodegaOR.setSelectedIndex(0);
         
           

        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
     }
     
     
     public void CargaRackOR(){
        DefaultComboBoxModel value;
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        String Query="";
        cbRackOR.removeAllItems();
        int i=0;
        
//        CboProveedor.addItem("<Todos>");  
//        CboProveedor.setSelectedIndex(0);
        value =new DefaultComboBoxModel();
        try {
             
            Query ="SELECT split_part(mt.nombre, '-',2) AS nombre \n"+
                   "FROM mt_codmetro mt \n"+
                   "where split_part(mt.nombre, '-',1) = '"+cbBodegaOR.getSelectedItem().toString().trim()+"' \n"+
                   "GROUP BY split_part(mt.nombre, '-',2) ORDER BY split_part(mt.nombre, '-',2)";
            
            
            Rs = Sql.Select(Query);
            
            if(Sql.GetRowCount()==0) return;
             
            value.addElement(new ComboCodigos("Seleccione",0)); 
           
            while(Rs.next()){
                
                 value.addElement(new ComboCodigos(Rs.getString("nombre").trim(),0));
                
                System.out.println(Rs.getString("nombre").trim());
                
                
                i++;
           } 
           cbRackOR.setModel(value);
           
           if (cbRackOR.getSelectedIndex()>0){
               
               cbRackOR.setSelectedIndex(0);
           
           }
           
        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
     }
     
     
     public void CargaMetroOK(){
        DefaultComboBoxModel value;
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        String Query="";
        cbMetroOR.removeAllItems();

        value =new DefaultComboBoxModel();
        try {
            String strbodega="";

               if ((cbRackOR.getSelectedIndex()>=0) && (cbBodegaOR.getSelectedIndex()>=0)){
                   
                        Combo_CodStr bodegaOR = (Combo_CodStr) cbBodegaOR.getSelectedItem();
                        bodegaOR.getId(); 
                        
                        ComboCodigos RackCodigoOR = (ComboCodigos) cbRackOR.getSelectedItem();
                        RackCodigoOR.getId();
                    
                    Query = "SELECT split_part(mt.nombre, '-',3) AS nombre \n"+
                            "FROM mt_codmetro mt \n"+
                            "where split_part(mt.nombre, '-',1) = '"+cbBodegaOR.getSelectedItem().toString().trim()+"' \n"+
                            "AND split_part(mt.nombre, '-',2) = '"+cbRackOR.getSelectedItem().toString().trim()+"' \n"+
                            "group by split_part(mt.nombre, '-',3) order by split_part(mt.nombre, '-',3)"; 
                     
                   } 
               else
               {
                  return;
               }
            
            Rs = Sql.Select(Query);
            if(Sql.GetRowCount()==0) return;
             value.addElement(new ComboCodigos("Seleccione",0)); 
           
            while(Rs.next()){
                
                value.addElement(new ComboCodigos(Rs.getString("nombre").trim(),0));
                System.out.println(Rs.getString("nombre").trim());
            
           } 
           cbMetroOR.setModel(value);
           cbMetroOR.setSelectedIndex(0);
           
           
        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
     }    
//-----------------------------------------------------------------------------------------------

    
    
    
    
    private void cbBodegaORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBodegaORActionPerformed
       
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        
        if ((cbBodegaOR.getSelectedIndex()>0) && (cbRackOR.getSelectedIndex()>0) && (cbBodegaOR.getSelectedIndex()>0)){
            
            txNombreUbicaOrig.setText(cbBodegaOR.getSelectedItem().toString());
            txNombreUbicaOrig.setText(txNombreUbicaOrig.getText().trim()+ "-" +  cbRackOR.getSelectedItem().toString());
            txNombreUbicaOrig.setText(txNombreUbicaOrig.getText().trim()+ "-" +  cbMetroOR.getSelectedItem().toString());
        
            btDesde.doClick();

        }
        else{

            txtUbicacionOrig.setText("");
            txNombreUbicaOrig.setText("");

        }

        try{

            CargaRackOR();

        }
        catch(Exception e)
        {
            fmMain.Mensaje("Error: "+e);
        }
        finally{
            Sql.Close();
        }
        
        
    }//GEN-LAST:event_cbBodegaORActionPerformed

    private void cbRackORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRackORActionPerformed
      
        if (cbRackOR.getItemCount()==0)
        {
            return;
        }

        ExeSql Sql = new ExeSql();
        ResultSet Rs;

        if ((cbBodegaOR.getSelectedIndex()>0) && (cbRackOR.getSelectedIndex()>0) && (cbMetroOR.getSelectedIndex()>0))
        {
            txNombreUbicaOrig.setText(cbBodegaOR.getSelectedItem().toString());    
            txNombreUbicaOrig.setText(txNombreUbicaOrig.getText().trim()+ "-" +  cbRackOR.getSelectedItem().toString());
            txNombreUbicaOrig.setText(txNombreUbicaOrig.getText().trim()+ "-" +  cbMetroOR.getSelectedItem().toString());
      
            btDesde.doClick();
        }
        else{
            txtUbicacionOrig.setText("");
            txNombreUbicaOrig.setText("");
        }

        try{

            CargaMetroOK();

        }
        catch(Exception e)
        {
            fmMain.Mensaje("Error: "+e);
        }
        finally{
            Sql.Close();
        }
       
        
    }//GEN-LAST:event_cbRackORActionPerformed

    private void cbMetroORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMetroORActionPerformed
        
        if ((cbBodegaOR.getSelectedIndex()>0) && (cbRackOR.getSelectedIndex()>0) && (cbMetroOR.getSelectedIndex()>0))
        {
            txNombreUbicaOrig.setText(cbBodegaOR.getSelectedItem().toString());
            txNombreUbicaOrig.setText(txNombreUbicaOrig.getText().trim()+ "-" +  cbRackOR.getSelectedItem().toString());
            txNombreUbicaOrig.setText(txNombreUbicaOrig.getText().trim()+ "-" +  cbMetroOR.getSelectedItem().toString());

            despliegaUbicacion();
        }
        else{

            txtUbicacionOrig.setText("");
            txNombreUbicaOrig.setText("");
        }
        

    }//GEN-LAST:event_cbMetroORActionPerformed

    public void despliegaUbicacion(){
      
        ExeSql Sql = new ExeSql();
        ResultSet Rs, Rs1;
        String Query2 ;
        String strUbicacion = "";
        String strNombreUbicacion = "";

        if ((cbBodegaOR.getSelectedIndex()>0) && (cbRackOR.getSelectedIndex()>0) && (cbMetroOR.getSelectedIndex()>0))
        {
            txNombreUbicaOrig.setText(cbBodegaOR.getSelectedItem().toString());
            txNombreUbicaOrig.setText(txNombreUbicaOrig.getText().trim()+ "-" +  cbRackOR.getSelectedItem().toString());
            txNombreUbicaOrig.setText(txNombreUbicaOrig.getText().trim()+ "-" +  cbMetroOR.getSelectedItem().toString());
        }
        else{
            txtUbicacionOrig.setText("");
            txNombreUbicaOrig.setText("");
        }

        try{
            //strUbicacion = txtUbicacionOrig.getText().trim();
            strNombreUbicacion = txNombreUbicaOrig.getText().trim();
            String ubicaArray[] = strUbicacion.split("\\.");

            Query2 = "SELECT codmetro AS ubc, nombre from mt_codmetro \n" +
                     "WHERE nombre = '" +strNombreUbicacion+"'" ;
            
            Rs1 = Sql.Select(Query2);
            if (Rs1.next()){
                strNombreUbicacion =Rs1.getString("nombre").trim();
                strUbicacion =Rs1.getString("ubc").trim();
                txNombreUbicaOrig.setText(strNombreUbicacion);
                txtUbicacionOrig.setText(strUbicacion);
                txtUbicacionOrig.requestFocus();
            }
            else
            {
                fmMain.Mensaje("Ubicacion no encontrada, favor revise la ubicación");
            }
        }
        catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }

    }
            
    
    
    private void btDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDesdeActionPerformed
        dispose();
    }//GEN-LAST:event_btDesdeActionPerformed

    private void txtUbicacionOrigFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUbicacionOrigFocusGained
        // TODO add your handling code here:

        if (txtUbicacionOrig.getText().trim().equals("")){
            txNombreUbicaOrig.setText("");
        }
    }//GEN-LAST:event_txtUbicacionOrigFocusGained

    private void txtUbicacionOrigFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUbicacionOrigFocusLost
        // TODO add your handling code here:
        //if(evt.getKeyCode() == KeyEvent.VK_DELETE){
            if (txtUbicacionOrig.getText().trim().equals("")){
                txNombreUbicaOrig.setText("");
                //  }

        }
    }//GEN-LAST:event_txtUbicacionOrigFocusLost

    private void txtUbicacionOrigKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUbicacionOrigKeyPressed
        // TODO add your handling code here:
        ExeSql Sql = new ExeSql();
        ResultSet Rs, Rs1;
        String Query2 ;
        String strUbicacion = "";

        try{
            //                    if(evt.getKeyCode() == KeyEvent.VK_ENTER){
                //                    strUbicacion = txtUbicacionOrig.getText().trim();
                //                    String ubicaArray[] = strUbicacion.split("\\.");
                if(evt.getKeyCode() == KeyEvent.VK_ENTER){
                    strUbicacion = txtUbicacionOrig.getText();
                    String nombrePalabra =strUbicacion + Character.toString(evt.getKeyChar());

                    String ubicaArray[] = strUbicacion.split("\\.");
                    if (ubicaArray.length<3 ){
                        fmMain.Mensaje("Favor revise el codigo, no es de Ubicacion");
                        txtUbicacionOrig.setText("");
                        txNombreUbicaOrig.setText("");
                        txtUbicacionOrig.requestFocus();
                        return;
                    }

                    if (nombrePalabra.substring(0,3).trim().equals("LVL") || nombrePalabra.substring(0,4).trim().equals("TRAN")){
                        System.out.println("Codigo Correcto de Ubicacion");
                    }
                    else
                    {
                        fmMain.Mensaje("Favor revise el codigo, no es de Ubicacion");
                        txtUbicacionOrig.setText("");
                        txNombreUbicaOrig.setText("");
                        txtUbicacionOrig.requestFocus();
                        return;
                    }

                     Query2 = "SELECT codmetro AS ubc, nombre from mt_codmetro \n" +
                          "WHERE codmetro = '" +strUbicacion+"'" ;
                
                    
                    
                    Rs1 = Sql.Select(Query2);
                    if (Rs1.next()){
                        strUbicacion =Rs1.getString("nombre").trim();
                        txNombreUbicaOrig.setText(strUbicacion);
                        btDesde.requestFocus();
                    }
                    else
                    {
                        fmMain.Mensaje("Ubicacion no encontrada, favor revise la ubicación");
                    }

                }

            }
            catch (Exception e) {
                System.out.println(e.getMessage());
            } finally{
                Sql.Close();
            }

    }//GEN-LAST:event_txtUbicacionOrigKeyPressed

    private void txtUbicacionOrigKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUbicacionOrigKeyReleased
        // TODO add your handling code here:
        txtUbicacionOrig.setText( txtUbicacionOrig.getText().toUpperCase());
    }//GEN-LAST:event_txtUbicacionOrigKeyReleased

    private void txNombreUbicaOrigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNombreUbicaOrigActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txNombreUbicaOrigActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdBuscaUbicacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdBuscaUbicacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdBuscaUbicacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdBuscaUbicacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jdBuscaUbicacion dialog = new jdBuscaUbicacion(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDesde;
    private javax.swing.JComboBox<String> cbBodegaOR;
    private javax.swing.JComboBox<String> cbMetroOR;
    private javax.swing.JComboBox<String> cbRackOR;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextField txNombreUbicaOrig;
    private javax.swing.JTextField txtUbicacionOrig;
    // End of variables declaration//GEN-END:variables
}
