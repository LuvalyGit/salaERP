/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import Conexion.ExeSql;
import Formularios.fmMain;
import PanelForm.pfPrv_CargosRecibidos;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author infornatica
 */
public class jdAutorizaPagoDocumento extends javax.swing.JDialog {

    /**
     * Creates new form jdAutorizaPagoDocumento
     */
    public jdAutorizaPagoDocumento(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        CargaCuentas();
    }
    public void CargaCuentas() {
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        String query =  "select\n" +
                        "pp.nrodocumento,\n" +
                        "pp.autorizado,\n" +
                        "cli.tipdocto,\n" +
                        "cli.utilizado monto_ocupado,\n" +
                        "cli.totaldocto,CAST(cli.codigo_oc as varchar) || '-' || cli.occh as orden \n" +
                        "from prv_pagos_autoriza pp\n" +
                        "left join prv_cuentasxpagar prv on prv.id = pp.cuenta\n" +
                        "left join ctactecli cli on (cli.nrodocto = pp.id_cartola or cli.nrodocto = cast(pp.nrodocumento as integer)) and cli.tipdocto = 'FAC'\n" +
                        "group by pp.nrodocumento,cli.utilizado, cli.totaldocto,cli.codigo_oc ,cli.occh, pp.autorizado, cli.tipdocto";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        while(model.getRowCount()>0) {
            model.removeRow(0);
        }
        try {
            rs = sql.Select(query);
            for(int i = 0; rs.next() ; i++) {
                model.addRow(new Object[] {
                    rs.getString("nrodocumento"),
                    rs.getString("orden"),
                    rs.getString("tipdocto"),
                    rs.getString("monto_ocupado"),
                    rs.getString("totaldocto"),
                    rs.getInt("totaldocto") - rs.getInt("monto_ocupado"),
                    rs.getBoolean("autorizado")
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(jdAutorizaPagoDocumento.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            sql.Close();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        GrillaMovimientos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Documento (FAC)"));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nro Docto", "Orden", "Tipo", "Monto Ocupado", "Monto Total", "Diferencia", "Autorizada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(70);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(70);
            jTable1.getColumnModel().getColumn(6).setMinWidth(100);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(6).setMaxWidth(100);
        }

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/ok_16.png"))); // NOI18N
        jButton1.setText("Autorizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Por Pagar (Vista Previa)"));

        GrillaMovimientos.setAutoCreateRowSorter(true);
        GrillaMovimientos.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        GrillaMovimientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "RUT", "TIPO", "FECHA", "DETALLE", "MONTO", "ID", "PAGADO (VISTA PREVIA)", "DIFERENCIA", "Relacionados"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GrillaMovimientos.getTableHeader().setReorderingAllowed(false);
        GrillaMovimientos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaMovimientosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                GrillaMovimientosMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                GrillaMovimientosMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(GrillaMovimientos);
        if (GrillaMovimientos.getColumnModel().getColumnCount() > 0) {
            GrillaMovimientos.getColumnModel().getColumn(5).setMinWidth(0);
            GrillaMovimientos.getColumnModel().getColumn(5).setPreferredWidth(0);
            GrillaMovimientos.getColumnModel().getColumn(5).setMaxWidth(0);
            GrillaMovimientos.getColumnModel().getColumn(6).setPreferredWidth(200);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 786, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 828, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(111, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GrillaMovimientosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMovimientosMouseClicked

    }//GEN-LAST:event_GrillaMovimientosMouseClicked

    private void GrillaMovimientosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMovimientosMouseEntered

    }//GEN-LAST:event_GrillaMovimientosMouseEntered

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ExeSql Sql = new ExeSql();
        String utilizado = jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString().trim();
        String nrodocto = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString().trim();
        int total = Integer.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString().trim());

        try {
            if(JOptionPane.showConfirmDialog(rootPane, "Autorizar orden n°: "+nrodocto+"?")==0){
                int resultado = Sql.ExeSqlInt("update prv_pagos_autoriza set autorizado = true where nrodocumento = '"+nrodocto+"'");//Autoriza pago por autorizar y ejecuta trigger
                Sql.Commit();
                ResultSet r_ = Sql.Select("select count(*) from prv_pagos where nrodocumento = '"+nrodocto+"'");//Revisa si existe el pago en prv_pagos
                r_.next();
                if(r_.getInt("count")>0){
                    
                    r_ = Sql.Select("select id from cli_cuentasxcobrar where nrodocto = "+nrodocto+"");//Saca ID's de cuentas por cobrar 
                    for(int i = 0; r_.next(); i ++){
                        ResultSet rt = Sql.Select("select id, monto, fechapago from prv_pagos_autoriza where nrodocumento = '"+nrodocto+"' and autorizado = true");//Saca datos de pagos por autorizar y los ingresa en pagos clientes por autorizar
                        String query_insert = "insert into cli_pagos_autorizacion (cuenta,tipopago,banco,monto,nrodocumento,fechapago,id_cartola, usuario) \n"
                                    + "values\n";
                        for(int o = 0; rt.next(); o ++){
                            query_insert = query_insert + ("("+r_.getString("id")+",10,5,"+rt.getString("monto")+", '"+nrodocto+"', '"+rt.getString("fechapago")+"', "+nrodocto+", '"+fmMain.GetUsuario()+"'),");
                            
                        }
                        
                        Sql.ExeSql(query_insert.substring(0, query_insert.length()-1));
                        Sql.Commit();
                    }
                    if(resultado>0){
                        JOptionPane.showMessageDialog(rootPane, "Se autorizó con éxito");
//                        Sql.ExeSql("UPDATE ctactecli set utilizado = utilizado + "+utilizado+" WHERE nrodocto="+nrodocto+"");
//                        Sql.Commit();
                        ResultSet rs = null;
                        rs = Sql.Select("select totaldocto, utilizado from ctactecli where nrodocto = "+nrodocto+" and tipdocto = 'FAC'");
                        rs.next();
                        int total_consulta = rs.getInt("totaldocto");
                        int utilizado_consulta = rs.getInt("utilizado");
                        if(utilizado_consulta < total_consulta){

                        }
                        if (utilizado_consulta >= total_consulta) {
                            Sql.ExeSql("update ctactecli set asociado = true where nrodocto = "+nrodocto+" and tipdocto = 'FAC'");
                            Sql.Commit();
                        }
                    }
                }
                else {
                    JOptionPane.showMessageDialog(rootPane, "Ocurrió un error al autorizar pago.");
                }

                
            }
            
        }

            
        catch (SQLException ex) {
            Logger.getLogger(pfPrv_CargosRecibidos.class.getName()).log(Level.SEVERE, null, ex);
            Sql.Rollback();
            Sql.Close();
        }
        finally {
            Sql.Close();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void GrillaMovimientosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMovimientosMousePressed
    // TODO add your handling code here:
    }//GEN-LAST:event_GrillaMovimientosMousePressed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        String nrodocto = jTable1.getValueAt(jTable1.getSelectedRow(),0).toString();
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        String query = "select cxp.rut, cxp.id, 'Pago Proveedores' as tipo,\n" +
                        "cast(cxp.fpago as date) as fecha,\n" +
                        "prv.nombre || '   [FAP:' || cxp.nrodocto || ']  [Cuota ' || cxp.nrocuota || ']'  as detalle, cxp.monto, \n" +
                        "case\n" +
                        "when  cxp.monto - cxp.pagado > 0\n" +
                        "then cxp.pagado\n" +
                        "else 0\n" +
                        "end as pagado,\n" +
                        "case when cxp.pagado > 0\n" +
                        "then cxp.monto - cxp.pagado\n" +
                        "else 0\n" +
                        "end as diferencia,\n" +
                        "pp.nrodocumento\n" +
                        "from prv_pagos_autoriza pp \n" +
                        "left join prv_cuentasxpagar cxp on cxp.id = pp.cuenta\n" +
                        "left join proveedor prv on cxp.rut=prv.rut\n" +
                        "where cxp.pagado < cxp.monto\n" +
                        "and pp.nrodocumento = '"+nrodocto+"'" ;
        try {
            rs = sql.Select(query);
            
            DefaultTableModel model = (DefaultTableModel) GrillaMovimientos.getModel();
            while(model.getRowCount()>0){
                model.removeRow(0);
            }
            
            rs.next();
            if(rs.getRow()>0){
                rs.beforeFirst();
                for(int i = 0; rs.next();i++){
                    model.addRow(new Object[]{
                        rs.getString("rut"),
                        rs.getString("tipo"),
                        rs.getString("fecha"),
                        rs.getString("detalle"),
                        rs.getString("monto"),
                        rs.getString("id"),
                        rs.getString("pagado"),
                        rs.getInt("diferencia"),
                    });
                }
            }
            else {
                JOptionPane.showMessageDialog(null, "No se encontró documento.");
            }
        } catch (SQLException ex) {
            Logger.getLogger(pfPrv_CargosRecibidos.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally {
            sql.Close();
        }
    }//GEN-LAST:event_jTable1MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdAutorizaPagoDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdAutorizaPagoDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdAutorizaPagoDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdAutorizaPagoDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jdAutorizaPagoDocumento dialog = new jdAutorizaPagoDocumento(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable GrillaMovimientos;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
