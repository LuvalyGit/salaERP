/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Dialogos.jdAgregaBlog_gsf;
import Formularios.fmMain;
import static Formularios.fmMain.pnPestanas;
import Utilidades.Ftp;
import Utilidades.ImgTabla;
import Utilidades.LogError;
import Utilidades.PanelTab;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.net.URL;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS;
import static javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN;
import static javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author luvaly
 */
public class pfGuiasSinFactura extends javax.swing.JPanel {
   private final String  StTipoGDC = "GDC";
   private final String StTipoFAT = "FAT";
    
    /**
     * Creates new form pfGuiasSinFactura
     */
    public pfGuiasSinFactura() {
        initComponents();
        carga();
        TxHistorial.setEnabled(true);
        TxHistorial.setEditable(false);
        TxHistorial.setLineWrap(true);
        TxHistorial.setWrapStyleWord(true);
        jScrollPane3.setHorizontalScrollBarPolicy(HORIZONTAL_SCROLLBAR_NEVER);
        
         Grilla.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            //Se ejecuta automáticamente cada vez que se hace una nueva selección. 
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(Grilla.getSelectedRowCount()>0)
                   CargaBlog();
                    
            }
        });
        
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Menu_FActura = new javax.swing.JPopupMenu();
        MnuFactura = new javax.swing.JMenuItem();
        MnuCopiaTransporte = new javax.swing.JMenuItem();
        MnuCopiaOrden = new javax.swing.JMenuItem();
        MnuCopiaNro = new javax.swing.JMenuItem();
        MnuRefacturar = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblGuiasRef = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblGuias = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblGuiasTotal = new javax.swing.JLabel();
        btActualizar = new javax.swing.JButton();
        lbGuiasCon = new javax.swing.JLabel();
        lbAlbaran = new javax.swing.JLabel();
        btAgregarBlog = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        GrillaBlog = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        TxHistorial = new javax.swing.JTextArea();

        MnuFactura.setText("Facturar");
        MnuFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnuFacturaActionPerformed(evt);
            }
        });
        Menu_FActura.add(MnuFactura);

        MnuCopiaTransporte.setText("Copia Transporte");
        MnuCopiaTransporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnuCopiaTransporteActionPerformed(evt);
            }
        });
        Menu_FActura.add(MnuCopiaTransporte);

        MnuCopiaOrden.setText("Copia Orden Compra");
        MnuCopiaOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnuCopiaOrdenActionPerformed(evt);
            }
        });
        Menu_FActura.add(MnuCopiaOrden);

        MnuCopiaNro.setText("Copia Nro Documento");
        MnuCopiaNro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnuCopiaNroActionPerformed(evt);
            }
        });
        Menu_FActura.add(MnuCopiaNro);

        MnuRefacturar.setText("Re-Facturar");
        MnuRefacturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnuRefacturarActionPerformed(evt);
            }
        });
        Menu_FActura.add(MnuRefacturar);

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Grilla.setAutoCreateRowSorter(true);
        Grilla.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RUT", "NOMBRE", "ORDEN", "Nro.Doc", "FECHA", "codigo_oc", "orden", "Transporte", "Referencia", "Situacion", "Comp", "cod_transporte"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.setComponentPopupMenu(Menu_FActura);
        Grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaMouseClicked(evt);
            }
        });
        Grilla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                GrillaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                GrillaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(80);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(50);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(1).setMinWidth(230);
            Grilla.getColumnModel().getColumn(1).setPreferredWidth(230);
            Grilla.getColumnModel().getColumn(1).setMaxWidth(380);
            Grilla.getColumnModel().getColumn(2).setMinWidth(120);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(70);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(120);
            Grilla.getColumnModel().getColumn(3).setMinWidth(60);
            Grilla.getColumnModel().getColumn(3).setPreferredWidth(15);
            Grilla.getColumnModel().getColumn(3).setMaxWidth(60);
            Grilla.getColumnModel().getColumn(4).setMinWidth(85);
            Grilla.getColumnModel().getColumn(4).setPreferredWidth(30);
            Grilla.getColumnModel().getColumn(4).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(5).setMinWidth(0);
            Grilla.getColumnModel().getColumn(5).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(5).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(6).setMinWidth(0);
            Grilla.getColumnModel().getColumn(6).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(6).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(7).setMinWidth(135);
            Grilla.getColumnModel().getColumn(7).setPreferredWidth(40);
            Grilla.getColumnModel().getColumn(7).setMaxWidth(135);
            Grilla.getColumnModel().getColumn(8).setMinWidth(110);
            Grilla.getColumnModel().getColumn(8).setPreferredWidth(40);
            Grilla.getColumnModel().getColumn(8).setMaxWidth(110);
            Grilla.getColumnModel().getColumn(9).setMinWidth(100);
            Grilla.getColumnModel().getColumn(9).setPreferredWidth(70);
            Grilla.getColumnModel().getColumn(10).setMinWidth(0);
            Grilla.getColumnModel().getColumn(10).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(10).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(11).setMinWidth(0);
            Grilla.getColumnModel().getColumn(11).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(11).setMaxWidth(0);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 1030, 401));

        jLabel1.setText("Total Guias con Referencia");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 490, -1, 20));

        lblGuiasRef.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGuiasRef.setText("0");
        add(lblGuiasRef, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 490, 120, 20));

        jLabel3.setText("Total Guias Sin Ref");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 510, -1, 20));

        lblGuias.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGuias.setText("0");
        add(lblGuias, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 510, 79, 20));

        jLabel4.setText("Total Guias");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 530, -1, 20));

        lblGuiasTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGuiasTotal.setText("0");
        add(lblGuiasTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 530, 79, 20));

        btActualizar.setText("Actualizar");
        btActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btActualizarActionPerformed(evt);
            }
        });
        add(btActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 20, -1, -1));

        lbGuiasCon.setText("Guias Con Albaran");
        add(lbGuiasCon, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 470, -1, 20));

        lbAlbaran.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbAlbaran.setText("0");
        add(lbAlbaran, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 470, 80, 20));

        btAgregarBlog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Agregar.png"))); // NOI18N
        btAgregarBlog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarBlogActionPerformed(evt);
            }
        });
        add(btAgregarBlog, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 20, 26, -1));

        GrillaBlog.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        GrillaBlog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Historial", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GrillaBlog.setGridColor(new java.awt.Color(255, 255, 255));
        GrillaBlog.setRowHeight(30);
        GrillaBlog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaBlogMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(GrillaBlog);
        if (GrillaBlog.getColumnModel().getColumnCount() > 0) {
            GrillaBlog.getColumnModel().getColumn(0).setMinWidth(40);
            GrillaBlog.getColumnModel().getColumn(0).setPreferredWidth(20);
            GrillaBlog.getColumnModel().getColumn(0).setMaxWidth(60);
            GrillaBlog.getColumnModel().getColumn(1).setMinWidth(280);
            GrillaBlog.getColumnModel().getColumn(1).setPreferredWidth(250);
            GrillaBlog.getColumnModel().getColumn(1).setMaxWidth(300);
            GrillaBlog.getColumnModel().getColumn(2).setMinWidth(0);
            GrillaBlog.getColumnModel().getColumn(2).setPreferredWidth(0);
            GrillaBlog.getColumnModel().getColumn(2).setMaxWidth(0);
        }

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 60, 250, 400));

        TxHistorial.setEditable(false);
        TxHistorial.setColumns(20);
        TxHistorial.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        TxHistorial.setRows(10);
        TxHistorial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxHistorialKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxHistorialKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(TxHistorial);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 470, 260, 110));
    }// </editor-fold>//GEN-END:initComponents

    private void GrillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMouseClicked
        CargaBlog();
        if(evt.getClickCount()==2){
            
            if(evt.isAltDown())
            {
              
            }
            else{
              CargaOCC();  
            }
            
        }
    }//GEN-LAST:event_GrillaMouseClicked

    public void CargaPdf(int Transporte, String Voucher){
        ResultSet Rs;
        ExeSql Sql = new ExeSql();
        String server,user,pass,ruta_local="";
        int puerto =21;
         String rutaimage="";
        try {

//            server= "192.168.0.130";
//            user="voucher";
//            pass="V2369";
            
            
           //trae datos ftp
            server="";
            puerto=0;
            user=""; 
            pass="";
            	Rs = Sql.Select("SELECT * from conexiones where tipo='ftp'");
                if (Rs.next())
                {
                    server = Rs.getString("serv");
                    user  = Rs.getString("usu");
                    puerto  = Rs.getInt("port");
                    pass = Rs.getString("pass");
                }
           //trae datos ftp
            
            Rs = Sql.Select("SELECT count(pdf_voucher) as hay from transporte_despachos where transporte="+Transporte+" and voucher='"+Voucher+"'");
            Rs.next();
            if (Rs.getInt("hay")>=1)
            {
                if (Voucher.equals("")){
                    Voucher = Rs.getString("voucher");
                }                    
                Rs = Sql.Select("SELECT pdf_voucher as pdf from transporte_despachos where transporte ="+Transporte+"and voucher = '" + Voucher + "'");
                Rs.next();
                if (Rs.getString("pdf") != null)
                {

                    //Verifica SO
                    String sistema = System.getProperty("os.name").toLowerCase();
                    File folder = new File("");
                    if (sistema.contains("win"))
                    {
                         ruta_local = "c:/fotos2/";
                         folder = new File(ruta_local.substring(0,ruta_local.length()-1));
                    }
                    else{
                          ruta_local = "/fotos2/";
                          folder = new File(ruta_local);
                    }
                    if (!folder.exists())
                    {
                        folder.mkdir();
                    }
                    
                    rutaimage=Rs.getString("pdf");
                    //String archivo = rutaimage.substring(33,rutaimage.length());
                    String archivo = fmMain.GetStringDeFinal('\\', rutaimage);
                    String ruta_transporte = "";
//                    if (Transporte==1)
//                        {
//                             ruta_transporte="/tnt/";
//                        }
//                    if (Transporte==7)
//                        {
//                            ruta_transporte="/blue/";
//                        }       
                    if (Transporte==1)
                        {
                             ruta_transporte="/tnt/";
                        }
                    else if (Transporte==7)
                        {
                            ruta_transporte="/blue/";
                        }       
                    else
                    {
                        ruta_transporte="/";
                    }
                    Ftp.baja_archivo_ftp(server, puerto,user, pass,ruta_transporte+archivo,ruta_local + archivo);
                                       
                    File file = new File(archivo);
                    File pathCompleto = new File(ruta_local + file);
                    Desktop.getDesktop().open(pathCompleto); 
                }
               
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
        finally{
            Sql.Close();
            
        }
    }
    
    
    private void MnuFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnuFacturaActionPerformed
        // TODO add your handling code here:
        pfFACCliente FAC = new pfFACCliente();
        //FAC.AbrirFactura(Grilla.getValueAt(Grilla.getSelectedRow(),0).toString().trim());
        FAC.boton_nuevo();
        FAC.setear_datos(Grilla.getValueAt(Grilla.getSelectedRow(),0).toString().trim(), Grilla.getValueAt(Grilla.getSelectedRow(),5).toString().trim(),Grilla.getValueAt(Grilla.getSelectedRow(),6).toString().trim());
        pnPestanas.addTab("FACTURA CLIENTE", FAC);
        PanelTab btc=new PanelTab(pnPestanas,0);
        pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(FAC), btc);
        pnPestanas.setSelectedIndex(pnPestanas.getTabCount()-1);
        
    }//GEN-LAST:event_MnuFacturaActionPerformed

    private void MnuCopiaTransporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnuCopiaTransporteActionPerformed
        // TODO add your handling code here:ç
           if((!Grilla.getValueAt(Grilla.getSelectedRow(), 8).toString().trim().isEmpty())){
            StringSelection Transporte = new StringSelection(Grilla.getValueAt(Grilla.getSelectedRow(), 8).toString().trim());
            Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
            cb.setContents(Transporte, null);
        }
    }//GEN-LAST:event_MnuCopiaTransporteActionPerformed

    private void MnuCopiaOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnuCopiaOrdenActionPerformed
        // TODO add your handling code here:
          if((!Grilla.getValueAt(Grilla.getSelectedRow(), 2).toString().trim().isEmpty())){
            StringSelection OrdenC = new StringSelection(Grilla.getValueAt(Grilla.getSelectedRow(), 2).toString().trim());
            Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
            cb.setContents(OrdenC, null);
    }//GEN-LAST:event_MnuCopiaOrdenActionPerformed
   }
    private void MnuCopiaNroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnuCopiaNroActionPerformed
        // TODO add your handling code here:
         if((!Grilla.getValueAt(Grilla.getSelectedRow(), 3).toString().trim().isEmpty())){
            StringSelection NroDoc = new StringSelection(Grilla.getValueAt(Grilla.getSelectedRow(), 3).toString().trim());
            Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
            cb.setContents(NroDoc, null);
    }//GEN-LAST:event_MnuCopiaNroActionPerformed
}
    private void btActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btActualizarActionPerformed
        // TODO add your handling code here:
         carga();
    }//GEN-LAST:event_btActualizarActionPerformed

    private void GrillaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GrillaKeyPressed
        CargaBlog();
    }//GEN-LAST:event_GrillaKeyPressed

    private void GrillaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GrillaKeyReleased
    if (evt.getKeyCode() == KeyEvent.VK_F12 )
       {
        String trans= String.valueOf(Grilla.getValueAt(Grilla.getSelectedRow(), 11));
        int transporte = Integer.valueOf(trans);
        String voucher= String.valueOf(Grilla.getValueAt(Grilla.getSelectedRow(), 8)).trim();
        CargaPdf(transporte, voucher);
       }
    }//GEN-LAST:event_GrillaKeyReleased

    private void CargaBlog(){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        String Query ="";
        GrillaBlog.setDefaultRenderer(Object.class, new ImgTabla());
        DefaultTableModel tm = (DefaultTableModel) GrillaBlog.getModel();
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy - hh:mm");
        SimpleDateFormat sdf2 = new SimpleDateFormat("dd-MMM-yyyy");
        
        while(tm.getRowCount()>0)
            tm.removeRow(0); 
        
        JLabel lbCall = new JLabel();
        JLabel lbMail = new JLabel();
        JLabel lbFin  = new JLabel();
        JLabel lbIni  = new JLabel();
        JLabel lbInfo = new JLabel();
        
        URL urlCall = this.getClass().getResource("/Iconos/Llamada.png");  
        URL urlMail = this.getClass().getResource("/Iconos/email.png");  
        URL urlIni =  this.getClass().getResource("/Iconos22/Go.png");  
        URL urlFin =  this.getClass().getResource("/Iconos/camion.png");  
        URL urlInfo =  this.getClass().getResource("/Iconos/info.png");
         
        ImageIcon IconoCall =  new ImageIcon(urlCall); 
        ImageIcon IconoMail =  new ImageIcon(urlMail); 
        ImageIcon IconoIni  =  new ImageIcon(urlIni); 
        ImageIcon IconoFin  =  new ImageIcon(urlFin); 
        ImageIcon IconoInfo =  new ImageIcon(urlInfo); 
        
        lbCall.setIcon(IconoCall);
        lbMail.setIcon(IconoMail);
        lbIni.setIcon(IconoIni);
        lbFin.setIcon(IconoFin);
        lbInfo.setIcon(IconoInfo);
        
        
        try {
            
            Query = "SELECT id,fecha,usuario,texto,tipo,compromiso,fcompromiso\n" +
                            "FROM blog_gsf\n" +
                            "where rut=" + Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString() + "\n" +
                            "and tipdocto='GDC' \n" + 
                            "and nrodocto=" + Grilla.getValueAt(Grilla.getSelectedRow(), 3).toString() + "order by fecha desc";
            
            Rs = Sql.Select(Query);
            
            while(Rs.next()){
                 //Tipo 0 = Llamada
                if(Rs.getInt("tipo")==1){
                    tm.addRow(new Object[]{lbCall,sdf.format(Rs.getTimestamp("fecha"))+ "   [" + Rs.getString("usuario").trim().toUpperCase() + "]",Rs.getString("id")});
                    
                }
                //Tipo 1 = Correo
                else if(Rs.getInt("tipo")==2) {
                    tm.addRow(new Object[]{lbMail,sdf.format(Rs.getTimestamp("fecha"))+ "   [" + Rs.getString("usuario").trim().toUpperCase() + "]",Rs.getString("id")});
                }
                // Tipo 2 = Bloque
                else if(Rs.getInt("tipo")==3) {
                    tm.addRow(new Object[]{lbIni,sdf.format(Rs.getTimestamp("fecha"))+ "   [" + Rs.getString("usuario").trim().toUpperCase() + "]",Rs.getString("id")});
                }
                // Tipo 3 = Desbloqueo
                else if(Rs.getInt("tipo")==4) {
                    tm.addRow(new Object[]{lbFin,sdf.format(Rs.getTimestamp("fecha"))+ "   [" + Rs.getString("usuario").trim().toUpperCase() + "]",Rs.getString("id")});
                }
                
                else if(Rs.getInt("tipo")==5) {
                    tm.addRow(new Object[]{lbInfo,sdf.format(Rs.getTimestamp("fecha"))+ "   [" + Rs.getString("usuario").trim().toUpperCase() + "]",Rs.getString("id")});
                }
                
                 //Mensaje
                tm.addRow(new Object[]{" ",Rs.getString("texto"),Rs.getString("id")});
//                if(Rs.getBoolean("compromiso"))
//                    tm.addRow(new Object[]{" ", "Compromiso: " + sdf2.format(Rs.getTimestamp("fcompromiso"))});
                    
            }
//            GrillaBlog.setDefaultRenderer(Object.class,new Utilidades.TableCellRenderer_guias_sin_Fact());
//            GrillaBlog.repaint();
        } catch (Exception e) {
            fmMain.Mensaje("Ha ocurrido un error");
            LogError.Guardar(this.getClass().getSimpleName(),e.getMessage());
        } finally {
            Sql.Close();
        }
    }
    
    
    
    
    
    private void btAgregarBlogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarBlogActionPerformed
        
        
        
        
        jdAgregaBlog_gsf AddBlog = new jdAgregaBlog_gsf(null, true);
        AddBlog.SetDatos(Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString(), "GDC", Grilla.getValueAt(Grilla.getSelectedRow(), 3).toString());
        
        
        //AddBlog.SetDatos(Grilla.getValueAt(Grilla.getSelectedRow(), 0),"GDC",Grilla.getValueAt(Grilla.getSelectedRow(), 3));
        AddBlog.setTitle("Nuevo Registro");
        AddBlog.setLocationRelativeTo(btAgregarBlog);
        AddBlog.setVisible(true);
        if(AddBlog.GetGuardar())
        CargaBlog();
    }//GEN-LAST:event_btAgregarBlogActionPerformed

    private void GrillaBlogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaBlogMouseClicked
        // TODO add your handling code here:
        TxHistorial.setText(GrillaBlog.getValueAt(GrillaBlog.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_GrillaBlogMouseClicked

    private void TxHistorialKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxHistorialKeyPressed
        // TODO add your handling code here:
        if (Character.isLowerCase(evt.getKeyChar()))
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    }//GEN-LAST:event_TxHistorialKeyPressed

    private void TxHistorialKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxHistorialKeyReleased
        // TODO add your handling code here:
        TxHistorial.setText(TxHistorial.getText().toUpperCase());
    }//GEN-LAST:event_TxHistorialKeyReleased

    private void MnuRefacturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnuRefacturarActionPerformed
        // TODO add your handling code here:
        //---------------------------------------------------------------------
        //Objetivo: Como es Re-facturacion se updatea el campo es_refacturacion de la 
        // tabla ctactecli. Con esto excluimos esta Guia en las pendientes de despachar.
        //--------------------------------------------------------------------------
        
        if (Grilla.getValueAt(Grilla.getSelectedRow(), 7).toString().trim().equals("PENDIENTE"))
        {
                    ExeSql Sql = new ExeSql();
                    ResultSet Rs;
                    String Query ="";

                    try {
                        Query = "update ctactecli set es_refacturacion = true where nrodocto = " + Grilla.getValueAt(Grilla.getSelectedRow(), 3).toString().trim() + " and  tipdocto = '" + StTipoGDC + "'";
                        Sql.ExeSql(Query);
                        Sql.Commit();
                      } catch (Exception e) {
                        fmMain.Mensaje("Ha ocurrido un error");
                        Sql.Rollback();
                        LogError.Guardar(this.getClass().getSimpleName(),e.getMessage());
                    } finally {
                        Sql.Close();
                    }



                    // TODO add your handling code here:
                    pfFACCliente FAC = new pfFACCliente();
                    //FAC.AbrirFactura(Grilla.getValueAt(Grilla.getSelectedRow(),0).toString().trim());
                    FAC.boton_nuevo();
                    FAC.setear_datos(Grilla.getValueAt(Grilla.getSelectedRow(),0).toString().trim(), Grilla.getValueAt(Grilla.getSelectedRow(),5).toString().trim(),Grilla.getValueAt(Grilla.getSelectedRow(),6).toString().trim());
                    pnPestanas.addTab("FACTURA CLIENTE", FAC);
                    PanelTab btc=new PanelTab(pnPestanas,0);
                    pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(FAC), btc);
                    pnPestanas.setSelectedIndex(pnPestanas.getTabCount()-1);
        }
        else
        {
            fmMain.Mensaje("No se puede re-facturar ya que tiene asignado un transporte");
                    
        }
    }//GEN-LAST:event_MnuRefacturarActionPerformed
    
    
    private void carga(){
          Runnable miRunnable = new Runnable() {
            public void run() {
                try{
                Grilla.clearSelection();
                                
                CargaGSF();
                Grilla.changeSelection(0, 0 , false, false);
                
                        
                } catch (Exception e) {
                    e.printStackTrace();
                    
                }
            }
        };
        Thread hilo = new Thread(miRunnable);
        hilo.start();
        }
    
    
       public void CargaOCC(){
        pfOCCliente OCC = new pfOCCliente();
        OCC.AbreOCC(Grilla.getValueAt(Grilla.getSelectedRow(),0).toString().trim(),Grilla.getValueAt(Grilla.getSelectedRow(),5).toString().trim(),Grilla.getValueAt(Grilla.getSelectedRow(),6).toString().trim());
        pnPestanas.addTab("OC Cliente", OCC);
        PanelTab btc=new PanelTab(pnPestanas,0);
        pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(OCC), btc);
        pnPestanas.setSelectedIndex(pnPestanas.getTabCount()-1);
    
}

       public void CargaGSF(){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        int contGuias =0;
        int contGuiasSF =0;
         Grilla.setDefaultRenderer(Object.class, new ImgTabla());
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        while(TableModel.getRowCount()>0)
            TableModel.removeRow(0);
        
        
        try{
            int contador = 0;

            Rs = Sql.Select("select c.nrodocto, cli.rut,cli.nombre, c.codigo_oc, c.occh,c.codigo_oc || '-' || c.occh as orden, td.fdespacho as fecha, \n "+
                            " case when pg.nombre is null then 'PENDIENTE' else pg.nombre end as transporte, td.voucher, td.situacion, pg.codigo as codtransporte, \n" +
                            " case when td.pdf_voucher is null then 'NO' else 'SI' end as pdf \n"+
                            "from ctactecli c\n" +
                            "left join cliente cli on cli.rut=c.rut\n" +
                            "left join transporte_despachos td on c.tipdocto=td.tipdocto and c.nrodocto=td.nrodocto \n " +
                            "left join par_general pg on td.transporte=pg.codigo and pg.tipo='TRANSPORTE' \n " +
                            "where c.tipdocto='GDC'\n" +
                            "and c.tipdocrel is null\n" +
                            "and c.estado>0\n" +
                            "order by c.femision desc");
            while(Rs.next()){
                
                if (Rs.getString("voucher")==null || Rs.getString("voucher")=="" ){
                contGuiasSF++;
                }
                else{
                  contGuias++;      
                }     
              
            Grilla.getColumnModel().getColumn(10).setMinWidth(100);
            Grilla.getColumnModel().getColumn(10).setPreferredWidth(100);
            Grilla.getColumnModel().getColumn(10).setMaxWidth(100);    
                
            JLabel lb = new JLabel();
            URL si =  this.getClass().getResource("/Iconos16/ok_16.png");  
            URL no =  this.getClass().getResource("/Iconos16/Eliminar.png");
            
            if (Rs.getString("pdf").trim().equals("SI"))
                {
                ImageIcon imagen =  new ImageIcon(si); 
                lb.setIcon(imagen);
                contador++;
                }
            else
                {
                ImageIcon imagen =  new ImageIcon(no);
                lb.setIcon(imagen);
                }
                
                TableModel.addRow(new Object[]{
                                      Rs.getString("rut"),
                                      Rs.getString("nombre").trim(),
                                      Rs.getString("orden"),
                                      Rs.getString("nrodocto"),
                                      Rs.getString("fecha"),
                                      Rs.getString("codigo_oc"),
                                      Rs.getString("occh"),
                                      Rs.getString("transporte"),
                                      Rs.getString("voucher"),
                                      Rs.getString("situacion"),
                                      lb,
                                      Rs.getInt("codtransporte")
                                  });   
                               
            }
            Grilla.repaint();
         // Seteado en la primera  posicion.
         Grilla.changeSelection(0, 0 , false, false);
            CargaBlog();
            lbAlbaran.setText(String.valueOf(contador));
            lblGuias.setText(String.valueOf(contGuiasSF));
            lblGuiasRef.setText(String.valueOf(contGuias));
            lblGuiasTotal.setText(String.valueOf(contGuias+contGuiasSF));
        } catch (Exception e) {
            fmMain.Mensaje("Se produjo un error al cargar la tabla: "+e);
          }finally{
            Sql.Close();
        }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla;
    private javax.swing.JTable GrillaBlog;
    private javax.swing.JPopupMenu Menu_FActura;
    private javax.swing.JMenuItem MnuCopiaNro;
    private javax.swing.JMenuItem MnuCopiaOrden;
    private javax.swing.JMenuItem MnuCopiaTransporte;
    private javax.swing.JMenuItem MnuFactura;
    private javax.swing.JMenuItem MnuRefacturar;
    private javax.swing.JTextArea TxHistorial;
    private javax.swing.JButton btActualizar;
    private javax.swing.JButton btAgregarBlog;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbAlbaran;
    private javax.swing.JLabel lbGuiasCon;
    private javax.swing.JLabel lblGuias;
    private javax.swing.JLabel lblGuiasRef;
    private javax.swing.JLabel lblGuiasTotal;
    // End of variables declaration//GEN-END:variables
}
