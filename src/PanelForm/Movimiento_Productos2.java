/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Conexion.ExeSqlLuvaly;
import Dialogos.jdAjustarCant;
import Dialogos.jdBuscaUbicacion;
import Dialogos.jdBuscarProductos;
import Dialogos.jdNoUbicados;
import Dialogos.jdProductosVenc;
import Dialogos.jdSeparablesIngreso;
import Dialogos.jdSeparacionesUbicacion;
import Dialogos.jd_UbicacionProductos;
import static Dialogos.jd_UbicacionProductos.Fecha;
import static Dialogos.jd_UbicacionProductos.Id;
import static Dialogos.jd_UbicacionProductos.convenio;
import static Dialogos.jd_UbicacionProductos.esFecha;
import Formularios.fmMain;
import static Formularios.fmMain.pnPestanas;
import Utilidades.Combo_CodStr;
import Utilidades.ComboCodigos;
import Utilidades.PanelTab;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author luvaly
 */
public class Movimiento_Productos2 extends javax.swing.JPanel {
    
    public boolean booAgregando = false;
    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();   
    DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
    public static Color DARK_GREEN = new Color(0,153,0);
    int contselec = 0;
    int cant = 0;
    double dcant = 0;
    int Nota = 0;
    int Ncp = 0;
    int GlobalStock = 0;
    
    Date hoy = new Date();
    /**
     * Creates new form AsignaUbicacion
     */
 
    public Movimiento_Productos2() {
        initComponents();
        //txtUbicacion.setText("TRAN.1001.1");
        //enter_ubicacion();
       
       // txtUbicacion.setEditable(false);
         
        pnAnticipada.setVisible(false);
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        MnuProd = new javax.swing.JMenuItem();
        panel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Grilla_ubc = new javax.swing.JTable();
        btUbicar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txNombreUbicaDestino = new javax.swing.JTextField();
        txtUbicacionDestino = new javax.swing.JTextField();
        btUbica1 = new javax.swing.JButton();
        btActualiza = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtSku = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txNombre = new javax.swing.JTextField();
        pnAnticipada = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Grilla_Ant = new javax.swing.JTable();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jTextField1.setText("jTextField1");

        jTextField2.setText("jTextField2");

        MnuProd.setText("Ver Producto");
        MnuProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnuProdActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MnuProd);

        Grilla_ubc.setAutoCreateRowSorter(true);
        Grilla_ubc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ubicacion", "Nombre", "Cant"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla_ubc.setComponentPopupMenu(jPopupMenu1);
        Grilla_ubc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Grilla_ubcMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(Grilla_ubc);
        if (Grilla_ubc.getColumnModel().getColumnCount() > 0) {
            Grilla_ubc.getColumnModel().getColumn(0).setMinWidth(200);
            Grilla_ubc.getColumnModel().getColumn(0).setPreferredWidth(200);
            Grilla_ubc.getColumnModel().getColumn(0).setMaxWidth(200);
            Grilla_ubc.getColumnModel().getColumn(1).setMinWidth(250);
            Grilla_ubc.getColumnModel().getColumn(1).setPreferredWidth(250);
            Grilla_ubc.getColumnModel().getColumn(1).setMaxWidth(250);
            Grilla_ubc.getColumnModel().getColumn(2).setMinWidth(80);
            Grilla_ubc.getColumnModel().getColumn(2).setPreferredWidth(80);
            Grilla_ubc.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        btUbicar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Ok.png"))); // NOI18N
        btUbicar.setText("UBICAR");
        btUbicar.setToolTipText("");
        btUbicar.setEnabled(false);
        btUbicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUbicarActionPerformed(evt);
            }
        });

        jLabel4.setText("Ubicacion Destino");

        txNombreUbicaDestino.setEditable(false);

        txtUbicacionDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUbicacionDestinoActionPerformed(evt);
            }
        });
        txtUbicacionDestino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUbicacionDestinoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUbicacionDestinoKeyReleased(evt);
            }
        });

        btUbica1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos22/search.png"))); // NOI18N
        btUbica1.setText("Ubica");
        btUbica1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUbica1ActionPerformed(evt);
            }
        });

        btActualiza.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Actualiza.png"))); // NOI18N
        btActualiza.setText("ACTUALIZAR");
        btActualiza.setToolTipText("");
        btActualiza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btActualizaActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Sku");

        txtSku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSkuActionPerformed(evt);
            }
        });
        txtSku.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSkuKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSkuKeyReleased(evt);
            }
        });

        jLabel3.setText("Nombre");

        txNombre.setEditable(false);
        txNombre.setEnabled(false);
        txNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNombreActionPerformed(evt);
            }
        });
        txNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txNombreKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSku, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(22, 22, 22))
        );

        pnAnticipada.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Grilla_Ant.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Tipo", "Nro. Doc", "Codigo OC", "Orden", "Cantidad", "Sku", "ubc", "rut"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla_Ant.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Grilla_AntMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(Grilla_Ant);
        if (Grilla_Ant.getColumnModel().getColumnCount() > 0) {
            Grilla_Ant.getColumnModel().getColumn(0).setMinWidth(45);
            Grilla_Ant.getColumnModel().getColumn(0).setPreferredWidth(45);
            Grilla_Ant.getColumnModel().getColumn(1).setMinWidth(55);
            Grilla_Ant.getColumnModel().getColumn(1).setPreferredWidth(55);
            Grilla_Ant.getColumnModel().getColumn(2).setMinWidth(55);
            Grilla_Ant.getColumnModel().getColumn(2).setPreferredWidth(55);
            Grilla_Ant.getColumnModel().getColumn(3).setMinWidth(55);
            Grilla_Ant.getColumnModel().getColumn(3).setPreferredWidth(55);
            Grilla_Ant.getColumnModel().getColumn(4).setMinWidth(35);
            Grilla_Ant.getColumnModel().getColumn(4).setPreferredWidth(35);
            Grilla_Ant.getColumnModel().getColumn(5).setMinWidth(0);
            Grilla_Ant.getColumnModel().getColumn(5).setPreferredWidth(0);
            Grilla_Ant.getColumnModel().getColumn(5).setMaxWidth(0);
            Grilla_Ant.getColumnModel().getColumn(6).setMinWidth(0);
            Grilla_Ant.getColumnModel().getColumn(6).setPreferredWidth(0);
            Grilla_Ant.getColumnModel().getColumn(6).setMaxWidth(0);
            Grilla_Ant.getColumnModel().getColumn(7).setMinWidth(0);
            Grilla_Ant.getColumnModel().getColumn(7).setPreferredWidth(0);
            Grilla_Ant.getColumnModel().getColumn(7).setMaxWidth(0);
        }

        javax.swing.GroupLayout pnAnticipadaLayout = new javax.swing.GroupLayout(pnAnticipada);
        pnAnticipada.setLayout(pnAnticipadaLayout);
        pnAnticipadaLayout.setHorizontalGroup(
            pnAnticipadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAnticipadaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnAnticipadaLayout.setVerticalGroup(
            pnAnticipadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAnticipadaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(btUbicar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btActualiza, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtUbicacionDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btUbica1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txNombreUbicaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(46, 46, 46))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(pnAnticipada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtUbicacionDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btUbica1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addComponent(txNombreUbicaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btUbicar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btActualiza, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnAnticipada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    private String existe_sku(String Codigo, String ubicacion){
    ExeSql Sql = new ExeSql();
        ResultSet Rs1;
        String Query2 ="";
        String strUbicacion = "";
        
         try{
         
          Query2 = "select * from mt_productos where sku = '" + Codigo + "' and ubicacion = '" + ubicacion + "';";
            Rs1 = Sql.Select(Query2);
                     if (Rs1.next()){
                        return(Rs1.getString("sku"));
                     }   
         }
     catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }          
        return(""); 
    }
    
    
    private void txtSkuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSkuKeyPressed
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
          
            
            txtUbicacionDestino.setText("");
            txNombreUbicaDestino.setText("");
            
            pnAnticipada.setVisible(false);
            carga_producto();
            Carga_Ubicaciones(txtSku.getText().trim());
            
           
        }


    }//GEN-LAST:event_txtSkuKeyPressed

      
    private void txtSkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSkuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSkuActionPerformed

    private void txtSkuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSkuKeyReleased
        
         txtSku.setText( txtSku.getText().toUpperCase());
    }//GEN-LAST:event_txtSkuKeyReleased

    private void Grilla_ubcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Grilla_ubcMouseClicked

        if(evt.getClickCount()==1){
          
//            GlobalStock = Integer.parseInt(Grilla_ubc.getValueAt(Grilla_ubc.getSelectedRow(),2).toString().trim());
//            System.out.println("El GlobalStock ES :"+GlobalStock);
            
        }else if(evt.getClickCount()==2) {
                
            jdAjustarCant Ajustar =  new jdAjustarCant(null,true);
            Ajustar.setLocationRelativeTo(null);
          
            
            dcant = Double.parseDouble(Grilla_ubc.getValueAt(Grilla_ubc.getSelectedRow(),2).toString().trim());
            
            cant = (int) dcant;
            
            Ajustar.SetValor(cant);
            
            Ajustar.setVisible(true);
            
            
            if (Ajustar.GetRetorno()){
            
                Grilla_ubc.setValueAt(Ajustar.GetCant(),Grilla_ubc.getSelectedRow(),2);
                btUbicar.setEnabled(true);
                
            }
            
            
        }
        
     
        
        
    }//GEN-LAST:event_Grilla_ubcMouseClicked

    
    private void txNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txNombreActionPerformed

    private void MnuProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnuProdActionPerformed
        // TODO add your handling code here:
         System.out.println( Grilla_ubc.getValueAt(Grilla_ubc.getSelectedRow(), 2).toString().trim());
        pfProductos Pro = new pfProductos();
        Pro.setOpaque(false);
        pnPestanas.addTab("Producto", Pro);
        PanelTab btc = new PanelTab(pnPestanas, 0);
        pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(Pro), btc);
        pnPestanas.setSelectedIndex(pnPestanas.getTabCount() - 1);
        Pro.txSku.requestFocus();
        Pro.CargaProducto(Grilla_ubc.getValueAt(Grilla_ubc.getSelectedRow(), 0).toString().trim());   
    }//GEN-LAST:event_MnuProdActionPerformed

    private void txNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txNombreKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txNombreKeyPressed

    private void txtUbicacionDestinoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUbicacionDestinoKeyPressed

        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
             
            if(txtUbicacionDestino.getText().trim().isEmpty()){ 
            
                btUbica1.doClick();
            
            
            }
             

            
            ExeSql Sql = new ExeSql();
            ResultSet Rs;
            String Query="";
                   
            
            try {
                
                
                Query=" select * FROM mt_codmetro \n"+ 
                       "WHERE codmetro IN ('" + txtUbicacionDestino.getText().trim()  + "') \n" +
                       "AND codmetro NOT IN ('TRAN.1003.1','TRAN.1004.1','TRAN.1005.1','TRAN.1006.1', \n"+
                       "'TRAN.1007.1','TRAN.1008.1','TRAN.1009.1','TRAN.1009.2','TRAN.1010.1','TRAN.1012.1')"; 
                
                Rs = Sql.Select(Query);

                if (Sql.GetRowCount() > 0){
            
                    Rs.next();
                                        
                    txNombreUbicaDestino.setText(Rs.getString("nombre"));
                    
                    
                    
                    //TRANSITO-V_ANTICIPADA-SALA
                    if (txNombreUbicaDestino.getText().trim().equals("TRANSITO-V_ANTICIPADA-SALA")){
                    
                        
                        CargaAnticipadas();
                        
                        btUbicar.setEnabled(false);
                        
                    
                    }else{
                    
                        pnAnticipada.setVisible(false);
                        btUbicar.setEnabled(true);
                    
                    }
                    
                    
                    
                    
            
                    
                }else {
                
                    fmMain.Mensaje("La Ubicación No Existe o no está Autorizado !!"); 
                    txtUbicacionDestino.setText("");
                    txNombreUbicaDestino.setText("");
                    return;
                
                }
           
           
            
             
            
        }  catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
        
        }  
    }//GEN-LAST:event_txtUbicacionDestinoKeyPressed

    private void txtUbicacionDestinoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUbicacionDestinoKeyReleased
        txtUbicacionDestino.setText( txtUbicacionDestino.getText().toUpperCase());
    }//GEN-LAST:event_txtUbicacionDestinoKeyReleased

    private void btUbica1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUbica1ActionPerformed
        
       jdBuscaUbicacion Ubicacion= new jdBuscaUbicacion(null, true);
        Ubicacion.CargaBodegaOR(1);
        Ubicacion.setVisible(true);
        
        if (Ubicacion.GetUbicacion().equals("TRAN.1004.1")){  //TRANSITO ANTICIPADA METRO 1
            
            fmMain.Mensaje("La Ubicación No Existe o no está Autorizado !!"); 
            txtUbicacionDestino.setText("");
            txNombreUbicaDestino.setText("");
            txtUbicacionDestino.requestFocus();
            return;
            
        }
        
        
        txtUbicacionDestino.setText(Ubicacion.GetUbicacion());
        txNombreUbicaDestino.setText(Ubicacion.GetNombreUbicacion());
        
       //TRANSITO-V_ANTICIPADA-SALA
        if (txNombreUbicaDestino.getText().trim().equals("TRANSITO-V_ANTICIPADA-SALA")){
                    
            CargaAnticipadas();
            btUbicar.setEnabled(false);
                        
                    
        }else{
                    
            pnAnticipada.setVisible(false);
            btUbicar.setEnabled(true);
                    
        }
            
        
        
        
        
        
        
         
    }//GEN-LAST:event_btUbica1ActionPerformed

    private void btUbicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUbicarActionPerformed
        
        ResultSet Rs;
        ExeSqlLuvaly  Sql = new ExeSqlLuvaly();
            
        String Query = "";
            
        int Stock = 0;
        int Separado = 0;
        
        
        try {
            
            
            
            String UbcDestino = txtUbicacionDestino.getText().trim();
           
            
            String StUsuario = fmMain.GetUsuario();
                
                
                         
            if ((UbcDestino.equals("TRAN.1009.1") || (UbcDestino.equals("TRAN.1009.2"))  && !StUsuario.equals("LRUBILAR") )){    //Si es Merma
          
                     //System.out.println("El "+StUsuario+" No está Autorizado!!");
                    fmMain.Mensaje("El "+StUsuario+" No está Autorizado!!");
                    return;
                    
            }else if ((UbcDestino.equals("TRAN.1009.1") || (UbcDestino.equals("TRAN.1009.2")) && StUsuario.equals("LRUBILAR") )){
         
                    System.out.println("El "+StUsuario+" Está Autorizado!!");
        
            }     
            
            
            if ((UbcDestino.equals("TRAN.1004.1") )){    //Si es NCC
          
                fmMain.Mensaje("La Ubicación No Existe o no está Autorizado !!"); 
                txtUbicacionDestino.setText("");
                txNombreUbicaDestino.setText("");
                txtUbicacionDestino.requestFocus();
                return;
                    
            }
            
            
            
            int CantUbc = Integer.parseInt(Grilla_ubc.getValueAt(Grilla_ubc.getSelectedRow(),2).toString().trim());
            
//            String sql = "SELECT p.sku,p.nombre,i.stock AS stock,sum(oc.separado) as separado\n" +
//                         "FROM producto p\n" +
//                         "LEFT JOIN inventario i ON p.sku=i.sku \n" +
//                         "LEFT JOIN occhdet oc ON p.sku = oc.sku\n" +
//                         "WHERE p.sku = '"+txtSku.getText().trim()+"'  and oc.codigo_oc <> 99999 \n" +
//                         "GROUP BY p.sku,p.nombre,i.stock " ;
//            
//            
//            Rs = Sql.Select(sql);
//            
//            
//            if (Sql.GetRowCount() > 0){
//            
//                
//                System.out.println("ENTRA 1 !!!!");
//                
//                Rs.next();
//                
//                Stock = Rs.getInt("stock");
//                Separado = Rs.getInt("separado");
//                
//                System.out.println("Stock : "+Stock);
//                System.out.println("Separado : "+Separado);
//                System.out.println("NCP : "+Ncp);
//                
//                Stock = (Stock - Separado)-Ncp;
//                
//                System.out.println("Stock Final: "+Stock);
//                System.out.println("CantUbc: "+CantUbc);
//            
//            
//            }else {
//                
//                
//                System.out.println("ENTRA 2 !!!!");
//            
//                Stock = GlobalStock - Ncp;
//                System.out.println("Stock : "+Stock);
//                System.out.println("Separado : "+Separado);
//                System.out.println("NCP : "+Ncp);
//            
//            }
            
            
            
            
//            if(CantUbc > Stock){
//            
//                fmMain.Mensaje("Stock cambió y es menor a lo que se quiere ajustar, Actualice datos...!!");
//                return;
//            
//            }
            
            
            Existe();
            Ubicar();
            btActualiza.doClick();
        } catch (Exception ex) {
            Logger.getLogger(Movimiento_Productos2.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
    }//GEN-LAST:event_btUbicarActionPerformed
    
    
    
    private void btActualizaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btActualizaActionPerformed
       
        Nota = 0;
        
        txtUbicacionDestino.setText("");
        txNombreUbicaDestino.setText("");
        pnAnticipada.setVisible(false);
        btUbicar.setEnabled(false);
        carga_producto();
        Carga_Ubicaciones(txtSku.getText().trim());
        
        
        
    }//GEN-LAST:event_btActualizaActionPerformed

    private void txtUbicacionDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUbicacionDestinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUbicacionDestinoActionPerformed

    private void Grilla_AntMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Grilla_AntMouseClicked

        if (evt.getClickCount() == 1) {

            String cant = Grilla_Ant.getValueAt(Grilla_Ant.getSelectedRow(), 4).toString().trim();
            //txCant.setText(cant);
            btUbicar.setEnabled(true);

        }
    }//GEN-LAST:event_Grilla_AntMouseClicked

    
    public void Ubicar(){
           
       
        ExeSql Sql2 = new ExeSql();
        ResultSet Rs1, Rs2;
        
       //********************************* 
        ExeSql Sql = new ExeSql();
       
       
        
        String Sku = txtSku.getText().trim();
        String Ubicacion = "";
        String UbicacionDestino = "";
        String StUsuario,QryIns, qryUpd, QryDel,Query2;
        
        double cantidad_insertada;
        int Stock = 0;
       
        try{
                
                Ubicacion = Grilla_ubc.getValueAt(Grilla_ubc.getSelectedRow(),0).toString().trim();
                UbicacionDestino = txtUbicacionDestino.getText().trim();
                StUsuario = fmMain.GetUsuario();
                
                if (txtUbicacionDestino.getText().trim().equals("")){
                    fmMain.Mensaje("Debe ingresar Ubicacion de Destino");
                    txtUbicacionDestino.requestFocus();
                    return;
                }
                
                
//                if (contselec == 0){
//         
//                    fmMain.Mensaje("No hay Productos Seleccionados!!");
//                    return;
//         
//                }
               
               
            //************************************************************************************************************            
                       
                // UBICA PRODUCTOS EN METRO DESTINO 
                boolean agrega = false;
                double cantidad_anticipada = 0;
                
                try {
                
                    cantidad_anticipada = Double.parseDouble(Grilla_Ant.getValueAt(Grilla_Ant.getSelectedRow(),4).toString().trim());
                
                }catch(Exception e){
                
                    cantidad_anticipada = 0;
                }
                
                    
                       
                        cantidad_insertada = Double.parseDouble(Grilla_ubc.getValueAt(Grilla_ubc.getSelectedRow(),2).toString().trim());
                        
                        if (txNombreUbicaDestino.getText().trim().equals("TRANSITO-V_ANTICIPADA-SALA")){
                        
                            try {
                              
                                cantidad_anticipada = Double.parseDouble(Grilla_Ant.getValueAt(Grilla_Ant.getSelectedRow(),4).toString().trim());
                            
                            }catch(Exception e){
                            
                                cantidad_anticipada = 0;
                            }    
                            
                            
                            if (cantidad_anticipada == 0 && !fmMain.GetUsuario().toLowerCase().trim().equals("leorubilar")){  
                            
                                if (cantidad_insertada > cantidad_anticipada ){
                            
                                    fmMain.Mensaje("Cantidad ingresada: " + cantidad_insertada + " es mayor a la que existe en el metro VENTA ANTICIPADA SALA que es :" + cantidad_anticipada);
                                    return;
                                
                            
                                }
                            
                             }
                            
                        }
                        
                        
                        
                    
                        Query2 = "select *  from mt_productos where ubicacion = '" + UbicacionDestino + "' and sku = '" + Sku + "';";
                        Rs1 = Sql.Select(Query2);
                    
                        if (Sql.GetRowCount() > 0){  //Si ya existe la ubicacion, realiza un Update
                    
                    
                            String QryUpd = "UPDATE mt_productos SET cant = cant + " +  cantidad_insertada + ",\n" +
                                            "usuario_mod ='" +fmMain.GetUsuario() + "', fecha_mod = now() " +
                                            "WHERE ubicacion = '" + UbicacionDestino + "' AND sku = '" + Sku + "' ";
                    
                            Sql2.ExeSql(QryUpd);
                            Sql2.Commit();
                
                        }else if (Sql.GetRowCount() == 0){  //Si no existe la ubicacion, realiza un Insert
                         
                            QryIns = "INSERT into mt_productos (ubicacion,sku,usuario,cant, rut, tipdocto, nrodocto)\n" +
                                     " values ('" + UbicacionDestino + "','" + Sku + "','" + fmMain.GetUsuario()  + "', " + cantidad_insertada + 
                                     "," + "null" + ",'" + "" + "'," + "null" + ");";
                            Sql2.ExeSql(QryIns);
                            Sql2.Commit();
                    
                        }
                        
                        
                        
                        rebaja_stock(Ubicacion,Sku.trim(),cantidad_insertada);
                        
                       
                        
                        if (txNombreUbicaDestino.getText().trim().equals("TRANSITO-V_ANTICIPADA-SALA")){
                          
                            
                                ActualizaAnticipadas();
                                CargaAnticipadas();
                          
                        }
                        
                
         
        }catch (SQLException e) {
        
            System.out.println(e.getMessage());
            Logger.getLogger(Movimiento_Productos2.class.getName()).log(Level.SEVERE, null, e);
            Sql2.Rollback();
         
        
        } finally{
            
            Sql2.Close();
            
            
        }          
        
        
        
    }
    
    
    
    
    
    private void CargaAnticipadas(){
    
         DefaultTableModel tbMd = (DefaultTableModel) Grilla_Ant.getModel();
        
        while (tbMd.getRowCount() > 0) {
            tbMd.removeRow(0);
        }
        
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        
        try {
            
            Rs = Sql.Select("select case when va.tipdocto is null then ' ' else va.tipdocto end as tipdocto, \n"+
                            "va.nrodocto, va.codigo_oc, va.orden, va.cant, va.sku, va.ubicacion, va.rut \n" +
                            "from venta_anticipada va \n"+
                            "where va.sku IN ('"+txtSku.getText().trim()+"') and va.ubicacion IN ('"+txNombreUbicaDestino.getText().trim()+"') and va.estado = 0");
            
            if (Sql.GetRowCount() > 0){
            
                pnAnticipada.setVisible(true);
                
                while (Rs.next()){
                
                    tbMd.addRow(new Object[]{
                            Rs.getString("tipdocto").trim(), 
                            Rs.getString("nrodocto").trim(),
                            Rs.getString("codigo_oc").trim(),
                            Rs.getString("orden").trim(),
                            fmMain.FormatoNumeroSinDecimal(Rs.getDouble("cant")),
                            Rs.getString("sku").trim(),
                            Rs.getString("ubicacion").trim(),
                            Rs.getString("rut").trim(),
                            
                    });
            
                }
            
            }else {
            
                pnAnticipada.setVisible(false);
                
            
            }
            
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(jd_UbicacionProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    
    
    }
    
    
    
   private void ActualizaAnticipadas(){
        
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        
        SimpleDateFormat dateFormat2 = new SimpleDateFormat("dd-MM-yyyy hh:mm:ss");
        
        
        try {
            
            
            String Tipdoc = Grilla_Ant.getValueAt(Grilla_Ant.getSelectedRow(), 0).toString().trim();
            String Nrodoc = Grilla_Ant.getValueAt(Grilla_Ant.getSelectedRow(), 1).toString().trim();
            
            
            String Codigo_OC = Grilla_Ant.getValueAt(Grilla_Ant.getSelectedRow(), 2).toString().trim();
            String Orden = Grilla_Ant.getValueAt(Grilla_Ant.getSelectedRow(), 3).toString().trim();
            
            String Rut = Grilla_Ant.getValueAt(Grilla_Ant.getSelectedRow(), 7).toString().trim();
             
            
            if (txNombreUbicaDestino.getText().trim().equals("TRANSITO-V_ANTICIPADA-SALA") ){
                    
                    Sql.ExeSql("UPDATE venta_anticipada SET \n"+
                               "estado = 1, \n"+
                               "ffinalizacion = '"+dateFormat2.format(hoy)+"', \n"+
                               "usuario_mod = '"+fmMain.GetUsuario().trim().toLowerCase()+"' \n"+
                               "where sku IN ('"+txtSku.getText().trim()+"') \n"+
                               "and tipdocto IN ('"+Tipdoc.trim()+"') \n"+
                               "and nrodocto ="+Nrodoc.trim()+" \n"+
                               "and ubicacion IN ('"+txNombreUbicaDestino.getText().trim()+"') \n"+
                               "and rut ="+Rut.trim()+ " \n"+
                               "and estado = 0");
                    
            }
            
            Sql.Commit();
             
        } catch (SQLException ex) {
            
            Sql.Rollback();
            Logger.getLogger(jd_UbicacionProductos.class.getName()).log(Level.SEVERE, null, ex);
        
        }finally{
            
            Sql.Close();
                
        }
        
        
    
    
    } 
    
    
    
    
    
    
    
    
    
    
    
    private void Existe(){
    
        ExeSql Sql = new ExeSql();
        ExeSql Sql2 = new ExeSql();
        ExeSql Sql3 = new ExeSql();
        
        ResultSet Rs3 = null;

        String Query, Query2, Query3;   
        String Sku = txtSku.getText().trim();
                    
                    
        try {    
                        
            boolean esoferta = false;
                    
            double margen = 0;
            int cant = 0;
            int minimo = 1;
                            
                                
            Query3 = "SELECT * FROM producto_valores WHERE sku ='" + txtSku.getText().trim()+"'";
            Rs3 = Sql3.Select(Query3);
                            
            if (Sql3.GetRowCount() == 0){
                            
                Query = "INSERT INTO producto_valores (sku,valultcompra,costofinal,margen,esoferta,minimo) VALUES ('" + txtSku.getText().trim()+"',"+
                                                       0+","+0+","+margen+","+esoferta+","+minimo+")";    
                Sql.ExeSql(Query);
                Sql.Commit();
                    
            }
                            
            Query3 = "SELECT * FROM inventario_sala WHERE sku ='" + txtSku.getText().trim()+"'";
            Rs3 = Sql3.Select(Query3);
                            
            if (Sql3.GetRowCount() == 0){
                                
                Query2 = "INSERT INTO inventario_sala (sku, stock,ocp) VALUES ('" + txtSku.getText().trim()+"',"+cant+","+0+")";
                                
                Sql2.ExeSql(Query2);
                Sql2.Commit();
                            
            }
                    
        } catch (SQLException e) {
                        
            Sql.Rollback();
            Sql2.Rollback();
    
            Logger.getLogger(pfProductos.class.getName()).log(Level.SEVERE, null, e);
                
        } finally {
    
            Sql.Close();
            Sql2.Close();

        }
     
    
    }
    
    
    
    private void rebaja_stock (String Ubica, String Sku,double cantidad){
        
        ExeSql Sql3 = new ExeSql();
        ExeSql Sql4 = new ExeSql();
                         
        try {
            
            String QryDel = "UPDATE mt_productos SET cant = cant - " +  cantidad + "\n" +
                            "WHERE ubicacion IN ('"+Ubica+"') AND sku = '" + Sku + "' ";
            
            Sql3.ExeSql(QryDel);
            
            Sql3.Commit();
            
            if (!Ubica.contains("SAL.")){
            
                String QryDel2 = "UPDATE inventario_sala SET stock = stock + " +  cantidad + " \n" +
                                 "WHERE sku = '" + Sku + "' ";
            
                Sql4.ExeSql(QryDel2);
            
                Sql4.Commit();
            }
            
            
        
        } catch (SQLException ex) {
            Sql3.Rollback();
            Sql4.Rollback();
            Logger.getLogger(Movimiento_Productos2.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
    
            Sql3.Close();
            Sql4.Close();
        }
    
    }
    
    
    
    
    
    private void Carga_Ubicaciones(String Sku){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        
        DefaultTableModel dfTm = (DefaultTableModel) Grilla_ubc.getModel();
       
        String Query ="";
       
        fmMain.LimpiaGrilla(dfTm);
        GlobalStock = 0;
        
        try {
            
            Query=" select mt.*,cm.nombre FROM mt_productos mt\n"+
                   "left join mt_codmetro cm ON mt.ubicacion = cm.codmetro " 
                   // + "WHERE mt.sku = '" + Sku  + "' AND mt.cant > 0  AND mt.ubicacion NOT IN ('TRAN.1002.1','TRAN.1003.1','TRAN.1004.1','TRAN.1005.1','TRAN.1006.1',"
                    + "WHERE mt.sku = '" + Sku  + "' AND mt.cant > 0  AND mt.ubicacion NOT IN ('TRAN.1003.1','TRAN.1005.1','TRAN.1006.1',"
                    + "'TRAN.1007.1','TRAN.1008.1','TRAN.1009.1','TRAN.1009.2','TRAN.1010.1','TRAN.1012.1')"; 
                
            Rs = Sql.Select(Query);

            if (Sql.GetRowCount() > 0){
            
                while(Rs.next()){
                     
                    if (Rs.getString("ubicacion").equals("TRAN.1002.1")){
                    
                        Ncp = Rs.getInt("cant");
                        
                    }else {
                    
                        Ncp = 0;
                        dfTm.addRow(new Object[]{Rs.getString("ubicacion"),Rs.getString("nombre"),Rs.getString("cant")});
                        GlobalStock = GlobalStock + Rs.getInt("cant");
                    }
                
                }
            
                txtSku.requestFocus();
            }
            
        }catch (SQLException e) {
            System.out.println(e.getMessage());
            Logger.getLogger(Movimiento_Productos2.class.getName()).log(Level.SEVERE, null, e);
        } finally{
            Sql.Close();
         
        }    
        
    }
    
    
    
    private void carga_producto(){
        String codbarfinal = txtSku.getText().replace("'", "-");
        txtSku.setText(codbarfinal.trim());
        if(!txtSku.getText().isEmpty())
             CargaProducto(txtSku.getText());
        else{
            jdBuscarProductos BP = new jdBuscarProductos(null, true);
            BP.setLocationRelativeTo(null);
            BP.setTitle("Buscar Producto");
            BP.setVisible(true);
            if(!"".equals(BP.GetCodigo()))
                CargaProducto(BP.GetCodigo());
        }
            
    }
    
    
    
    
    public void CargaProducto(String Codigo) {
        ExeSql Sql = new ExeSql();
        
        ResultSet Rs = null;
        double Margen;
        int revisa_codbar =0;
        int revisa_codchile =0;
        ExeSqlLuvaly luv = new ExeSqlLuvaly();
        ResultSet producto = null;
   
        try {
            String Query;
            //Limpia la Lista
            
            Rs = luv.Select("select codbar, sku from codbar where sku='" + Codigo + "' or codbar='"+ Codigo + "'" );        
                    if (Rs.next())
                        {
                        Codigo = Rs.getString("sku").trim();
                        revisa_codbar++;
                        }
            Rs = luv.Select("select idch, sku from codchile where sku='" + Codigo +"' or idch='"+ Codigo + "'" );
                    if (Rs.next())
                        {
                        Codigo = Rs.getString("sku").trim();
                        revisa_codchile++;
                        }
            Rs = luv.Select("select codbar, sku from codbar where sku='" + Codigo + "' or codbar='"+ Codigo + "'" );        
                    if (Rs.next())
                        {
                        Codigo = Rs.getString("sku").trim();
                        revisa_codbar++;
                        }
             
                    
                    
            Query ="select p.sku,p.nombre from producto p \n" +
                   "where p.sku='" + Codigo + "' or p.sku in (select sku from codbar where codbar='" + Codigo + "')";
              
            Rs = luv.Select(Query);

            if(luv.GetRowCount()==0){   
                 fmMain.Mensaje("SKU: " + txtSku.getText().trim() + " no esta en Nuestra Bases de Datos. Comuniquese con Informática");
                 txtSku.setText("");
                 txtSku.requestFocus();
                 return;
            }      
            
            Rs.next();
            Codigo = Rs.getString("sku").trim();
            String Nombre = Rs.getString("nombre");
       
            
            if (Nombre.length() > 20) {
                Nombre.substring(0, 20);
            }
            txtSku.setText(Codigo);
            txNombre.setText(Rs.getString("nombre"));
           
        } catch (SQLException ex) {
            System.out.println(ex);
        } finally {
            Sql.Close();
            luv.Close();
        }
    }
    
    
    class Elrender extends DefaultTableCellRenderer {
         
        @Override
        public Component getTableCellRendererComponent(JTable tabla, Object valor, boolean isSelected, boolean hasFocus, int fila, int columna) {
        super.getTableCellRendererComponent(tabla,valor,isSelected, hasFocus, fila, columna);
         
            if( (Boolean)tabla.getValueAt(fila,6) == true)
            {
                  if(isSelected==true){
                    this.setBackground(DARK_GREEN);
                    this.setForeground(Color.white);    
                }else{
                
                    this.setForeground(DARK_GREEN);
                    this.setBackground(Color.white);
                
                }
            }
            else if((Boolean)tabla.getValueAt(fila,6) == false){
            
                
                if(isSelected==true){
                
                    this.setBackground(Color.red);
                    this.setForeground(Color.white);    
                
                }else{
                
                    this.setForeground(Color.red);
                    this.setBackground(Color.white);
                
                }
           
            
            }     
            else {
                 this.setForeground(Color.black);  
            } 
            return this;
        }
    } 
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla_Ant;
    private javax.swing.JTable Grilla_ubc;
    private javax.swing.JMenuItem MnuProd;
    private javax.swing.JButton btActualiza;
    private javax.swing.JButton btUbica1;
    private javax.swing.JButton btUbicar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel pnAnticipada;
    private javax.swing.JTextField txNombre;
    private javax.swing.JTextField txNombreUbicaDestino;
    private javax.swing.JTextField txtSku;
    private javax.swing.JTextField txtUbicacionDestino;
    // End of variables declaration//GEN-END:variables
}
