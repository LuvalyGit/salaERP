/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Conexion.ExeSqlLuvaly;
import Formularios.fmMain;
import Utilidades.GeneraDTE_FTP;
import facturas.ArrayOfString;
import facturas.DTE;
import facturas.DTESoap;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.CookieHandler;
import java.net.CookieManager;
import java.net.CookiePolicy;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.PrintService;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.apache.pdfbox.Loader;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.printing.PDFPageable;
import org.jdom2.Document;
import org.jdom2.Element;
import org.jdom2.Namespace;
import org.jdom2.output.Format;
import org.jdom2.output.XMLOutputter;

/**
 *
 * @author infornatica
 */
public class pfAutorizaNCC extends javax.swing.JPanel {

    /**
     * Creates new form pfAutorizaNCC
     */
    public pfAutorizaNCC() {
        initComponents();
        
        jButton3.setVisible(false);
        CargaDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Grilla_detalle = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        CorrigeTexto = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        txSku1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        bnAutorizadas = new javax.swing.JRadioButton();
        bnPorAutorizar = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        observacion_ncc = new javax.swing.JTextArea();

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Grilla.setAutoCreateRowSorter(true);
        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "RUT", "Nombre", "Tipo", "NÃºmero", "Fecha", "Tipo NCC", "Tipo", "Autorizado", "Pagado", "TotalExento", "TotalDocto", "TotalIVA", "Usuario ", "idsala"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(80);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(120);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(200);
            Grilla.getColumnModel().getColumn(2).setMinWidth(80);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(5).setMinWidth(50);
            Grilla.getColumnModel().getColumn(5).setPreferredWidth(120);
            Grilla.getColumnModel().getColumn(5).setMaxWidth(180);
            Grilla.getColumnModel().getColumn(6).setMinWidth(30);
            Grilla.getColumnModel().getColumn(6).setPreferredWidth(30);
            Grilla.getColumnModel().getColumn(6).setMaxWidth(30);
            Grilla.getColumnModel().getColumn(7).setMinWidth(50);
            Grilla.getColumnModel().getColumn(7).setPreferredWidth(50);
            Grilla.getColumnModel().getColumn(7).setMaxWidth(50);
            Grilla.getColumnModel().getColumn(13).setMinWidth(0);
            Grilla.getColumnModel().getColumn(13).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(13).setMaxWidth(0);
        }

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Actualiza.png"))); // NOI18N
        jButton1.setText("Actualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Grilla_detalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SKU", "Producto", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Grilla_detalle);
        if (Grilla_detalle.getColumnModel().getColumnCount() > 0) {
            Grilla_detalle.getColumnModel().getColumn(0).setMinWidth(100);
            Grilla_detalle.getColumnModel().getColumn(0).setPreferredWidth(120);
            Grilla_detalle.getColumnModel().getColumn(0).setMaxWidth(200);
            Grilla_detalle.getColumnModel().getColumn(2).setMinWidth(70);
            Grilla_detalle.getColumnModel().getColumn(2).setPreferredWidth(70);
            Grilla_detalle.getColumnModel().getColumn(2).setMaxWidth(70);
        }

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Corrige Texto"));

        CorrigeTexto.setEditable(false);
        CorrigeTexto.setColumns(20);
        CorrigeTexto.setRows(5);
        CorrigeTexto.setEnabled(false);
        jScrollPane3.setViewportView(CorrigeTexto);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                .addContainerGap())
        );

        txSku1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txSku1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txSku1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txSku1KeyTyped(evt);
            }
        });

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/search16.png"))); // NOI18N
        jLabel12.setText("FILTRO:");

        buttonGroup1.add(bnAutorizadas);
        bnAutorizadas.setText("Autorizadas");

        buttonGroup1.add(bnPorAutorizar);
        bnPorAutorizar.setSelected(true);
        bnPorAutorizar.setText("Por Autorizar");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/ok_16.png"))); // NOI18N
        jButton2.setText("Autorizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Emitir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(bnAutorizadas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bnPorAutorizar)
                .addGap(171, 171, 171)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txSku1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 3, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txSku1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(bnAutorizadas)
                    .addComponent(bnPorAutorizar)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3)))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "ObservaciÃ³n"));

        observacion_ncc.setEditable(false);
        observacion_ncc.setColumns(20);
        observacion_ncc.setRows(5);
        jScrollPane4.setViewportView(observacion_ncc);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(167, 167, 167))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String rut = Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString();
        String numero = Grilla.getValueAt(Grilla.getSelectedRow(), 3).toString();

        if(JOptionPane.showConfirmDialog(null, "Â¿Desea autorizar NCC?")==0){
            GeneraDTE_NCC(rut,"NCC" ,numero);
        }
        else {
            JOptionPane.showMessageDialog(null, "OperaciÃ³n cancelada");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txSku1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txSku1KeyTyped
        if (Character.isLowerCase(evt.getKeyChar()))
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    }//GEN-LAST:event_txSku1KeyTyped

    private void txSku1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txSku1KeyReleased
        TableRowSorter<TableModel>sorter = new TableRowSorter<TableModel>(Grilla.getModel());
        Grilla.setRowSorter(sorter);
        String sku = txSku1.getText().trim();
        if (sku.length()==0)
        {
            sorter.setRowFilter(null);
        }
        else{
            int cant=0;
            int ev=0;
            String precio = "";
            sorter.setRowFilter(RowFilter.regexFilter(sku));
        }
    }//GEN-LAST:event_txSku1KeyReleased

    private void txSku1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txSku1KeyPressed

    }//GEN-LAST:event_txSku1KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        String rut = Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString();
        String numero = Grilla.getValueAt(Grilla.getSelectedRow(), 3).toString();
        String tipo = Grilla.getValueAt(Grilla.getSelectedRow(), 6).toString();
        String Fecha = Grilla.getValueAt(Grilla.getSelectedRow(), 4).toString().substring(0,10);
        boolean autoriza = (boolean) Grilla.getValueAt(Grilla.getSelectedRow(), 7);
        
        if(autoriza==false && JOptionPane.showConfirmDialog(null, "Â¿Desea autorizar NCC?")==0){
            
            Emite_Nota(rut, numero, tipo, Fecha);
        
        }else{
            
            JOptionPane.showMessageDialog(null, "NCC se encuentra autorizada");
        }

        CargaDatos();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        CargaDatos();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void GrillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMouseClicked
        
        String rut = Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString();
        String numero = Grilla.getValueAt(Grilla.getSelectedRow(), 3).toString();
        String tipo = Grilla.getValueAt(Grilla.getSelectedRow(), 2).toString();
        ExeSql sql = new ExeSql();
        ExeSqlLuvaly luv = new ExeSqlLuvaly();
        ResultSet rs = null;
        ResultSet producto = null;
        
        String Query = "select c.sku, p.nombre, c.cantidad \n"
                     + "from ctacteclidet_ncc c \n"
                     + "left join producto p on p.sku = c.sku \n"
                     + "where c.rut = "+rut+" and c.nrodocto = "+numero+" and c.tipdocto = '"+tipo+"'";
        
        String Query_2 = "select c.tipo from ctactecli_ncc c where c.rut = "+rut+" and c.nrodocto = "+numero+" and c.tipdocto = '"+tipo+"'";
        
        String Query_corrige = "select motivo from corrige_texto_ncc where nrodocto = "+numero+"";

        DefaultTableModel model = (DefaultTableModel) Grilla_detalle.getModel();
        while(model.getRowCount()>0){
            model.removeRow(0);
        }
        CorrigeTexto.setText("");
        try {
            rs = sql.Select(Query);
            while(rs.next()){
                producto =  luv.Select("select p.nombre,trim(u.unidad) as unidad, u.um from producto p \n"
                              + "LEFT JOIN par_unidad u ON u.codigo=p.unidad\n "
                              + "where p.sku = '"+rs.getString("sku").trim()+"'");
                producto.next();
                model.addRow(new Object[]{
                    rs.getString("sku"),
                    producto.getString("nombre"),
                    rs.getString("cantidad")
                });
            }

            rs = sql.Select(Query_2);
            while(rs.next()){
                if(rs.getString("tipo").equals("2")){
                    CorrigeTexto.setEnabled(true);
                    rs = sql.Select(Query_corrige);
                    while(rs.next()){
                        CorrigeTexto.setText(rs.getString("motivo"));
                    }
                    break;
                }
                else {
                    CorrigeTexto.setEnabled(false);
                }
            }
            rs = sql.Select("select observacion from observacion_ncc where nrodocto = "+numero+"");
            observacion_ncc.setText("");
            for(int j = 0; rs.next();j++){
                observacion_ncc.setText(rs.getString("observacion"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(pfAutorizaNCC.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally {
            sql.Close();
            luv.Close();
        }

    }//GEN-LAST:event_GrillaMouseClicked
    
    public void GetAutoriza() {
        
    }
    
    private void Emite_Nota(String rut, String numero, String tipo, String fecha){
         
         ExeSql Sql = new ExeSql();
         ExeSql Sql2 = new ExeSql();
         ExeSql Sql3 = new ExeSql();
         
         
        ResultSet Rs = null;
        
        ExeSql Sql4 = new ExeSql();
        
        ResultSet Rs3 = null; 
         
         
         
        try {

           // String NewCorrelativo  = "";
            
            
//            Rs = Sql.Select("select numero, hasta from par_correlativo where tipo = 'NCC'");
//            Rs.next();
//            int numero_result = Rs.getInt("numero");
//            int hasta_result = Rs.getInt("hasta");
            
            
            
            
            
            Rs = Sql.Select("select numero, hasta from par_correlativo where tipo = 'NCC'");
            Rs.next();
            int numero_result = Rs.getInt("numero");
            int hasta_result = Rs.getInt("hasta");
            int dif = 0;
            
            
            
            
            if(numero_result < hasta_result){

                //Genera Folio Definitivo
//                int resultado_ = Sql.ExeSqlInt("update par_correlativo\n" +
//                                                "set numero = numero + 1\n" +
//                                                "where tipo='NCC'");
//                Sql.Commit();
//                
//                if(resultado_>0){
//                    System.out.println("Se aumentÃ³ correlativo");
//                }
//                
//                Rs = Sql.Select("select sp_getcorrelativo \n" +
//                                "from sp_getcorrelativo('NCC')");   
//
//                Rs.next();
//                NewCorrelativo  = Rs.getString("sp_getcorrelativo").trim();
//
//                Rs.close();
                
                int NewCorrelativo  = 0;
                
                
                Rs = Sql.Select("select sp_getcorrelativo \n" +
                                "from sp_getcorrelativo('NCC')");   
                Rs.next();
                NewCorrelativo  = Rs.getInt("sp_getcorrelativo");
                Rs.close();
                
                
                Rs3 = Sql3.Select("select tipdocto,nrodocto from ctactecli where tipdocto IN('NCC') order by nrodocto DESC LIMIT 1");
                Rs3.next();
                
                
            
                dif = NewCorrelativo - Rs3.getInt("nrodocto");
                
                System.out.println("nrodocto ES: "+Rs3.getInt("nrodocto"));
                System.out.println("NewCorrelativo ES: "+NewCorrelativo);
                System.out.println("La Diferencia ES: "+dif);
                
                
                
                if (dif > 1){
                     
                    dif = dif - 1;
                    NewCorrelativo = NewCorrelativo - dif; 
                    
                    Sql4.ExeSql("UPDATE par_correlativo SET numero = "+NewCorrelativo+"  WHERE tipo IN ('NCC')");
                    Sql4.Commit();
                    
                
                }
                
                
                
                
                if (NewCorrelativo == Rs3.getInt("nrodocto")){
                    
                    NewCorrelativo = NewCorrelativo + 1; 
                    
                   
                    Sql4.ExeSql("UPDATE par_correlativo SET numero = "+NewCorrelativo+"  WHERE tipo IN ('NCC')");
                    Sql4.Commit();
                    
                
                }
                
                
                System.out.println("El NUEVO NewCorrelativo ES: "+NewCorrelativo);
                 
                
                
                
                 //**************************************************** // 
                    
                    //  NewCorrelativo = "18";    //Folio Provisorio
                    
                  //*****************************************************//  
                
                
                
                String numero_ = "";


                String Query_cta = "insert into ctactecli \n" +
                                    "select rut,tipdocto,"+NewCorrelativo+",tipdocorigen,nrodocorigen,\n" +
                                    "femision,fcreacion,occh,fvencimiento,totalexento,\n" +
                                    "totalafecto,totaliva,totaldocto,estado,usuario_actualizacion,usuario_creador,\n" +
                                    "totalimpespecifico,tipdocrel,nrodocrel,codigo_oc,tipo,usuario,pagado,transporte,filledoc,\n" +
                                    "contacto,comentarios,transporte_finalizado,tipodespacho,porc_dscto,direccion_despacho,\n" +
                                    "comuna_despacho,ciudad_despacho,tipo_venta,anticipado,usuario_despacho,autoriza_despacho,\n" +
                                    "es_refacturacion,observacion from ctactecli_ncc where tipdocto = 'NCC' and nrodocto = "+numero+" and rut = "+rut+"";
                if(Sql.ExeSqlInt(Query_cta)>0){
                
                    Sql.Commit();
                    
                    if(tipo.equals("2")){
                    
                        String Query_Corrige = "insert into corrige_texto \n" +
                                               "select "+NewCorrelativo+", motivo from corrige_texto_ncc where nrodocto = "+numero+"";
                        
                        Sql.ExeSql(Query_Corrige);
                        Sql.Commit();
                    
                    }else {
                            String Query_det = "insert into ctacteclidet \n" +
                                                "select rut, tipdocto, "+NewCorrelativo+", sku, cantidad, \n" +
                                                "valorunitario, iva, otroimpuesto, totallinea, tazaotroimpuesto, tazaiva, \n" +
                                                "codotroimpuesto, estado, costopromedio, valultcompra, \n" +
                                                "ingreso, merma, pago, boocheck, cant_procesada from ctacteclidet_ncc where tipdocto = 'NCC' and nrodocto = "+numero+
                                                " and rut = "+rut+"";
                            
                            Sql.ExeSql(Query_det);
                            Sql.Commit();

                            Sql.ExeSql("insert into observacion \n" +
                                      "select "+NewCorrelativo+", observacion, autorizada from observacion_ncc where nrodocto = "+numero+"");
                            Sql.Commit();
                    }
                    
                    Sql.ExeSql("update ctactecli_ncc set autorizado = true where nrodocto = "+numero+" and rut = "+rut+"");
                    Sql.Commit();
                    
                    Sql.ExeSql("update observacion_ncc set autorizada = true where nrodocto = "+numero+"");
                    Sql.Commit();
                    
                    GeneraDTE_NCC(rut,"NCC" ,String.valueOf(NewCorrelativo));
                    
                    
                    Sql.ExeSql("update ctactecli set \n"+
                               "estado = 1, \n"+
                               "idsala = 2 \n"+
                               "where tipdocto='NCC' and rut = "+rut+" and nrodocto=" + NewCorrelativo+"");  //Estado a Emitida
                    
                    Sql.Commit();


                    JOptionPane.showMessageDialog(null,"Documento Emitido");
                    JOptionPane.showMessageDialog(null, "NÃºmero: "+NewCorrelativo+"");
                    
                        
                    String usuario = Grilla.getValueAt(Grilla.getSelectedRow(), 12).toString();  
                      
                      
                    Sql2.ExeSql("INSERT into caja_ventas\n" +
                                "(rut,tipdocto,nrodocto,monto,tipopago, femision,voucher,usuario) values\n" +
                                "("+ rut.trim() +",'NCC',"+NewCorrelativo+","+ Grilla.getValueAt(Grilla.getSelectedRow(), 10) +"," +
                                200 +", '" +fecha+"', \n" +
                                0+",'"+usuario.trim().toLowerCase() +"')");
                    
                    Sql2.Commit();
                        
                }else{
                        
                    JOptionPane.showMessageDialog(null,"Documento No Emitido");
                }
            
            }else{
                
                JOptionPane.showMessageDialog(null,"No hay folios disponibles."); //452294585 anexo:43645
            }
            
        } catch (Exception ex) {
            Sql.Rollback();
            Sql2.Rollback();
            fmMain.Mensaje(ex.getMessage());
        } finally{
            Sql.Close();
            Sql2.Close();
        }      
    }
    
    
    private void GeneraDTE_NCC(String ParRut,String ParTipo, String ParNumero){
    
        File factura = null;
        
       // boolean Resultado=true;
        String Rut = ParRut;
        String Tipo = ParTipo;
        String Numero = ParNumero;
        String TipoNro = "";
        
        String ElRut = "";
        String ElNombre = "";
        String ElGiro = "";
        String LaDireccion = "";
        String LaComuna = "";
        String LaCiudad = "";
        
        String Fecha = "";
        
        String ElAfecto = "";
        String ElIva = "";
        String ElTotal = "";
        
        String FolioRef = "";
        String TipoFolioRef = "";
        String FechaGDC = "";
        
        String CodRef = "";
                        
        ExeSql Sql = new ExeSql();
        ExeSql Sql2 = new ExeSql();
        ExeSql Sql3 = new ExeSql();
        ExeSql Sql4 = new ExeSql();
        ExeSql Sql5 = new ExeSql();
       
        
        ResultSet Rs, Rs2, Rs3,Rs4, Rs5 = null;
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        
        
        try {
        
            Rs = Sql.Select("select * from ctactecli where tipdocto='" + Tipo +"' and nrodocto=" + Numero);
            Rs.next();
        
            switch (Tipo){
                case "GDC": TipoNro="52"; break;
                case "FAC": TipoNro="33"; break;
                case "NCC": TipoNro="61"; break;
                case "NDC": TipoNro="56"; break;
                case "FEC": TipoNro="34"; break;
                case "BOC": TipoNro="39"; break;
            }
            
            Fecha = sdf.format(Rs.getDate("femision"));
            
            Namespace ns= Namespace.getNamespace("http://www.sii.cl/SiiDte");
            
            Document doc= new Document();    
            
                Element root=new Element("DTE").setAttribute("version", "1.0");
                root.setNamespace(ns);
                
                    Element documento=new Element("Documento").setAttribute("ID","F"+Numero+"T"+TipoNro);
                    documento.setNamespace(ns);
        
                        Element encabezado=new Element("Encabezado"); 
                        encabezado.setNamespace(ns);
        
                            Element Iddoc=new Element("IdDoc").setNamespace(ns); 
                                            
                                Iddoc.addContent(new Element("TipoDTE").addContent(TipoNro).setNamespace(ns));
                                Iddoc.addContent(new Element("Folio").addContent(Numero).setNamespace(ns));
                                Iddoc.addContent(new Element("FchEmis").addContent(Fecha).setNamespace(ns));
                                
                                
                            
                            Element Emisor=new Element("Emisor").setNamespace(ns); 
                                
                                Emisor.addContent(new Element("RUTEmisor").addContent("76231391-K").setNamespace(ns));
                                Emisor.addContent(new Element("RznSoc").addContent("EMPRESA COMERCIALIZADORA LUIS VALDES LYON S.P.A.").setNamespace(ns));
                                Emisor.addContent(new Element("GiroEmis").addContent("COMERCIALIZADORA DE ARTICULOS DE FERRETERIA").setNamespace(ns));
                                Emisor.addContent(new Element("Telefono").addContent("+56(45)2658390").setNamespace(ns));
                                Emisor.addContent(new Element("CorreoEmisor").addContent("contacto@luvaly.cl").setNamespace(ns));
                                Emisor.addContent(new Element("Acteco").addContent("464909").setNamespace(ns));
                                Emisor.addContent(new Element("Acteco").addContent("466302").setNamespace(ns));
                                Emisor.addContent(new Element("DirOrigen").addContent("AVENIDA HUERFANOS 01871").setNamespace(ns));
                                Emisor.addContent(new Element("CmnaOrigen").addContent("TEMUCO").setNamespace(ns));
                                Emisor.addContent(new Element("CiudadOrigen").addContent("TEMUCO").setNamespace(ns));
                                
                                
                                
                        //**************************************************************** DATOS CLIENTE ******************************************************************//        
                                
                                String Query = "select d.rut || '-' || co.dv as rut, co.nombre,c.giro,c.direccion,c.ciudad,c.comuna \n"+
                                               "from ctactecli d \n"+
                                               "left join cliente co on co.rut=d.rut \n"+
                                               "left join clicontacto c on d.rut=c.rut \n"+
                                               "where d.rut=" + Rut + "\n"+
                                               "and d.tipdocto='" + Tipo + "'\n"+
                                               "and d.nrodocto=" + Numero;
                                //System.out.println(Query);
                                Rs2 = Sql2.Select(Query);
                                Rs2.next();

                                ElRut = Rs2.getString("rut").trim();
                                ElNombre = Rs2.getString("Nombre").trim();
                                
                                
                                if(Rs2.getString("giro").trim().length()>40){
                                    
                                     ElGiro = Rs2.getString("giro").substring(0, 40).trim();
                                    
                                }else{
                                    
                                    ElGiro = Rs2.getString("giro").trim();
                                
                                }    
                                
                                LaDireccion = Rs2.getString("direccion").trim();
                                LaComuna= Rs2.getString("comuna").trim();
                                LaCiudad = Rs2.getString("ciudad").trim();
                                
                                
                        //********************************************************************************************************************************************************//    
                            Element Receptor=new Element("Receptor").setNamespace(ns); 
                                            
                                Receptor.addContent(new Element("RUTRecep").addContent(ElRut).setNamespace(ns));
                                Receptor.addContent(new Element("RznSocRecep").addContent(ElNombre).setNamespace(ns));
                                Receptor.addContent(new Element("GiroRecep").addContent(ElGiro).setNamespace(ns));    
                                Receptor.addContent(new Element("DirRecep").addContent(LaDireccion).setNamespace(ns));    
                                Receptor.addContent(new Element("CmnaRecep").addContent(LaComuna).setNamespace(ns));    
                                Receptor.addContent(new Element("CiudadRecep").addContent(LaCiudad).setNamespace(ns));    
                                
                        //**************************************************************** TOTALES DOCUMENTO ******************************************************************//   
                                
                          ElAfecto = Rs.getString("totalafecto");
                          ElIva = Rs.getString("totaliva");
                          ElTotal = Rs.getString("totaldocto");
                                
                                
                                
                            Element Totales=new Element("Totales").setNamespace(ns); 
                                            
                                Totales.addContent(new Element("MntNeto").addContent(ElAfecto).setNamespace(ns));
                                Totales.addContent(new Element("TasaIVA").addContent("19").setNamespace(ns));
                                Totales.addContent(new Element("IVA").addContent(ElIva).setNamespace(ns));
                                Totales.addContent(new Element("MntTotal").addContent(ElTotal).setNamespace(ns));
                        
                       
                                    
                        encabezado.addContent(Iddoc);
                        encabezado.addContent(Emisor);
                        encabezado.addContent(Receptor);
                        encabezado.addContent(Totales);
                
                    documento.addContent(encabezado);    
             
                    //********************************************************************************************************************************************************//             
                    
                    //**************************************************************** DETALLE PRODUCTOS ******************************************************************//   
                    
                    int linea = 1;
                    
                    Rs3 = Sql3.Select("select d.sku,p.nombre,u.um,d.cantidad,d.valorunitario,d.totallinea\n" +
                                       "from ctacteclidet d\n" +
                                       "left join producto p on d.sku=p.sku \n" +
                                        "left join par_unidad u on u.codigo=p.unidad\n" +
                                        "where d.tipdocto='"+ Tipo +"'\n" +
                                        "and d.rut="+ Rut +"\n" +
                                        "and d.nrodocto=" + Numero);
                     
                   
                    if (Sql3.GetRowCount() > 0){
                    
                        while(Rs3.next()){ //Una iteraciÃ³n por producto
                   
                            String ElProd = Rs3.getString("nombre").trim();
                            String LaCantidad = fmMain.FormatoNumero3(Rs3.getDouble("cantidad"));
                            String LaUnidad = Rs3.getString("um");
                            String ElUnitario = fmMain.FormatoNumero4(Rs3.getDouble("valorunitario"));
                            String LaLinea = String.valueOf(Math.round(Rs3.getDouble("totallinea")));
                            
                            String ElSku = Rs3.getString("sku").trim();
                        
                            Element Detalle=new Element("Detalle").setNamespace(ns);
                        
                                String nLinea = String.valueOf(linea);    
                            
                                Detalle.addContent(new Element("NroLinDet").addContent(nLinea).setNamespace(ns));
                                
                                    Element CdgItem=new Element("CdgItem").setNamespace(ns);  //Tipo Codificacion para los items
                                
                                            CdgItem.addContent(new Element("TpoCodigo").addContent("INT1").setNamespace(ns));
                                            CdgItem.addContent(new Element("VlrCodigo").addContent(ElSku).setNamespace(ns));
                            
                                Detalle.addContent(CdgItem);       
                                
                                Detalle.addContent(new Element("NmbItem").addContent(ElProd).setNamespace(ns));
                                Detalle.addContent(new Element("QtyItem").addContent(LaCantidad).setNamespace(ns));
                                Detalle.addContent(new Element("UnmdItem").addContent(LaUnidad).setNamespace(ns));
                                Detalle.addContent(new Element("PrcItem").addContent(ElUnitario).setNamespace(ns));
                                Detalle.addContent(new Element("MontoItem").addContent(LaLinea).setNamespace(ns));
                            
                                linea++;
                            
                           documento.addContent(Detalle);
                        }
                    
                    }
                    
                    //********************************************* SI ES CORRIGE TEXTO **********************************************//
                    
                        String ElTexto="";
                        Rs5 = Sql5.Select("select motivo from corrige_texto where nrodocto="+ Numero);
                
                        if(Sql5.GetRowCount()>0){
                            
                            Rs5.next();
                            
                            ElTexto = Rs5.getString("motivo").trim();
                            
                            Element DetalleCorrige=new Element("Detalle").setNamespace(ns);
                    
                                String nLineaCorrige = String.valueOf(linea);
                                
                                DetalleCorrige.addContent(new Element("NroLinDet").addContent(nLineaCorrige).setNamespace(ns));
                                DetalleCorrige.addContent(new Element("NmbItem").addContent("CORRIGE TEXTO:").setNamespace(ns));
                                DetalleCorrige.addContent(new Element("DscItem").addContent(ElTexto).setNamespace(ns));
                                DetalleCorrige.addContent(new Element("MontoItem").addContent("0").setNamespace(ns));
                    
                            documento.addContent(DetalleCorrige); 
                            
                        }
                    
                    
                    
                    
                    //*****************************************************************************************************************//
                    
                    String TipoDocRef = Rs.getString("tipdocorigen");
                    
                    
        
                    Rs4 = Sql4.Select("select * from ctactecli where tipdocto IN ('"+TipoDocRef+"') and nrodocto =" + Rs.getInt("nrodocorigen"));
 
        
                    Rs4.next();
                    
                    
                    FolioRef = Rs4.getString("nrodocto"); 
                    
                    String TipoRef = "";
                    
                    if (Rs4.getString("tipdocto").equals("BOC")){
                    
                        TipoRef = "39";
                    
                    }else if (Rs4.getString("tipdocto").equals("FAC")){
                    
                         TipoRef = "33";
                    
                    }
                    
                    
                    
                    FechaGDC = sdf.format(Rs4.getDate("femision"));
                    CodRef = Rs.getString("tipo");
                    
                    if (CodRef.trim().equals("4")){
                                        
                        CodRef = "3";
                    }
                    
                    
                    Element Referencia=new Element("Referencia").setNamespace(ns);
                    
                          Referencia.addContent(new Element("NroLinRef").addContent("1").setNamespace(ns));
                          Referencia.addContent(new Element("TpoDocRef").addContent(TipoRef).setNamespace(ns));
                          Referencia.addContent(new Element("FolioRef").addContent(FolioRef).setNamespace(ns));
                          Referencia.addContent(new Element("FchRef").addContent(FechaGDC).setNamespace(ns));
                          Referencia.addContent(new Element("CodRef").addContent(CodRef).setNamespace(ns));
                    documento.addContent(Referencia);
                    
           root.addContent(documento);
        doc.setRootElement(root); 

       
//Se genera el archivo XML 
        XMLOutputter outter=new XMLOutputter();
        outter.setFormat(Format.getPrettyFormat());
        factura = new File("C:/temp_luvaly/minotacredito.xml");
        outter.output(doc, new FileWriter(factura));
    
    }catch (IOException ex) {
     
        Logger.getLogger(pfAutorizaNCC.class.getName()).log(Level.SEVERE, null, ex);  
    
    }catch (SQLException ex) {
    
        Logger.getLogger(pfAutorizaNCC.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    
    BufferedReader br;
        
    try {
         
  //******** Se traspasa el contenido del archivo XML a una variable de texto (String) *******//      
        
        br = new BufferedReader(new InputStreamReader(new FileInputStream(factura), StandardCharsets.UTF_8));
        String result = "";
        String line = "";
        
        while( (line = br.readLine()) != null){
        
            result = result + line; 
        }
        
    //    System.out.println(result);
        
        
    //******************************************** Se envÃ­a el contenido del XML para su emision como documento  ************************************************     
        DTE dte = new DTE();
        DTESoap soap = dte.getDTESoap();
                                            //    usuario      clave     contenido (false = envÃ­o de pruebas / true = envÃ­o a SII)
                                            //                              XML
        
      //  ArrayOfString respuesta = soap.ponerDTE("ws_econa", "5df28bdd52", result, false);
        ArrayOfString respuesta = soap.ponerDTE("ws_econa", "5df28bdd52", result, true);
               
        if (respuesta.getString().isEmpty()){   //Si la respuesta es una cadena vacÃ­a el envÃ­o fue exitoso
        
            System.out.println("Documento ha sido emitido");
            Imprimir("76231391-K",ElRut,TipoNro,Numero,Fecha,ElTotal,0,0);
                        
        }else{        //De lo contrario el archivo XML presenta errores
        
            System.out.println("Error en envÃ­o : "+respuesta.getString());   //Se muestra los errores seÃ±alados
        
        }
        
            
    }catch (FileNotFoundException ex) {
        
        Logger.getLogger(pfAutorizaNCC.class.getName()).log(Level.SEVERE, null, ex);
        
    }catch (IOException ex) {
    
        Logger.getLogger(pfAutorizaNCC.class.getName()).log(Level.SEVERE, null, ex);
    }
//**********************************************************************************************//    
        
    } 
     
    
    public void Imprimir(String emisor, String receptor, String tipodte, String folio, String fecha, String total, int cimp,int imprime)  {
      
        System.out.println(emisor);
        System.out.println(receptor) ;
        System.out.println(tipodte);
        System.out.println(folio);
        System.out.println(fecha); 
        System.out.println(total);
        
        int Imprimir = imprime;
       
        try {
            PrintService[] services = PrinterJob.lookupPrintServices();
          
         //   int value = 4;
            
            int value = cimp; // El valor obtenido especifica la posicion de la impresora
            
            PrintService print = services[value];
           // System.out.println("EL VALOR DE LA IMPRESORA ES :"+services[value]);
            
            
            URL url=null;
            try {
           
                CookieHandler.setDefault(new CookieManager(null, CookiePolicy.ACCEPT_ALL));
    
                //URL de pruebas
//                
//                url = new URL("https://www.efacturadelsur.cl/certificacion/pdf?rutEmisor="+emisor+"&rutReceptor="+receptor+"&tipoDte="+tipodte+
//                              "&folio="+folio+"&fechaEmision="+fecha+"&montoTotal="+total);
                
                
                //URL de producciÃ³n

              url = new URL("https://www.efacturadelsur.cl/app/pdf?rutEmisor="+emisor+"&rutReceptor="+receptor+"&tipoDte="+tipodte+
                            "&folio="+folio+"&fechaEmision="+fecha+"&montoTotal="+total);
                
                InputStream in = url.openStream();
                Files.copy(in, Paths.get("C:/doc_luvaly/NCC"+folio+".pdf"), StandardCopyOption.REPLACE_EXISTING);
          

          

            } catch (MalformedURLException e) {
                Logger.getLogger(pfAutorizaNCC.class.getName()).log(Level.SEVERE, null, e);
            }
            
            
            File fin = new File("C:/doc_luvaly/NCC"+folio+".pdf");

            
            if (Imprimir == 1){
            
                PDDocument document = Loader.loadPDF(fin);

                PrinterJob job = PrinterJob.getPrinterJob();
                job.setPageable(new PDFPageable(document));
                job.setPrintService(print);
                job.print();
            
            }
            
        
        }catch (FileNotFoundException ex) {
            
            Logger.getLogger(pfAutorizaNCC.class.getName()).log(Level.SEVERE, null, ex);
        
        }catch (IOException | PrinterException ex) {
            
            Logger.getLogger(pfAutorizaNCC.class.getName()).log(Level.SEVERE, null, ex);
        } 
    
    }
    
    
    
    
    
     
     
     public void CargaDatos() {
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        
        
        String query = "";
        
        if(bnAutorizadas.isSelected()){
            query = "select cn.rut,(select c.nombre from cliente c where c.rut = cn.rut) nombre, cn.tipdocto, cn.nrodocto, cn.fcreacion, cn.autorizado,\n"
                    + " case when cn.tipo = 1 then 'Anula'\n" +
                    "	 when cn.tipo = 2 then 'Corrige Texto'\n" +
                    "           when cn.tipo = 3 then 'Corrige Monto'\n" +
                    "   end as causa, cn.tipo,cn.pagado, cn.totalexento, cn.totaldocto, cn.totaliva, cn.usuario_creador, cn.occh, cn.idsala \n"
                    + "from ctactecli_ncc cn where cn.desactivada is false and cn.autorizado = true";
        }
        if(bnPorAutorizar.isSelected()) {
            query = "select cn.rut,(select c.nombre from cliente c where c.rut = cn.rut) nombre, cn.tipdocto, cn.nrodocto, cn.fcreacion, cn.autorizado,\n"
                    + " case when cn.tipo = 1 then 'Anula'\n" +
                    "	 when cn.tipo = 2 then 'Corrige Texto'\n" +
                    "           when cn.tipo = 3 then 'Corrige Monto'\n" +
                    "   end as causa, cn.tipo,cn.pagado, cn.totalexento, cn.totaldocto, cn.totaliva, cn.usuario_creador, cn.occh, cn.idsala \n"
                    + "from ctactecli_ncc cn where cn.desactivada is false and cn.autorizado = false";
        }
        try {
            rs =sql.Select(query);
            DefaultTableModel model = (DefaultTableModel) Grilla.getModel();
            while(model.getRowCount()>0){
                model.removeRow(0);
            }
            for(int i = 0; rs.next(); i++){
                
                //if (rs.getString("occh").trim().equals("0")){
                if (rs.getString("occh").trim().equals("0") && rs.getString("idsala").trim().equals("2")){    
                
                    model.addRow(new Object[]{
                        rs.getString("rut"),
                        rs.getString("nombre"),
                        rs.getString("tipdocto"),
                        rs.getString("nrodocto"),
                        rs.getString("fcreacion"),
                        rs.getString("causa"),
                        rs.getString("tipo"),
                        rs.getBoolean("autorizado"),
                        rs.getString("pagado"),
                        rs.getInt("totalexento"),
                        rs.getInt("totaldocto"),
                        rs.getInt("totaliva"),
                        rs.getString("usuario_creador").toUpperCase(),
                        rs.getInt("idsala")

                });
                
                }
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(pfAutorizaNCC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public static String FormatoNumero(double Numero){
        DecimalFormatSymbols simbolo=new DecimalFormatSymbols();
        simbolo.setDecimalSeparator('.');
        simbolo.setGroupingSeparator(',');
        DecimalFormat formateador = new DecimalFormat("#0.00",simbolo);
        return formateador.format(Numero);
    }
    
    public static String FormatoTotal(double Numero){
        DecimalFormatSymbols simbolo=new DecimalFormatSymbols();
        simbolo.setDecimalSeparator('.');
        simbolo.setGroupingSeparator(',');
        DecimalFormat formateador = new DecimalFormat("#",simbolo);
        return formateador.format(Numero);
    } 
    
    
    public Date getFechaAsString() {
       SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
       Date Fecha = null;
        try {
            Fecha = df.parse(Grilla.getValueAt(Grilla.getSelectedRow(), 10).toString().trim());
        } catch (ParseException ex) {
            Logger.getLogger(pfAutorizaNCC.class.getName()).log(Level.SEVERE, null, ex);
        }
       return Fecha;
    }
     
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea CorrigeTexto;
    private javax.swing.JTable Grilla;
    private javax.swing.JTable Grilla_detalle;
    private javax.swing.JRadioButton bnAutorizadas;
    private javax.swing.JRadioButton bnPorAutorizar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea observacion_ncc;
    private javax.swing.JTextField txSku1;
    // End of variables declaration//GEN-END:variables
}
