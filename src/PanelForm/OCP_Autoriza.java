/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Conexion.ExeSqlLuvaly;
import Formularios.fmMain;
import static Formularios.fmMain.pnPestanas;
import static PanelForm.pfIndicadoresInventario.DARK_GREEN;
import Utilidades.PanelTab;
import java.awt.Color;
import java.awt.Component;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David Alcaman
 */
public class OCP_Autoriza extends javax.swing.JPanel {
    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    static boolean sobre_stock = false; 
    boolean autoriza = false;
    
    
       /**
     * Creates new form OC_Clientes
     */
    public OCP_Autoriza() {
        initComponents();
        btAutorizar.setVisible(false);
        btRechazar.setVisible(false);
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        GrillaProductos.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        GrillaProductos.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        GrillaProductos.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
        
        GrillaOCP.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        GrillaOCP.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
        GrillaOCP.getColumnModel().getColumn(6).setCellRenderer(rightRenderer);
                
        GrillaOCP.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            //Se ejecuta automáticamente cada vez que se hace una nueva selección. 
            @Override
            public void valueChanged(ListSelectionEvent e) {
                
                if(GrillaOCP.getSelectedRowCount()>0){
                    sobre_stock = false;
                    
                     if (!autoriza){
                        CargaProductos((Integer) GrillaOCP.getValueAt(GrillaOCP.getSelectedRow(),0));
                     }
                }
                    
            }

        });
        GrillaProductos.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            //Se ejecuta automáticamente cada vez que se hace una nueva selección. 
            @Override
            public void valueChanged(ListSelectionEvent e) {
                    if(GrillaProductos.getRowCount()>0 && GrillaDatos.getRowCount()>0){
                       
                        GrillaDatos.getSelectionModel().setSelectionInterval(GrillaProductos.getSelectedRow(),GrillaProductos.getSelectedRow());
                        GrillaDatos.repaint();
                    }
            }

        });
        GrillaDatos.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            //Se ejecuta automáticamente cada vez que se hace una nueva selección. 
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(GrillaDatos.getRowCount()>0 && GrillaProductos.getRowCount()>0){
                    GrillaProductos.getSelectionModel().setSelectionInterval(GrillaDatos.getSelectedRow(),GrillaDatos.getSelectedRow());
                    GrillaProductos.repaint();
                }
            }

        });
        
        btActualizar.doClick();
                //MOSTRAR BOTÓN AUTORIZAR
                int pruebaUusario = 85;
                int intNivelUsuario = 0;
                intNivelUsuario = fmMain.trae_nivel(fmMain.GetUsuario());
                if( intNivelUsuario >= pruebaUusario){
                    btAutorizar.setVisible(true);
                    btRechazar.setVisible(true);
                }else{
                }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        GrillaOCP = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        GrillaProductos = new javax.swing.JTable();
        btActualizar = new javax.swing.JButton();
        btAutorizar = new javax.swing.JButton();
        btRechazar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        GrillaDatos = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        GrillaOtros = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        jMenuItem1.setText("Ver Producto");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jMenuItem2.setText("Ver Productos");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu2.add(jMenuItem2);

        setBackground(new java.awt.Color(226, 226, 255));

        GrillaOCP.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        GrillaOCP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número", "Fecha", "Rut", "Proveedor", "Neto", "Iva", "Total", "Cuotas", "Dias", "Tipo Pago"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GrillaOCP.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        GrillaOCP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaOCPMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(GrillaOCP);
        if (GrillaOCP.getColumnModel().getColumnCount() > 0) {
            GrillaOCP.getColumnModel().getColumn(0).setMinWidth(70);
            GrillaOCP.getColumnModel().getColumn(0).setPreferredWidth(70);
            GrillaOCP.getColumnModel().getColumn(0).setMaxWidth(70);
            GrillaOCP.getColumnModel().getColumn(1).setMinWidth(80);
            GrillaOCP.getColumnModel().getColumn(1).setPreferredWidth(80);
            GrillaOCP.getColumnModel().getColumn(1).setMaxWidth(80);
            GrillaOCP.getColumnModel().getColumn(2).setMinWidth(70);
            GrillaOCP.getColumnModel().getColumn(2).setPreferredWidth(70);
            GrillaOCP.getColumnModel().getColumn(2).setMaxWidth(70);
            GrillaOCP.getColumnModel().getColumn(3).setMinWidth(300);
            GrillaOCP.getColumnModel().getColumn(3).setPreferredWidth(300);
            GrillaOCP.getColumnModel().getColumn(4).setMinWidth(70);
            GrillaOCP.getColumnModel().getColumn(4).setPreferredWidth(70);
            GrillaOCP.getColumnModel().getColumn(4).setMaxWidth(70);
            GrillaOCP.getColumnModel().getColumn(5).setMinWidth(60);
            GrillaOCP.getColumnModel().getColumn(5).setPreferredWidth(60);
            GrillaOCP.getColumnModel().getColumn(5).setMaxWidth(60);
            GrillaOCP.getColumnModel().getColumn(6).setMinWidth(70);
            GrillaOCP.getColumnModel().getColumn(6).setPreferredWidth(70);
            GrillaOCP.getColumnModel().getColumn(6).setMaxWidth(70);
            GrillaOCP.getColumnModel().getColumn(7).setMinWidth(60);
            GrillaOCP.getColumnModel().getColumn(7).setPreferredWidth(60);
            GrillaOCP.getColumnModel().getColumn(7).setMaxWidth(60);
            GrillaOCP.getColumnModel().getColumn(8).setMinWidth(75);
            GrillaOCP.getColumnModel().getColumn(8).setPreferredWidth(75);
            GrillaOCP.getColumnModel().getColumn(8).setMaxWidth(75);
            GrillaOCP.getColumnModel().getColumn(9).setMinWidth(150);
            GrillaOCP.getColumnModel().getColumn(9).setPreferredWidth(150);
            GrillaOCP.getColumnModel().getColumn(9).setMaxWidth(150);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("ORDENES DE COMPRA PROVEEDOR");

        GrillaProductos.setBackground(new java.awt.Color(229, 252, 229));
        GrillaProductos.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        GrillaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nombre", "Unidad", "Cantidad", "Unitario", "% Mgn", "Total", "C. Embalaje"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GrillaProductos.setComponentPopupMenu(jPopupMenu1);
        jScrollPane2.setViewportView(GrillaProductos);
        if (GrillaProductos.getColumnModel().getColumnCount() > 0) {
            GrillaProductos.getColumnModel().getColumn(0).setMinWidth(70);
            GrillaProductos.getColumnModel().getColumn(0).setPreferredWidth(70);
            GrillaProductos.getColumnModel().getColumn(0).setMaxWidth(70);
            GrillaProductos.getColumnModel().getColumn(1).setMinWidth(200);
            GrillaProductos.getColumnModel().getColumn(1).setPreferredWidth(250);
            GrillaProductos.getColumnModel().getColumn(3).setMinWidth(70);
            GrillaProductos.getColumnModel().getColumn(3).setPreferredWidth(70);
            GrillaProductos.getColumnModel().getColumn(3).setMaxWidth(70);
            GrillaProductos.getColumnModel().getColumn(4).setMinWidth(80);
            GrillaProductos.getColumnModel().getColumn(4).setPreferredWidth(80);
            GrillaProductos.getColumnModel().getColumn(4).setMaxWidth(80);
            GrillaProductos.getColumnModel().getColumn(5).setMinWidth(70);
            GrillaProductos.getColumnModel().getColumn(5).setPreferredWidth(70);
            GrillaProductos.getColumnModel().getColumn(5).setMaxWidth(70);
            GrillaProductos.getColumnModel().getColumn(6).setMinWidth(80);
            GrillaProductos.getColumnModel().getColumn(6).setPreferredWidth(80);
            GrillaProductos.getColumnModel().getColumn(6).setMaxWidth(80);
        }

        btActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/refresh16.png"))); // NOI18N
        btActualizar.setText("Actualizar");
        btActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btActualizarActionPerformed(evt);
            }
        });

        btAutorizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/ok_16.png"))); // NOI18N
        btAutorizar.setText("Autorizar");
        btAutorizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAutorizarActionPerformed(evt);
            }
        });

        btRechazar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Cancel16.png"))); // NOI18N
        btRechazar.setText("Rechazar");
        btRechazar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRechazarActionPerformed(evt);
            }
        });

        GrillaDatos.setBackground(new java.awt.Color(253, 240, 240));
        GrillaDatos.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        GrillaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Stock", "OCP", "OCC", "Vta 3M", "OCC 3M", "Ult.Costo", "P.Venta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GrillaDatos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(GrillaDatos);

        GrillaOtros.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        GrillaOtros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nombre", "Unidad", "P.Compra", "Stock", "OCP", "OCC", "VTA 3M", "OCC 3M"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GrillaOtros.setComponentPopupMenu(jPopupMenu2);
        jScrollPane4.setViewportView(GrillaOtros);
        if (GrillaOtros.getColumnModel().getColumnCount() > 0) {
            GrillaOtros.getColumnModel().getColumn(0).setMinWidth(80);
            GrillaOtros.getColumnModel().getColumn(0).setPreferredWidth(80);
            GrillaOtros.getColumnModel().getColumn(0).setMaxWidth(80);
            GrillaOtros.getColumnModel().getColumn(1).setMinWidth(400);
            GrillaOtros.getColumnModel().getColumn(1).setPreferredWidth(400);
            GrillaOtros.getColumnModel().getColumn(1).setMaxWidth(400);
            GrillaOtros.getColumnModel().getColumn(2).setMinWidth(70);
            GrillaOtros.getColumnModel().getColumn(2).setPreferredWidth(70);
            GrillaOtros.getColumnModel().getColumn(2).setMaxWidth(70);
            GrillaOtros.getColumnModel().getColumn(3).setMinWidth(70);
            GrillaOtros.getColumnModel().getColumn(3).setPreferredWidth(70);
            GrillaOtros.getColumnModel().getColumn(3).setMaxWidth(70);
            GrillaOtros.getColumnModel().getColumn(4).setMinWidth(70);
            GrillaOtros.getColumnModel().getColumn(4).setPreferredWidth(70);
            GrillaOtros.getColumnModel().getColumn(4).setMaxWidth(70);
            GrillaOtros.getColumnModel().getColumn(5).setMinWidth(70);
            GrillaOtros.getColumnModel().getColumn(5).setPreferredWidth(70);
            GrillaOtros.getColumnModel().getColumn(5).setMaxWidth(70);
            GrillaOtros.getColumnModel().getColumn(6).setMinWidth(70);
            GrillaOtros.getColumnModel().getColumn(6).setPreferredWidth(70);
            GrillaOtros.getColumnModel().getColumn(6).setMaxWidth(70);
            GrillaOtros.getColumnModel().getColumn(7).setMinWidth(70);
            GrillaOtros.getColumnModel().getColumn(7).setPreferredWidth(70);
            GrillaOtros.getColumnModel().getColumn(7).setMaxWidth(70);
            GrillaOtros.getColumnModel().getColumn(8).setMinWidth(70);
            GrillaOtros.getColumnModel().getColumn(8).setPreferredWidth(70);
            GrillaOtros.getColumnModel().getColumn(8).setMaxWidth(70);
        }

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Otros Productos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(123, 123, 123)
                        .addComponent(btActualizar)
                        .addGap(73, 73, 73)
                        .addComponent(btAutorizar)
                        .addGap(57, 57, 57)
                        .addComponent(btRechazar))
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane4))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btAutorizar)
                        .addComponent(btRechazar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btActualizarActionPerformed
        autoriza = true;
        
        ExeSql Sql = new ExeSql();
        ResultSet Rs = null;
        DefaultTableModel Tmodel = (DefaultTableModel) GrillaOCP.getModel();
        DefaultTableModel TableModel2 = (DefaultTableModel) GrillaDatos.getModel();
        DefaultTableModel TableModel3 = (DefaultTableModel) GrillaOtros.getModel();
        DefaultTableModel TableModel4 = (DefaultTableModel) GrillaProductos.getModel();
        
        
        while(Tmodel.getRowCount()>0)
        Tmodel.removeRow(0);
        
        while(TableModel2.getRowCount()>0)
        TableModel2.removeRow(0);
        
        while(TableModel3.getRowCount()>0)
        TableModel3.removeRow(0);
        
        while(TableModel4.getRowCount()>0)
        TableModel4.removeRow(0);
        
     
//        
        try {
            Rs = Sql.Select("select oc.nrodocto, cast(oc.fcreacion as date) as fecha, oc.rut, p.nombre, oc.totalafecto,oc.totaliva,oc.totaldocto,oc.cuotas,oc.dias,case when par.nombre is null then '' else par.nombre end as tipopago\n" +
                            "from ctacteprv oc\n" +
                            "left join proveedor p on p.rut=oc.rut\n" +
                            "left join par_general par on par.tipo='TIPOPAGOPRV' and par.codigo=oc.tipopago\n" +
                            "where oc.tipdocto='OCP'\n" +
                            "and oc.estado=-1");
            
            for(int i = 0;Rs.next(); i++){
                
                Tmodel.addRow(new Object[]{ Rs.getInt("nrodocto"),
                                            Rs.getString("fecha"), 
                                            Rs.getString("rut"), 
                                            Rs.getString("nombre"),
                                            fmMain.FormatoTotal(Rs.getDouble("totalafecto")),
                                            fmMain.FormatoTotal(Rs.getDouble("totaliva")),
                                            fmMain.FormatoTotal(Rs.getDouble("totaldocto")),
                                            Rs.getInt("cuotas"),
                                            Rs.getString("dias"),
                                            Rs.getString("tipopago")
                                         });
            }

        } catch (SQLException e) {
            System.out.println(e);
        }finally{
            Sql.Close();
            autoriza = false;
        }
    }//GEN-LAST:event_btActualizarActionPerformed

    private void btAutorizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAutorizarActionPerformed
       
        if (sobre_stock){      
            
            if(fmMain.OkCancel("La Orden de Compra " + GrillaOCP.getValueAt(GrillaOCP.getSelectedRow(),0)+"\n"+
                               "contiene uno o mas Productos sin venta \n" +
                               "o tiene stock suficiente. \n"+
                               "¿Autorizar?")== JOptionPane.OK_OPTION){
            
                System.out.println("APRETE LA OPCION ACEPTAR!!");
                
            }else{
                sobre_stock = false;
                return;
            }
        
        }
        
        if(fmMain.OkCancel("Autorizar Orden de Compra " + GrillaOCP.getValueAt(GrillaOCP.getSelectedRow(),0))== JOptionPane.OK_OPTION){
            ExeSql Sql = new ExeSql();
            try {
                Sql.ExeSql("update ctacteprv \n" +
                            "set estado=-3\n" +
                            "where tipdocto='OCP'\n" +
                            "and nrodocto=" + GrillaOCP.getValueAt(GrillaOCP.getSelectedRow(),0).toString());
                Sql.Commit();
                fmMain.Mensaje("Autorizado");
                autoriza = true;
                eliminar(GrillaOCP.getSelectedRow());
                
            } catch (Exception e) {
//                System.out.println(e.getMessage());
                    JOptionPane.showMessageDialog(null,"Error: "+e);
            } finally{
                Sql.Close();
                //btActualizar.doClick();
            }
            
        }
            
    }//GEN-LAST:event_btAutorizarActionPerformed

     private void eliminar(int fila){
    
        DefaultTableModel Tmodel = (DefaultTableModel) GrillaOCP.getModel();
        DefaultTableModel TableModel2 = (DefaultTableModel) GrillaDatos.getModel();
        DefaultTableModel TableModel3 = (DefaultTableModel) GrillaOtros.getModel();
        DefaultTableModel TableModel4 = (DefaultTableModel) GrillaProductos.getModel();
  
        Tmodel.removeRow(fila);
        
        while(TableModel2.getRowCount()>0)
            TableModel2.removeRow(0);
        
        while(TableModel3.getRowCount()>0)
            TableModel3.removeRow(0);
        
        while(TableModel4.getRowCount()>0)
            TableModel4.removeRow(0);
        
      
        autoriza = false;
    }
    
    
    private void btRechazarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRechazarActionPerformed
        
        if(fmMain.OkCancel("Rechazar Orden de Compra " + GrillaOCP.getValueAt(GrillaOCP.getSelectedRow(),0))== JOptionPane.OK_OPTION){
            ExeSql Sql = new ExeSql();
            try {
                Sql.ExeSql("update ctacteprv \n" +
                           "set estado=-2\n" +
                           "where tipdocto='OCP'\n" +
                           "and nrodocto=" + GrillaOCP.getValueAt(GrillaOCP.getSelectedRow(),0).toString());
                Sql.Commit();
                fmMain.Mensaje("Rechazado");
                btActualizar.doClick();
            } catch (Exception e) {
//                System.out.println(e.getMessage());
                    JOptionPane.showMessageDialog(null,"Error: "+e);
            } finally{
                Sql.Close();
            }
            
        }
    }//GEN-LAST:event_btRechazarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        pfProductos Pro = new pfProductos();
        Pro.setOpaque(false);
        pnPestanas.addTab("Producto", Pro);
        PanelTab btc = new PanelTab(pnPestanas, 0);
        pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(Pro), btc);
        pnPestanas.setSelectedIndex(pnPestanas.getTabCount() - 1);
        Pro.txSku.requestFocus();
        Pro.CargaProducto(GrillaProductos.getValueAt(GrillaProductos.getSelectedRow(), 0).toString().trim());
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        pfProductos Pro = new pfProductos();
        Pro.setOpaque(false);
        pnPestanas.addTab("Producto", Pro);
        PanelTab btc = new PanelTab(pnPestanas, 0);
        pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(Pro), btc);
        pnPestanas.setSelectedIndex(pnPestanas.getTabCount() - 1);
        Pro.txSku.requestFocus();
        Pro.CargaProducto(GrillaOtros.getValueAt(GrillaOtros.getSelectedRow(), 0).toString().trim());
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void GrillaOCPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaOCPMouseClicked
        if(evt.getClickCount()==2){
            pfNPProveedor PrvOC = new pfNPProveedor();
            PrvOC.setOpaque(false);
            pnPestanas.addTab("OC Proveedor", PrvOC);
            PanelTab btc=new PanelTab(pnPestanas,0);
            pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(PrvOC), btc);
            pnPestanas.setSelectedIndex(pnPestanas.getTabCount()-1);
            PrvOC.AbrirOCP(GrillaOCP.getValueAt(GrillaOCP.getSelectedRow(), 0).toString().trim());
        }
    }//GEN-LAST:event_GrillaOCPMouseClicked
    private void CargaProductos(int Numero){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        ExeSqlLuvaly luv = new ExeSqlLuvaly();
       
        
        ResultSet producto = null;
        
        
        double Margen;
        DefaultTableModel TableModel  = (DefaultTableModel) GrillaProductos.getModel();
        DefaultTableModel TableModel2 = (DefaultTableModel) GrillaDatos.getModel();
        DefaultTableModel TableModel3 = (DefaultTableModel) GrillaOtros.getModel();
        
        while(TableModel.getRowCount()>0)
              TableModel.removeRow(0);
        
        while(TableModel2.getRowCount()>0)
              TableModel2.removeRow(0);
        
        while(TableModel3.getRowCount()>0)
              TableModel3.removeRow(0);
        
        try {
            
            Rs = Sql.Select("select d.sku,p.nombre, u.unidad, d.cantidad,d.valorunitario,d.totallinea, (select sp_get_inventarrio_sin_metros from sp_get_inventarrio_sin_metros(d.sku)) as stock,i.ocp,i.occ, p.valultcompra,p.pventa,\n" +
                            "\n" +
                            "(select sum(cd.cantidad) \n" +
                            "from ctacteclidet cd \n" +
                            "join ctactecli cc on cc.tipdocto=cd.tipdocto and cc.nrodocto=cd.nrodocto and cc.femision > current_date - 90 \n" +
                            "where cd.sku=d.sku and cd.tipdocto in ('FAC','FEC','FMC')) as Cant,\n" +
                            "\n" +
                            "(select count(cd.*) \n" +
                            "from ctacteclidet cd \n" +
                            "join ctactecli cc on cc.tipdocto=cd.tipdocto and cc.nrodocto=cd.nrodocto and cc.femision > current_date - 90 \n" +
                            "where cd.sku=d.sku and cd.tipdocto in ('FAC','FEC','FMC'))as cont, case when p.display is null then 0 else p.display end as display\n" +
                            "\n" +
                            "from ctacteprvdet d\n" +
                            "left join producto p on p.sku=d.sku\n" +
                            "left join par_unidad u on p.unidad=u.codigo\n" +
                            "left join inventario i on i.sku=d.sku \n" +
                            "\n" +
                            "where d.tipdocto='OCP'\n" +
                            "and d.nrodocto=" + Numero);
            
            
            
            
            
            
            while(Rs.next()){
                   
                if(Rs.getInt("pventa") == 0){
                    Margen=0;
                }
                else{
                    Margen = (Rs.getDouble("pventa") - Rs.getDouble("valorunitario"))*100/Rs.getDouble("pventa");
                }
                
              
                producto =  luv.Select("select p.nombre,trim(u.unidad) as unidad, u.um, case when p.display is null then 0 else p.display end as display from producto p \n"
                              + "LEFT JOIN par_unidad u ON u.codigo=p.unidad\n "
                              + "where p.sku = '"+Rs.getString("sku").trim()+"'");
                producto.next();
                
                TableModel.addRow(new Object[]{   Rs.getString("sku").trim(), 
                                                  producto.getString("nombre").trim(), 
                                                  producto.getString("unidad").trim(),
                                                    //fmMain.FormatoNumero(Rs.getDouble("cantidad")),
                                                  Rs.getDouble("cantidad"),
                                                  fmMain.FormatoTotal(Rs.getDouble("valorunitario")),
                                                  (int) Margen,
                                                  fmMain.FormatoTotal(Rs.getDouble("totallinea")),
                                                  producto.getString("display").trim(),
                                             });
                 
                TableModel2.addRow(new Object[]{  Rs.getString("stock").trim(), 
                                                  Rs.getString("ocp").trim(), 
                                                  Rs.getString("occ").trim(),
                                                  Rs.getInt("cant"),
                                                  Rs.getInt("Cont"),
                                                  Rs.getDouble("valultcompra"),
                                                  Rs.getDouble("pventa")
                                             });
                 
                 
            }
            
            GrillaProductos.setDefaultRenderer(Object.class, new Elrender()); 
            GrillaProductos.repaint();
             
           
        
        
            //Carga Otros productos del proveedor
            Rs = Sql.Select("select p.sku,p.nombre,u.unidad,p.valultcompra,i.stock,i.ocp,i.occ,sum(cd.cantidad) as cant,count(cd.*) as cont\n" +
                            "from producto p\n" +
                            "left join par_unidad u on p.unidad=u.codigo\n" +
                            "left join inventario i on p.sku=i.sku\n" +
                            "left join ctacteclidet cd on i.sku=cd.sku and cd.tipdocto='FAC'\n" +
                            "left join ctactecli cc on cd.rut=cc.rut and cd.nrodocto=cc.nrodocto and cd.tipdocto=cc.tipdocto and cc.femision> current_date - 90\n" +
                            "where p.rutultprv = (select rut from ctacteprv where tipdocto='OCP' and nrodocto="+ Numero +")\n" +
                            "and cc.femision is not null\n" +
                            "and p.sku not in (select sku from ctacteprvdet where tipdocto='OCP' and nrodocto="+ Numero +")\n" +
                            "group by p.sku,p.nombre,u.unidad,i.stock,i.ocp,i.occ\n" +
                            "order by cant desc");
            while(Rs.next()){
                producto =  luv.Select("select p.nombre,trim(u.unidad) as unidad, u.um from producto p \n"
                              + "LEFT JOIN par_unidad u ON u.codigo=p.unidad\n "
                              + "where p.sku = '"+Rs.getString("sku").trim()+"'");
                producto.next();
            TableModel3.addRow(new Object[]{    Rs.getString("sku").trim(), 
                                                    producto.getString("nombre").trim(), 
                                                    producto.getString("unidad").trim(),
                                                    Rs.getDouble("valultcompra"),
                                                    Rs.getInt("stock"),
                                                    Rs.getInt("ocp"),
                                                    Rs.getInt("occ"),
                                                    Rs.getDouble("cant"),
                                                    Rs.getDouble("cont")
                                             });
            }
            GrillaOtros.setDefaultRenderer(Object.class, new Utilidades.TableCellRendererColor_1());
            GrillaOtros.repaint();
            
        } catch (SQLException e) {
            System.out.println(e);
            Logger.getLogger(pfControlInventario.class.getName()).log(Level.SEVERE, null, e);
        }finally{
            Sql.Close();
        }
        
    }
    
    class Elrender extends DefaultTableCellRenderer {
         
        @Override
        public Component getTableCellRendererComponent(JTable tabla, Object valor, boolean isSelected, boolean hasFocus, int fila, int columna) {
        
            Component componente = super.getTableCellRendererComponent(tabla,valor,isSelected, hasFocus, fila, columna);
         
        
          
            double stock_dif = (Double.parseDouble(tabla.getValueAt(fila,3).toString()) + Double.parseDouble(GrillaDatos.getValueAt(fila, 0).toString()))
                                + Double.parseDouble(GrillaDatos.getValueAt(fila, 2).toString());
                       
            double porcentaje = (stock_dif / Double.parseDouble(GrillaDatos.getValueAt(fila, 2).toString()))*100;
           
            if (porcentaje == 0 || porcentaje > 0 ){
            
                porcentaje = porcentaje * 1;
            
            }else if (porcentaje < 0){
             
                porcentaje = porcentaje * -1;
            }
            
            if(porcentaje >= 40){
                 
                sobre_stock = true;
                componente.setForeground(Color.white);
                componente.setBackground(Color.red);  
            
            }else{
            
                if (!sobre_stock){
                
                    sobre_stock = false;
                }
                
                componente.setForeground(Color.black);
                componente.setBackground(Color.white); 
            }     
             
            return componente;
        }
        
    } 
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable GrillaDatos;
    private javax.swing.JTable GrillaOCP;
    private javax.swing.JTable GrillaOtros;
    private javax.swing.JTable GrillaProductos;
    private javax.swing.JButton btActualizar;
    private javax.swing.JButton btAutorizar;
    private javax.swing.JButton btRechazar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
