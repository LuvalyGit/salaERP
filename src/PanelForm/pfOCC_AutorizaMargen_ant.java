/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Conexion.ExeSqlLuvaly;
import Formularios.fmMain;
import static Formularios.fmMain.pnPestanas;
import static PanelForm.pfGDCliente.GetCol;
import Utilidades.PanelTab;
import java.sql.ResultSet;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David Alcaman
 */
public class pfOCC_AutorizaMargen_ant extends javax.swing.JPanel {

    /**
     * Creates new form pfOCC_AutorizaMargen
     */
    public pfOCC_AutorizaMargen_ant() {
        initComponents();
        CargaDato();
        Grilla.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            //Se ejecuta autom치ticamente cada vez que se hace una nueva selecci칩n. 
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(Grilla.getSelectedRowCount()>0)
                   CargaDetalle();
                    
            }

        });
        GrillaDet.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            //Se ejecuta autom치ticamente cada vez que se hace una nueva selecci칩n. 
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(GrillaDet.getSelectedRowCount()>0)
                   CargaCompras();
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jpAbrirOrden = new javax.swing.JPopupMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jpAbrirProducto = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        btActualizar = new javax.swing.JButton();
        rbPorAutorizar = new javax.swing.JRadioButton();
        rbAutorizadas = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        lblMargen_orden = new javax.swing.JLabel();
        btAutorizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        GrillaDet = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lbMargen = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        GrillaCompra = new javax.swing.JTable();

        jMenuItem2.setText("Abrir Orden");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jpAbrirOrden.add(jMenuItem2);

        jMenuItem1.setText("Ficha Producto");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jpAbrirProducto.add(jMenuItem1);

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setMaximumSize(new java.awt.Dimension(32767, 0));
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        btActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/refresh16.png"))); // NOI18N
        btActualizar.setText("Actualizar");
        btActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btActualizar);

        buttonGroup1.add(rbPorAutorizar);
        rbPorAutorizar.setSelected(true);
        rbPorAutorizar.setText("Por Autorizar");
        jPanel1.add(rbPorAutorizar);

        buttonGroup1.add(rbAutorizadas);
        rbAutorizadas.setText("Autorizadas");
        rbAutorizadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAutorizadasActionPerformed(evt);
            }
        });
        jPanel1.add(rbAutorizadas);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Margen Orden:");
        jPanel1.add(jLabel3);

        lblMargen_orden.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblMargen_orden.setText("0");
        jPanel1.add(lblMargen_orden);

        btAutorizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/ok_16.png"))); // NOI18N
        btAutorizar.setText("Autorizar");
        btAutorizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAutorizarActionPerformed(evt);
            }
        });
        jPanel1.add(btAutorizar);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 899;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(jPanel1, gridBagConstraints);

        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "RUT", "NOMBRE", "CODIGO OC", "ORDEN", "FECHA", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.setComponentPopupMenu(jpAbrirOrden);
        Grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaMouseClicked(evt);
            }
        });
        Grilla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                GrillaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(75);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(75);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(75);
            Grilla.getColumnModel().getColumn(1).setMinWidth(400);
            Grilla.getColumnModel().getColumn(1).setPreferredWidth(400);
            Grilla.getColumnModel().getColumn(1).setMaxWidth(400);
            Grilla.getColumnModel().getColumn(2).setMinWidth(80);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(3).setMinWidth(120);
            Grilla.getColumnModel().getColumn(3).setPreferredWidth(120);
            Grilla.getColumnModel().getColumn(3).setMaxWidth(120);
            Grilla.getColumnModel().getColumn(4).setMinWidth(75);
            Grilla.getColumnModel().getColumn(4).setPreferredWidth(75);
            Grilla.getColumnModel().getColumn(4).setMaxWidth(75);
            Grilla.getColumnModel().getColumn(5).setMinWidth(0);
            Grilla.getColumnModel().getColumn(5).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(5).setMaxWidth(0);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1327;
        gridBagConstraints.ipady = 188;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        add(jScrollPane1, gridBagConstraints);

        GrillaDet.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        GrillaDet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "CODIGO", "NOMBRE", "UNIDAD", "CANTIDAD", "$ VENTA", "$ ULT.COMPRA", "% MARGEN"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GrillaDet.setComponentPopupMenu(jpAbrirProducto);
        jScrollPane2.setViewportView(GrillaDet);
        if (GrillaDet.getColumnModel().getColumnCount() > 0) {
            GrillaDet.getColumnModel().getColumn(0).setMinWidth(70);
            GrillaDet.getColumnModel().getColumn(0).setPreferredWidth(70);
            GrillaDet.getColumnModel().getColumn(0).setMaxWidth(70);
            GrillaDet.getColumnModel().getColumn(1).setMinWidth(300);
            GrillaDet.getColumnModel().getColumn(1).setPreferredWidth(300);
            GrillaDet.getColumnModel().getColumn(1).setMaxWidth(300);
            GrillaDet.getColumnModel().getColumn(2).setMinWidth(70);
            GrillaDet.getColumnModel().getColumn(2).setPreferredWidth(70);
            GrillaDet.getColumnModel().getColumn(2).setMaxWidth(70);
            GrillaDet.getColumnModel().getColumn(3).setMinWidth(75);
            GrillaDet.getColumnModel().getColumn(3).setPreferredWidth(75);
            GrillaDet.getColumnModel().getColumn(3).setMaxWidth(75);
            GrillaDet.getColumnModel().getColumn(4).setMinWidth(75);
            GrillaDet.getColumnModel().getColumn(4).setPreferredWidth(75);
            GrillaDet.getColumnModel().getColumn(4).setMaxWidth(75);
            GrillaDet.getColumnModel().getColumn(5).setMinWidth(75);
            GrillaDet.getColumnModel().getColumn(5).setPreferredWidth(75);
            GrillaDet.getColumnModel().getColumn(5).setMaxWidth(75);
            GrillaDet.getColumnModel().getColumn(6).setMinWidth(75);
            GrillaDet.getColumnModel().getColumn(6).setPreferredWidth(75);
            GrillaDet.getColumnModel().getColumn(6).setMaxWidth(75);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 740;
        gridBagConstraints.ipady = 201;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 11, 0);
        add(jScrollPane2, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("M칤nimo Margen Permitido:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        add(jLabel1, gridBagConstraints);

        lbMargen.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbMargen.setForeground(new java.awt.Color(204, 0, 0));
        lbMargen.setText("jLabel2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        add(lbMargen, gridBagConstraints);

        GrillaCompra.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        GrillaCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "FECHA", "PROVEEDOR", "CANTIDAD", "COSTO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(GrillaCompra);
        if (GrillaCompra.getColumnModel().getColumnCount() > 0) {
            GrillaCompra.getColumnModel().getColumn(0).setMinWidth(80);
            GrillaCompra.getColumnModel().getColumn(0).setPreferredWidth(80);
            GrillaCompra.getColumnModel().getColumn(0).setMaxWidth(80);
            GrillaCompra.getColumnModel().getColumn(1).setMinWidth(250);
            GrillaCompra.getColumnModel().getColumn(1).setPreferredWidth(300);
            GrillaCompra.getColumnModel().getColumn(1).setMaxWidth(350);
            GrillaCompra.getColumnModel().getColumn(2).setMinWidth(75);
            GrillaCompra.getColumnModel().getColumn(2).setPreferredWidth(75);
            GrillaCompra.getColumnModel().getColumn(2).setMaxWidth(75);
            GrillaCompra.getColumnModel().getColumn(3).setMinWidth(75);
            GrillaCompra.getColumnModel().getColumn(3).setPreferredWidth(75);
            GrillaCompra.getColumnModel().getColumn(3).setMaxWidth(85);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 544;
        gridBagConstraints.ipady = 201;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 11, 0);
        add(jScrollPane3, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    
    private void CargaDato(){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        
        try {
            Rs = Sql.Select("select valor\n" +
                            "from par_general\n" +
                            "where tipo='UMBRALDEMARGEN'");
            Rs.next();
            lbMargen.setText(Rs.getString("valor").trim() + "%");
        } catch (Exception e) {
        }finally{
            Sql.Close();
        }
    }
    private void CargaCompras(){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel Model = (DefaultTableModel) GrillaCompra.getModel();
        
        fmMain.LimpiaGrilla(Model);
        
        try {
            Rs = Sql.Select("select cast(p.femision as date) as fecha, pr.nombre,d.valorunitario,d.cantidad \n" +
                            "from ctacteprvdet d\n" +
                            "left join ctacteprv p on p.rut=d.rut and p.tipdocto=d.tipdocto and p.nrodocto=d.nrodocto\n" +
                            "left join proveedor pr on p.rut=pr.rut\n" +
                            "where d.tipdocto='FAP'\n" +
                            "and d.sku='"+ GrillaDet.getValueAt(GrillaDet.getSelectedRow(), 0).toString().trim() +"' order by p.femision");
            while(Rs.next()){
                Model.addRow(new Object[]{
                    Rs.getString("fecha").trim(),
                    Rs.getString("nombre").trim(),
                    Rs.getDouble("cantidad"),
                    Rs.getDouble("valorunitario")
                });
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }
    }
    private void CargaDetalle(){
        ExeSql Sql = new ExeSql();
        ExeSqlLuvaly luv = new ExeSqlLuvaly();
        ResultSet Rs, producto;
        DefaultTableModel ModelDet = (DefaultTableModel) GrillaDet.getModel();
        fmMain.LimpiaGrilla(ModelDet);
        
        try {
            Rs = Sql.Select("select d.sku, p.nombre,u.unidad,d.cantidad,d.valorunitario," +
                            "CASE WHEN p.valultcompra = 0 or p.valultcompra is null then p.costofinal\n" +
                            "else p.valultcompra end as costofinal\n" +
                            "," +
                            "case when p.valultcompra = 0 or p.valultcompra is null then (d.valorunitario-p.costofinal)*100/d.valorunitario\n" +
                            "else (d.valorunitario-p.valultcompra)*100/d.valorunitario end as margen\n" +
                            "from occhdet d\n" +
                            "left join producto p on d.sku=p.sku\n" +
                            "left join par_unidad u on u.codigo=p.unidad\n" +
                            "where d.codigo_oc="+ Grilla.getValueAt(Grilla.getSelectedRow(), 2).toString().trim() +"\n" +
                            "and d.rut="+Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString().trim() +"\n" +
                            "and d.orden='"+ Grilla.getValueAt(Grilla.getSelectedRow(), 3).toString().trim() +"' and d.separado > 0");
            while(Rs.next()){
                producto =  luv.Select("select p.nombre,trim(u.unidad) as unidad, u.um from producto p \n"
                              + "LEFT JOIN par_unidad u ON u.codigo=p.unidad\n "
                              + "where p.sku = '"+Rs.getString("sku").trim()+"'");
                producto.next();
                ModelDet.addRow(new Object[]{
                        Rs.getString("sku").trim(),
                        producto.getString("nombre").trim(),
                        producto.getString("unidad").trim(),
                        Rs.getDouble("cantidad"),
                        Rs.getDouble("valorunitario"),
                        Rs.getDouble("costofinal"),
                        Rs.getInt("margen")
                        
                });
            }
        } catch (Exception e) {
        }finally{
            Sql.Close();
        }
    }
    private void btActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btActualizarActionPerformed

        actualizaDatos();
    }//GEN-LAST:event_btActualizarActionPerformed

    
    private void actualizaDatos(){
    
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel Model = (DefaultTableModel)Grilla.getModel();
        DefaultTableModel ModelDet = (DefaultTableModel) GrillaDet.getModel();
        DefaultTableModel ModelCompra = (DefaultTableModel) GrillaCompra.getModel();
        
        fmMain.LimpiaGrilla(Model);
        fmMain.LimpiaGrilla(ModelDet);
        fmMain.LimpiaGrilla(ModelCompra);
       
        try {
            if(rbPorAutorizar.isSelected())
                Rs = Sql.Select("select a.rut,c.nombre,a.codigo_oc,a.orden,CAST(oc.femision as date) as fecha, a.id\n" +
                            "from autorizaciones a\n" +
                            "left join cliente c on a.rut=c.rut\n" +
                            "left join occh oc on oc.rut=a.rut and a.codigo_oc=oc.codigo_oc and a.orden=oc.orden\n" +
                            "where a.estado=0 and tipo = 'AUTORIZAMARGENOCC'");
            else
                Rs = Sql.Select("select a.rut,c.nombre,a.codigo_oc,a.orden,CAST(oc.femision as date) as fecha,a.id\n" +
                        "from autorizaciones a\n" +
                        "left join cliente c on a.rut=c.rut\n" +
                        "left join occh oc on oc.rut=a.rut and a.codigo_oc=oc.codigo_oc and a.orden=oc.orden\n" +
                        "where a.estado=3 and tipo = 'AUTORIZAMARGENOCC'");
            while(Rs.next()){
                Model.addRow(new Object[]{
                    Rs.getString("rut").trim(),
                    Rs.getString("nombre").trim(),
                    Rs.getString("codigo_oc").trim(),
                    Rs.getString("orden").trim(),
                    Rs.getString("fecha").trim(),
                    Rs.getString("id").trim()
                });
            }
            
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }finally{
            Sql.Close();
        }
}
    
    private void btAutorizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAutorizarActionPerformed
        ExeSql Sql = new ExeSql();
        
        try {
            Sql.ExeSql("update autorizaciones set estado=3, autoriza=user where id=" + Grilla.getValueAt(Grilla.getSelectedRow(), 5).toString().trim());
            Sql.Commit();
            fmMain.Mensaje("Orden Autorizada");
            actualizaDatos();
        } catch (Exception e) {
            System.out.println(e.getMessage());
            fmMain.Mensaje("Ocurrio un error");
        } finally{
            Sql.Close();
        }
    }//GEN-LAST:event_btAutorizarActionPerformed

    private void GrillaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GrillaKeyPressed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_GrillaKeyPressed

    private void GrillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMouseClicked
        // TODO add your handling code here:
        trae_margen();
    }//GEN-LAST:event_GrillaMouseClicked

    private void rbAutorizadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbAutorizadasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbAutorizadasActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        String SKU = GrillaDet.getValueAt(GrillaDet.getSelectedRow(), 0).toString().trim();      
        pfProductos Pro = new pfProductos();
        pnPestanas.addTab("Ficha Producto", Pro);
        PanelTab btc=new PanelTab(pnPestanas,0);
        pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(Pro), btc);
        pnPestanas.setSelectedIndex(pnPestanas.getTabCount()-1);
        Pro.txSku.requestFocus();
        Pro.txSku.setText(SKU);
        Pro.btIr.doClick();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        String codigo_oc = Grilla.getValueAt(Grilla.getSelectedRow(), 2).toString().trim(); 
        String orden = Grilla.getValueAt(Grilla.getSelectedRow(), 3).toString().trim(); 
        String rut = Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString().trim(); 
        pfOCCliente Pro = new pfOCCliente();
        pnPestanas.addTab("Orden Compra Cliente", Pro);
        PanelTab btc=new PanelTab(pnPestanas,0);
        pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(Pro), btc);
        pnPestanas.setSelectedIndex(pnPestanas.getTabCount()-1);
        Pro.AbrirOCCDirecta(codigo_oc , orden);
        Pro.CargaBlog();
//        Pro.txRut.setText(rut);
//        Pro.txSku.requestFocus();
//        Pro.txSku.setText(SKU);btAbrir
//        Pro.btIr.doClick();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    
    private void trae_margen(){
        
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
       String rut="",codigo_oc="";
       String orden ="";
        
        rut = (String) Grilla.getValueAt(Grilla.getSelectedRow(),0);
        codigo_oc =  (String) Grilla.getValueAt(Grilla.getSelectedRow(), 2);       
        orden =(String) Grilla.getValueAt(Grilla.getSelectedRow(),3);
       
        try {

                Rs = Sql.Select("select ROUND (fn_margen_orden (" +  rut + "," +  codigo_oc + ",'" + orden + "'),2) as Margen");
                
                if (Rs.next()){
                    lblMargen_orden.setText( Rs.getString("Margen").trim());
                }
                else{
                    lblMargen_orden.setText( "Sin Margen");
                }
                                
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }finally{
            Sql.Close();
        }    
            
            
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla;
    private javax.swing.JTable GrillaCompra;
    private javax.swing.JTable GrillaDet;
    private javax.swing.JButton btActualizar;
    private javax.swing.JButton btAutorizar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu jpAbrirOrden;
    private javax.swing.JPopupMenu jpAbrirProducto;
    private javax.swing.JLabel lbMargen;
    private javax.swing.JLabel lblMargen_orden;
    private javax.swing.JRadioButton rbAutorizadas;
    private javax.swing.JRadioButton rbPorAutorizar;
    // End of variables declaration//GEN-END:variables
}
