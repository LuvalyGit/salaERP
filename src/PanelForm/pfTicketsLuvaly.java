/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Formularios.fmMain;
import Utilidades.Ftp;
import Utilidades.SubeFTP;
import java.awt.Color;
import java.awt.Component;
import java.awt.Desktop;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;


/**
 *
 * @author infornatica
 */
public class pfTicketsLuvaly extends javax.swing.JPanel {

    /**
     * Creates new form pfTicketsLuvaly
     */
    public pfTicketsLuvaly() {
        initComponents();
        GetUser();
        CargaMensajesPendientes();
        
        
      
    }


    public void GetUser(){
        ExeSql sql = new ExeSql();
        String Query = "select pg.usename, usu.nombre nombre, pcc.nombre area\n" +
                        "from pg_user pg \n" +
                        "left join usuario usu on usu.usuario = UPPER(pg.usename)\n" +
                        "left join personal p on p.usuario = usu.usuario\n" +
                        "left join personal_ccostos pc on pc.rut = p.rut\n" +
                        "left join pccostos pcc on pcc.id = pc.ccosto\n" +
                        "where pg.usename='"+fmMain.GetUsuario().toLowerCase()+"'";
        ResultSet rs = null;
        try {
            rs = sql.Select(Query);
            for(int i = 0;rs.next();i++){
                label_usuario.setText(rs.getString("nombre"));
                label_area.setText(rs.getString("area"));
            }

            String Query_Tickets = "select id,estado, fecha_creacion, asunto, "
                    + "case when adjunto = '0' then 'Sin adjunto' else 'Tiene Adjunto' end as adjunto\n"
                    + " from tickets_luvaly where remitente = '"+fmMain.GetUsuario()+"'\n"
                    + "order by fecha_creacion desc";
            rs = sql.Select(Query_Tickets);
            DefaultTableModel model = (DefaultTableModel) tickets_tabla.getModel();
            while(model.getRowCount()>0){
                model.removeRow(0);
            }
            String estado = "";
            for(int i = 0; rs.next();i++){
                if(rs.getString("estado").equals("0")){
                    estado = "Abierto";
                }
                if(rs.getString("estado").equals("1")){
                    estado = "Pendiente";
                }
                if(rs.getString("estado").equals("2")){
                    estado = "Finalizado";
                }
                if(rs.getString("estado").equals("3")){
                    estado = "Cerrado";
                }
                model.addRow(new Object[]{
                    rs.getString("id"),
                    estado,
                    rs.getString("fecha_creacion"),
                    rs.getString("asunto"),
                    rs.getString("adjunto")
                });
            }
            if(tickets_tabla.getRowCount()>0){
                tickets_tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
                
                tickets_tabla.setRowSelectionInterval(0, 0);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(pfTicketsLuvaly.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        label_usuario = new javax.swing.JLabel();
        label_area = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tickets_tabla = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        detalle_ticket = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        ticket_mensaje = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        remitente_detalle = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        destinatario_detalle = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        id_detalle = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        asunto_detalle = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        estado_detalle = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        prioridad_detalle = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tickets_recibidos = new javax.swing.JTable();

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Usuario", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 11))); // NOI18N

        label_usuario.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        label_usuario.setText("Usuario");

        label_area.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        label_area.setText("Área");

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Actualiza.png"))); // NOI18N
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel5.setText("Usuario:");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel6.setText("Área:");

        tickets_tabla.setAutoCreateRowSorter(true);
        tickets_tabla.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        tickets_tabla.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        tickets_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Estado", "Fecha", "Asunto", "Adjunto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tickets_tabla.setToolTipText("");
        tickets_tabla.setShowHorizontalLines(false);
        tickets_tabla.setShowVerticalLines(false);
        tickets_tabla.getTableHeader().setReorderingAllowed(false);
        tickets_tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tickets_tablaMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tickets_tabla);
        if (tickets_tabla.getColumnModel().getColumnCount() > 0) {
            tickets_tabla.getColumnModel().getColumn(0).setMinWidth(20);
            tickets_tabla.getColumnModel().getColumn(0).setPreferredWidth(50);
            tickets_tabla.getColumnModel().getColumn(0).setMaxWidth(80);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(label_usuario)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(label_area)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_usuario)
                            .addComponent(jLabel5)))
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_area)
                    .addComponent(jLabel6))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Detalle Ticket", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 11))); // NOI18N

        detalle_ticket.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Mensajes"));
        detalle_ticket.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        detalle_ticket.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane3.setViewportView(detalle_ticket);

        ticket_mensaje.setColumns(20);
        ticket_mensaje.setRows(5);
        ticket_mensaje.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Enviar"));
        jScrollPane4.setViewportView(ticket_mensaje);

        jButton4.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos22/Go.png"))); // NOI18N
        jButton4.setText("Enviar");
        jButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/ok_16.png"))); // NOI18N
        jButton5.setText("Finalizar Ticket");
        jButton5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Actualiza.png"))); // NOI18N
        jButton6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel8.setText("De:");

        remitente_detalle.setBackground(java.awt.Color.black);
        remitente_detalle.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        remitente_detalle.setText("\"\"");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel9.setText("Para:");

        destinatario_detalle.setBackground(java.awt.Color.black);
        destinatario_detalle.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        destinatario_detalle.setText("\"\"");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel7.setText("Id Ticket:");

        id_detalle.setBackground(java.awt.Color.black);
        id_detalle.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        id_detalle.setText("0");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel10.setText("Asunto:");

        asunto_detalle.setBackground(java.awt.Color.black);
        asunto_detalle.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        asunto_detalle.setText("\"\"");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel11.setText("Estado:");

        estado_detalle.setBackground(java.awt.Color.black);
        estado_detalle.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        estado_detalle.setText("\"\"");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel12.setText("Prioridad:");

        prioridad_detalle.setBackground(java.awt.Color.black);
        prioridad_detalle.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        prioridad_detalle.setText("\"\"");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(remitente_detalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(estado_detalle)
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(asunto_detalle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                        .addComponent(destinatario_detalle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(id_detalle, javax.swing.GroupLayout.Alignment.LEADING)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(prioridad_detalle)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(id_detalle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(remitente_detalle)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(destinatario_detalle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(asunto_detalle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(estado_detalle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(prioridad_detalle))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton2.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Agregar.png"))); // NOI18N
        jButton2.setText("Cargar Archivo");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos22/checklist22.png"))); // NOI18N
        jButton1.setText("Ver Archivo");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(342, 342, 342))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(8, 8, 8))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Recibidos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 11))); // NOI18N

        tickets_recibidos.setAutoCreateRowSorter(true);
        tickets_recibidos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        tickets_recibidos.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        tickets_recibidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Estado", "Remitente", "Fecha", "Adjunto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tickets_recibidos.setToolTipText("");
        tickets_recibidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tickets_recibidosMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tickets_recibidos);
        if (tickets_recibidos.getColumnModel().getColumnCount() > 0) {
            tickets_recibidos.getColumnModel().getColumn(0).setMinWidth(20);
            tickets_recibidos.getColumnModel().getColumn(0).setPreferredWidth(50);
            tickets_recibidos.getColumnModel().getColumn(0).setMaxWidth(80);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    public void CargarTicket() {
        if((tickets_tabla.getRowCount()>0 && !tickets_tabla.getValueAt(tickets_tabla.getSelectedRow(), 0).toString().isEmpty()) ||
            tickets_recibidos.getRowCount()>0 && !tickets_recibidos.getValueAt(tickets_recibidos.getSelectedRow(), 0).toString().isEmpty()){
            String id = "";
            if(tickets_tabla.getSelectedRows().length>0){
                id = tickets_tabla.getValueAt(tickets_tabla.getSelectedRow(), 0).toString();
            }
            else if(tickets_recibidos.getSelectedRows().length>0){
                id = tickets_recibidos.getValueAt(tickets_recibidos.getSelectedRow(), 0).toString();
            }
            ExeSql sql = new ExeSql();
            ResultSet rs = null;
            String query = "select id, estado, remitente, destinatario, fecha_creacion, asunto, prioridad from tickets_luvaly where id = "+id+"";
            try {
                rs = sql.Select(query);
                rs.next();
                remitente_detalle.setText(rs.getString("remitente").trim());
                destinatario_detalle.setText(rs.getString("destinatario").trim());
                asunto_detalle.setText(rs.getString("asunto"));
                prioridad_detalle.setText(rs.getString("prioridad"));
                id_detalle.setText(rs.getString("id"));
                switch(rs.getString("estado")) {
                    case "0":
                        estado_detalle.setText("Abierto");
                        estado_detalle.setForeground(Color.blue);
                        break;
                    case "1":
                        estado_detalle.setText("Pendiente");
                        estado_detalle.setForeground(Color.green);
                        break;
                    case "2":
                        estado_detalle.setText("Completo");
                        estado_detalle.setForeground(Color.red);
                        break;
                    case "3":
                        estado_detalle.setText("Cerrado");
                        estado_detalle.setForeground(Color.red);
                        break;
                }
                
                remitente_detalle.setText(rs.getString("remitente"));
                CargaMensajes(id);
                
            } catch (SQLException ex) {
                Logger.getLogger(pfTicketsLuvaly.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else {
            JOptionPane.showMessageDialog(null,"Seleccione Ticket");
        }
    }
    
    private void tickets_tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tickets_tablaMouseClicked
        CargarTicket();
        jButton6.setEnabled(true);
        jButton1.setEnabled(true);
        jButton5.setEnabled(true);
        ListSelectionModel model = tickets_recibidos.getSelectionModel();
        model.removeSelectionInterval(0,tickets_recibidos.getRowCount());
    }//GEN-LAST:event_tickets_tablaMouseClicked

    private void CargaMensajes(String id) {
        String query = "select fecha, usuario, mensaje from tickets_mensaje where ticket = "+id+"";
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        try {
            rs = sql.Select(query);
            DefaultListModel<String> dlm = new DefaultListModel<String>();
            dlm.removeAllElements();
            for(int i = 0;rs.next();i++){
                dlm.addElement(rs.getString("fecha").trim()+" - "+rs.getString("usuario").trim()+"> "+rs.getString("mensaje").trim());
            }
            detalle_ticket.setModel(dlm);
        } catch (SQLException ex) {
            Logger.getLogger(pfTicketsLuvaly.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
//    
    private void CargaMensajesPendientes() {
        String query = "select ID, remitente, fecha_creacion, estado,case when adjunto = '0' then 'Sin adjunto' else 'Tiene Adjunto' end as adjunto from tickets_luvaly where destinatario = '"+fmMain.GetUsuario()+"'";
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        try {
            rs = sql.Select(query);
            DefaultTableModel model = (DefaultTableModel) tickets_recibidos.getModel();
            while(model.getRowCount()>0){
                model.removeRow(0);
            }
            String estado = "";
            for(int i = 0;rs.next();i++){
                if(rs.getString("estado").equals("0")){
                    estado = "Abierto";
                }
                if(rs.getString("estado").equals("1")){
                    estado = "Pendiente";
                }
                if(rs.getString("estado").equals("2")){
                    estado = "Completo";
                }
                if(rs.getString("estado").equals("3")){
                    estado = "Cerrado";
                }
                model.addRow(new Object[]{
                    
                    rs.getString("id"),
                    
                    estado,
                    rs.getString("remitente"),
                    rs.getString("fecha_creacion"),
                    rs.getString("adjunto")
                    
                });
            }
            if(tickets_recibidos.getRowCount()>0){
                tickets_recibidos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
                tickets_recibidos.setRowSelectionInterval(0, 0);
            }
            
           
        } catch (SQLException ex) {
            Logger.getLogger(pfTicketsLuvaly.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String id = id_detalle.getText();
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        try {
            rs = sql.Select("select estado from tickets_luvaly where id = "+id+"");
            
            for(int i = 0;rs.next();i++){
                if(rs.getString("estado").equals("2") || rs.getString("estado").equals("3")){
                    JOptionPane.showMessageDialog(null, "Ticket se encuentra finalizado.");
                    ticket_mensaje.setText("");
                }
                else {
                    int resultado = sql.ExeSqlInt("insert into tickets_mensaje (ticket,mensaje,usuario,fecha) values ("+id+",'"+ticket_mensaje.getText()+"','"+fmMain.GetUsuario().trim()+"',now())");
                    if(resultado>0){
                        JOptionPane.showMessageDialog(null, "Mensaje enviado.");
                        sql.Commit();
                        ticket_mensaje.setText("");
                    }
                    else {
                        JOptionPane.showMessageDialog(null, "Error al enviar el mensaje.");
                        ticket_mensaje.setText("");
                    }
                }
            }
            CargaMensajes(id);
            
        } catch (SQLException ex) {
            sql.Rollback();
            Logger.getLogger(pfTicketsLuvaly.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally {
            sql.Close();
        }
//        fmMain.jButton3.doClick();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String id = id_detalle.getText();
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        try {
            rs = sql.Select("select estado, destinatario from tickets_luvaly where id = "+id+"");
            rs.next();
            if(rs.getString("destinatario").equals(fmMain.GetUsuario().toUpperCase().toString())){
                if(rs.getString("estado").equals("2") || rs.getString("estado").equals("3")){
                    JOptionPane.showMessageDialog(null, "Ticket ya se encuentra completo.");
                }
                else {
                    int respuesta = JOptionPane.showConfirmDialog(null, "Desea cerrar ticket?");
                    if(respuesta==0){
                        int cambio = sql.ExeSqlInt("update tickets_luvaly set estado = 2 where id = "+id+"");
                        if(cambio>0){
                            JOptionPane.showMessageDialog(null, "Se completó ticket.");
                            CargarTicket(); 
                        }
                        else {
                            JOptionPane.showMessageDialog(null, "Ocurrió un error.");
                        }
                    }
                    else {
                        JOptionPane.showMessageDialog(null, "Operación cancelada.");
                    }
                }
            }
            else {
                JOptionPane.showMessageDialog(null, "Solo el destinatario puede finalizarlo.");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(pfTicketsLuvaly.class.getName()).log(Level.SEVERE, null, ex);
        }
//        fmMain.jButton3.doClick();
    }//GEN-LAST:event_jButton5ActionPerformed

    
    
    private void tickets_recibidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tickets_recibidosMouseClicked
        
        jButton6.setEnabled(true);
        ListSelectionModel model = tickets_tabla.getSelectionModel();
        model.removeSelectionInterval(0,tickets_tabla.getRowCount());
        String id = tickets_recibidos.getValueAt(tickets_recibidos.getSelectedRow(), 0).toString();
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        String query = "select id, estado, remitente, destinatario, fecha_creacion, asunto, prioridad from tickets_luvaly where id = "+id+"";
        try {
            rs = sql.Select(query);
            rs.next();
            remitente_detalle.setText(rs.getString("remitente").trim());
            destinatario_detalle.setText(rs.getString("destinatario").trim());
            asunto_detalle.setText(rs.getString("asunto"));
            prioridad_detalle.setText(rs.getString("prioridad"));
            id_detalle.setText(rs.getString("id"));
            switch(rs.getString("estado")) {
                case "0":
                    estado_detalle.setText("Creado");
                    estado_detalle.setForeground(Color.blue);
                    break;
                case "1":
                    estado_detalle.setText("Pendiente");
                    estado_detalle.setForeground(Color.green);
                    break;
                case "2":
                    estado_detalle.setText("Finalizado");
                    estado_detalle.setForeground(Color.red);
                    break;
                case "3":
                    estado_detalle.setText("Cerrado");
                    estado_detalle.setForeground(Color.red);
                    break;
            }
        
            remitente_detalle.setText(rs.getString("remitente"));
            CargaMensajes(id);
        } catch (SQLException ex) {
            Logger.getLogger(pfTicketsLuvaly.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tickets_recibidosMouseClicked

    
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        CargarTicket();        // TODO add your handling code here:
//        fmMain.jButton3.doClick();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        GetUser();
//        CargaMensajesPendientes();
//        fmMain.jButton3.doClick();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String id = id_detalle.getText();
        String ruta ="", Query ="";
        File f = new File("");
        ExeSql sql = new ExeSql();
        ResultSet rs = null;
        
        try {
            rs = sql.Select("select adjunto from tickets_luvaly where id = "+id+"");
            rs.first();
            System.out.println(rs.getString("adjunto")+ " _adjunto");
            if(rs.getString("adjunto").equals("0")){
                String sistema = System.getProperty("os.name").toLowerCase();
                if (sistema.contains("win"))
                {
                    ruta = "c:/fotos2/tickets/";
                    f = new File(ruta.substring(0,ruta.length()-1));
                }
                else{
                    ruta = "/fotos2/tickets/";
                }

                if(!f.isDirectory()) {
                    String newFolder = ruta; //cualquierCarpeta es el nombre de la Carpeta que vamos a crear

                    File myNewFolder = new File(newFolder);
                    myNewFolder.mkdirs(); //creamos la carpeta
                }
                else
                {
                    System.out.println("La carpeta ya estaba creada");
                }
                JFileChooser j=new JFileChooser();
                j.setFileSelectionMode(JFileChooser.FILES_ONLY);//solo archivos y no carpetas
                int estado=j.showOpenDialog(null);
                if(estado== JFileChooser.APPROVE_OPTION){


                    String name = j.getSelectedFile().getName();



                    String[] split = name.split("\\.");

                    String ext = split[split.length - 1];;



                    System.out.println(j.getSelectedFile());

                    String laruta = String.valueOf(j.getSelectedFile());
                    String rutafinal =  fmMain.GetStringDeFinal('\\', laruta);
                    String nombree = id+"_ticket";

                    String conection = String.valueOf(laruta);
                    //                System.out.println(String.valueOf("RUTAAAAAA: "+ruta));
                    try
                    {

                        SubeFTP.SubeArch_ticket(laruta, rutafinal,name,nombree+"."+ext);
                        sql.ExeSqlInt("update tickets_luvaly set adjunto = '\\\\192.168.0.130\\Tickets\\"+(nombree+"."+ext)+"' where id = "+id+"");
                        JOptionPane.showMessageDialog(null, "Archivo subido con éxito.");
                        GetUser();
                        sql.Commit();
                        CargaMensajesPendientes();
                    }
                    catch (Exception e)
                    {
                        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
                    }
                    finally
                    {

                    }
                }
            }
            else {
                JOptionPane.showMessageDialog(null, "Ya tiene archivo adjunto.");
            }
        } catch (SQLException ex) {
            Logger.getLogger(pfTicketsLuvaly.class.getName()).log(Level.SEVERE, null, ex);
        }
            finally{
            sql.Close();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            ExeSql sql = new ExeSql();
            ResultSet rs = null;
            String id = id_detalle.getText();
        try {
            rs=sql.Select("select adjunto from tickets_luvaly where id = "+id+"");
            rs.next();
            if(!rs.getString("adjunto").equals("0")){
                CargaPdf(id, rs.getString("adjunto"));
            }
            else {
                JOptionPane.showMessageDialog(null, "No posee archivo adjunto");
            }
        } catch (SQLException ex) {
            Logger.getLogger(pfTicketsLuvaly.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally {
            sql.Close();
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    public void CargaPdf(String id, String Voucher){
        ResultSet Rs;
        ExeSql Sql = new ExeSql();
        String server,user,pass,ruta_local="";
        int puerto =21;
         String rutaimage="";
          String rutrans="";
        try {

//            server= "192.168.0.130";
//            user="voucher";
//            pass="V2369";
            
            
           //trae datos ftp
            server="";
            puerto=0;
            user=""; 
            pass="";
            
            	Rs = Sql.Select("SELECT * from conexiones where tipo='tickets'");
                if (Rs.next())
                {
                    if(!fmMain.GetInternet()){
                        server = Rs.getString("serv");
                        user  = Rs.getString("usu");
                        puerto  = Rs.getInt("port");
                        pass = Rs.getString("pass");
                    }
                    else {
                        server = "186.67.157.227";
                        user  = Rs.getString("usu");
                        puerto  = 21;
                        pass = Rs.getString("pass");
                    }
                }
           //trae datos ftp
            
            Rs = Sql.Select("SELECT count(*) as hay from tickets_luvaly where id="+id+"");
            Rs.next();
            if (Rs.getInt("hay")>=1)
            {
                Rs = Sql.Select("SELECT adjunto as pdf from tickets_luvaly where id="+id+"");
                Rs.first();
                if (Rs.getString("pdf") != null)
                {

                    //Verifica SO
                    String sistema = System.getProperty("os.name").toLowerCase();
                    File folder = new File("");
                    if (sistema.contains("win"))
                    {
                         ruta_local = "c:/fotos2/";
                         folder = new File(ruta_local.substring(0,ruta_local.length()-1));
                    }
                    else{
                          ruta_local = "/fotos2/";
                          folder = new File(ruta_local);
                    }
                    if (!folder.exists())
                    {
                        folder.mkdir();
                    }
                    String archivo = "";

                    rutaimage = Rs.getString("pdf");
                    
                    if (Rs.getString("pdf") != null)
                    {
                        
                        archivo = fmMain.GetStringDeFinal('\\', rutaimage);
                        rutrans = fmMain.GetStringDeFinal('\\', rutaimage);
                        System.out.println(rutrans);
                        System.out.println(archivo);
                    }
//                            String rutrans="";
//                            if (Transporte == 1)
//                            {
//                                rutrans = "/tnt/";
//                                //archivo = rutaimage.substring(33,rutaimage.length());
//                                archivo = fmMain.GetStringDeFinal('\\', rutaimage);
//                            }
//                            else if (Transporte == 7)
//                            {
//                                rutrans = "/blue/";
//                                //archivo = rutaimage.substring(34,rutaimage.length());
//                                archivo = fmMain.GetStringDeFinal('\\', rutaimage);
//                            }
//                            else
//                                {
//                                rutrans = "/";
//                                archivo = fmMain.GetStringDeFinal('\\', rutaimage);
//                            }
                      
//                        rutrans = "/";
//                        archivo = fmMain.GetStringDeFinal('\\', rutaimage);
                    
//                    String  Archivo_buscado = Ftp.busca_archivoFTP(server, puerto, user, pass, ruta_local, "",archivo);
//                   if (Archivo_buscado.equals("") )
//                   {
                    Ftp.baja_archivo_ftp(server, puerto,user, pass,"/" + rutrans,ruta_local + archivo);
                    File file = new File(archivo);
                    File pathCompleto = new File(ruta_local + file);
                    Desktop.getDesktop().open(pathCompleto); 
//                   } 
//                   else
//                   {
//                       rutrans = "/";
//                       Ftp.baja_archivo_ftp(server, puerto,user, pass,rutrans+archivo,ruta_local + Archivo_buscado);
//                       File file = new File(archivo);
//                       File pathCompleto = new File(ruta_local + file);
//                       Desktop.getDesktop().open(pathCompleto); 
//                   }
                                      
                }
               
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
        finally{
            Sql.Close();
            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel asunto_detalle;
    private javax.swing.JLabel destinatario_detalle;
    private javax.swing.JList<String> detalle_ticket;
    private javax.swing.JLabel estado_detalle;
    private javax.swing.JLabel id_detalle;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel label_area;
    private javax.swing.JLabel label_usuario;
    private javax.swing.JLabel prioridad_detalle;
    private javax.swing.JLabel remitente_detalle;
    private javax.swing.JTextArea ticket_mensaje;
    private javax.swing.JTable tickets_recibidos;
    private javax.swing.JTable tickets_tabla;
    // End of variables declaration//GEN-END:variables
}
