/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Dialogos.jdIngresoCheque;
import Dialogos.jdIngresoTalonarioCheque;
import Formularios.fmMain;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David Alcaman
 */
public class pfCheques extends javax.swing.JPanel {
    int Iniciando;
    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    /**
     * Creates new form pfCheques
     */
    public pfCheques() {
        Iniciando=1;
        initComponents();
        CargaBancos();
        CargaTalonarios();
        cbBancoId.setVisible(false);
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        GrillaCheques.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        GrillaCheques.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
        GrillaCheques.getColumnModel().getColumn(6).setCellRenderer(rightRenderer);
        GrillaPagos.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        
        
        GrillaTalonarios.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            //Se ejecuta automáticamente cada vez que se hace una nueva selección. 
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(GrillaTalonarios.getSelectedRowCount()>0)
                    CargaCheques();
            }

        });
        GrillaCheques.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            //Se ejecuta automáticamente cada vez que se hace una nueva selección. 
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(GrillaCheques.getSelectedRowCount()>0)
                    CargaDoctos(cbBancoId.getSelectedItem().toString(), GrillaCheques.getValueAt(GrillaCheques.getSelectedRow(),0).toString());
            }

        });
        Iniciando=0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        cbBanco = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        cbBancoId = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        GrillaCheques = new javax.swing.JTable();
        btAsociarCheque = new javax.swing.JButton();
        btAnulaCheque = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        GrillaTalonarios = new javax.swing.JTable();
        btNuevoTalonario = new javax.swing.JButton();
        btEditarTalonario = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        GrillaPagos = new javax.swing.JTable();

        jMenuItem1.setText("Ver Facturas Pagadas");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cbBanco.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBancoActionPerformed(evt);
            }
        });

        jLabel1.setText("Banco");

        cbBancoId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbBanco, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbBancoId, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(cbBancoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Cheques"));

        GrillaCheques.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Numero", "Emisión", "Destinatario", "Vencimiento", "Monto", "Utilizado", "Disponible", "Cobrado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GrillaCheques.setComponentPopupMenu(jPopupMenu1);
        jScrollPane2.setViewportView(GrillaCheques);
        if (GrillaCheques.getColumnModel().getColumnCount() > 0) {
            GrillaCheques.getColumnModel().getColumn(2).setMinWidth(400);
            GrillaCheques.getColumnModel().getColumn(2).setPreferredWidth(400);
            GrillaCheques.getColumnModel().getColumn(2).setMaxWidth(400);
            GrillaCheques.getColumnModel().getColumn(7).setMinWidth(75);
            GrillaCheques.getColumnModel().getColumn(7).setPreferredWidth(75);
            GrillaCheques.getColumnModel().getColumn(7).setMaxWidth(75);
        }

        btAsociarCheque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Pencil16.png"))); // NOI18N
        btAsociarCheque.setToolTipText("Asignar Destinatario");
        btAsociarCheque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAsociarChequeActionPerformed(evt);
            }
        });

        btAnulaCheque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Cancel16.png"))); // NOI18N
        btAnulaCheque.setToolTipText("Anular Cheque");
        btAnulaCheque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnulaChequeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btAsociarCheque, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btAnulaCheque, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1040, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btAsociarCheque)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btAnulaCheque)
                        .addGap(541, 541, 541))))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Talonarios"));

        GrillaTalonarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Desde", "Hasta", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(GrillaTalonarios);
        if (GrillaTalonarios.getColumnModel().getColumnCount() > 0) {
            GrillaTalonarios.getColumnModel().getColumn(0).setMinWidth(80);
            GrillaTalonarios.getColumnModel().getColumn(0).setPreferredWidth(80);
            GrillaTalonarios.getColumnModel().getColumn(0).setMaxWidth(80);
            GrillaTalonarios.getColumnModel().getColumn(3).setMinWidth(0);
            GrillaTalonarios.getColumnModel().getColumn(3).setPreferredWidth(0);
            GrillaTalonarios.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        btNuevoTalonario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Agregar.png"))); // NOI18N
        btNuevoTalonario.setToolTipText("Nuevo Talonario");
        btNuevoTalonario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevoTalonarioActionPerformed(evt);
            }
        });

        btEditarTalonario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Pencil16.png"))); // NOI18N
        btEditarTalonario.setToolTipText("Editar Talonario");
        btEditarTalonario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarTalonarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btNuevoTalonario, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btEditarTalonario, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(231, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btNuevoTalonario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btEditarTalonario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Pagos"));

        GrillaPagos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Doc", "Número", "Monto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(GrillaPagos);
        if (GrillaPagos.getColumnModel().getColumnCount() > 0) {
            GrillaPagos.getColumnModel().getColumn(0).setMinWidth(45);
            GrillaPagos.getColumnModel().getColumn(0).setPreferredWidth(45);
            GrillaPagos.getColumnModel().getColumn(0).setMaxWidth(45);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void CargaBancos(){
        ExeSql  Sql = new ExeSql();
        ResultSet Rs;

        cbBanco.removeAllItems();
        cbBancoId.removeAllItems();

        try {
            Rs = Sql.Select("select codigo, banco\n" +
                    "from par_banco\n" +
                    "where codigo > 0 order by codigo asc ");
            while(Rs.next()){
                cbBanco.addItem(Rs.getString("banco").trim());
                cbBancoId.addItem(Rs.getString("codigo"));
                
            }
        } catch (Exception e) {
            fmMain.Mensaje(e.getMessage());
        }finally{
            Sql.Close();
        }
    }
    private void CargaTalonarios(){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel TableModel = (DefaultTableModel) GrillaTalonarios.getModel();
        DefaultTableModel TableModel2 = (DefaultTableModel) GrillaCheques.getModel();
        
        while(TableModel.getRowCount()>0)
                        TableModel.removeRow(0);  
        
        
        //Limpia Grilla de Cheques
        while(TableModel2.getRowCount()>0)
                        TableModel2.removeRow(0);  
        
        
        try {
            Rs = Sql.Select("select *\n" +
                            "from cheques_talonarios\n" +
                            "where banco="+ cbBancoId.getSelectedItem().toString().trim() +"\n" +
                            "order by nroini");
            while(Rs.next()){
                TableModel.addRow(new Object[]{Rs.getString("fecha").trim(), 
                                               Rs.getString("nroini").trim(), 
                                               Rs.getString("nrofin").trim(), 
                                               Rs.getString("id").trim()
                                                });
            }
            
        } catch (Exception e) {
        }finally{
            Sql.Close();
        }
        
    }
    
    private void CargaCheques(){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel TableModel = (DefaultTableModel) GrillaCheques.getModel();
        String FEmision,FVencimiento;
        
        while(TableModel.getRowCount()>0)
                        TableModel.removeRow(0);  
        
        try {
            Rs = Sql.Select("select c.numero,c.femision,case p.nombre when p.nombre then p.nombre else 'Sin Asociar' end as nombre,c.fvencimiento,c.monto,c.pagado,c.monto+c.pagado as saldo,cobrado,estado\n" +
                    "from cheques_emitidos c\n" +
                    "left join proveedor p on p.rut=c.rut\n" +
                    "where c.banco=" + cbBancoId.getSelectedItem().toString() + "\n" +
                    "and talonario=" + GrillaTalonarios.getValueAt(GrillaTalonarios.getSelectedRow(),3).toString().trim() + "order by cast(c.numero as integer)");
            while(Rs.next()){
                try {
                    FEmision = Rs.getString("femision").trim();
                    FVencimiento = Rs.getString("fvencimiento").trim();
                } catch (Exception e) {
                    FEmision="";
                    FVencimiento="";
                }
                //Cheque Asociado
                if(Rs.getInt("Estado")>0 && Rs.getDouble("monto")>=0)
                    TableModel.addRow(new Object[]{Rs.getString("numero").trim(), 
                                                   FEmision, 
                                                   Rs.getString("nombre").trim(), 
                                                   FVencimiento, 
                                                   fmMain.FormatoTotal(Rs.getDouble("monto")),
                                                   fmMain.FormatoTotal(Rs.getDouble("pagado")),
                                                   fmMain.FormatoTotal(Rs.getDouble("saldo")),
                                                   Rs.getBoolean("cobrado")
                                                    });
                //Cheque en blanco
                else if(Rs.getInt("Estado")>0 && Rs.getDouble("monto")<0)
                    TableModel.addRow(new Object[]{Rs.getString("numero").trim(), 
                                                   FEmision, 
                                                   Rs.getString("nombre").trim(), 
                                                   FVencimiento, 
                                                   "BLANCO",
                                                   "BLANCO",
                                                   "BLANCO",
                                                   Rs.getBoolean("cobrado")
                                                    });
                else
                    TableModel.addRow(new Object[]{Rs.getString("numero").trim(), 
                                                   "", 
                                                   "DOCUMENTO NULO", 
                                                   "", 
                                                   "",
                                                   "",
                                                   "",
                                                   true
                                                    });
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }finally{
            Sql.Close();
        }
    }
    private void btNuevoTalonarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevoTalonarioActionPerformed
        jdIngresoTalonarioCheque Chq = new jdIngresoTalonarioCheque(null,true);
        Chq.setLocationRelativeTo(null);
        Chq.setTitle("Ingreso de Talonario");
        Chq.CargaDatos(cbBanco.getSelectedItem().toString(), cbBancoId.getSelectedItem().toString());
        Chq.setVisible(true);
        CargaTalonarios();
    }//GEN-LAST:event_btNuevoTalonarioActionPerformed

    private void btEditarTalonarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarTalonarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btEditarTalonarioActionPerformed

    private void cbBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBancoActionPerformed
        if(Iniciando==0){
            cbBancoId.setSelectedIndex(cbBanco.getSelectedIndex());
            CargaTalonarios();
        }
            
    }//GEN-LAST:event_cbBancoActionPerformed

    private void btAsociarChequeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAsociarChequeActionPerformed
        if(GrillaCheques.getSelectedRow()>=0 && GrillaCheques.getValueAt(GrillaCheques.getSelectedRow(), 1).toString().isEmpty()){
            jdIngresoCheque Chq = new jdIngresoCheque(null,true);
            Chq.setLocationRelativeTo(null);
            Chq.setTitle("Emitir Cheque");
            Chq.CargaDatos(cbBanco.getSelectedItem().toString().trim(), cbBancoId.getSelectedItem().toString().trim(), GrillaCheques.getValueAt(GrillaCheques.getSelectedRow(),0).toString().trim());
            Chq.setVisible(true);    
            CargaCheques();
        }
        if(GrillaCheques.getSelectedRow()>=0 && GrillaCheques.getValueAt(GrillaCheques.getSelectedRow(), 4).toString().trim().equals("BLANCO")){
            jdIngresoCheque Chq = new jdIngresoCheque(null,true);
            Chq.setLocationRelativeTo(null);
            Chq.setTitle("Emitir Cheque");
            Chq.CargaDatosBlanco(cbBanco.getSelectedItem().toString().trim(), cbBancoId.getSelectedItem().toString().trim(), GrillaCheques.getValueAt(GrillaCheques.getSelectedRow(),0).toString().trim());
            Chq.setVisible(true);    
            CargaCheques();
        }
        if(GrillaCheques.getSelectedRow()>=0 && GrillaCheques.getValueAt(GrillaCheques.getSelectedRow(), 5).toString().trim().equals("0")){
            jdIngresoCheque Chq = new jdIngresoCheque(null,true);
            Chq.setLocationRelativeTo(null);
            Chq.setTitle("Emitir Cheque");
            Chq.CargaDatos(cbBanco.getSelectedItem().toString().trim(), cbBancoId.getSelectedItem().toString().trim(), GrillaCheques.getValueAt(GrillaCheques.getSelectedRow(),0).toString().trim());
            Chq.setVisible(true);    
            CargaCheques();
        }
        
    }//GEN-LAST:event_btAsociarChequeActionPerformed

    private void btAnulaChequeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnulaChequeActionPerformed
        if(GrillaCheques.getSelectedRow()>=0){
            if(fmMain.OkCancel("¿Desea Anular el cheque?")== JOptionPane.OK_OPTION){
                ExeSql Sql = new ExeSql();
                ResultSet Rs;
            
                try {
                    
                    Rs = Sql.Select("select fn_anula_cheque("+ cbBancoId.getSelectedItem().toString().trim() +",'"+ GrillaCheques.getValueAt(GrillaCheques.getSelectedRow(),0).toString().trim() +"')");
                    Rs.next();
                    Sql.Commit();
                    if(Rs.getInt("fn_anula_cheque")==2)
                        fmMain.Mensaje("Cheque Anulado. Pagos Reversados");
                    else
                        fmMain.Mensaje("Cheque Anulado");
                    CargaCheques();
                } catch (Exception e) {
                    System.out.println(e.getMessage());
                }finally{
                    Sql.Close();
                }
            }
        }
    }//GEN-LAST:event_btAnulaChequeActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
         ExeSql SqlAnt = new ExeSql();
        ResultSet RsAnt;
        String qry = "select nrodocto from cheques_emitidos_facturas where numero='"+GrillaCheques.getValueAt(GrillaCheques.getSelectedRow(), 0).toString().trim()+"'";
        
        
            try {
                String muestra="<br>";
                RsAnt = SqlAnt.Select(qry);
                while (RsAnt.next()) {
                    muestra =  muestra+RsAnt.getString("nrodocto").trim()+"<br>"; 
                }
                JOptionPane.showMessageDialog(null, String.format("<html><body>"+muestra+"</body></html>", 150, 150));
              
            } catch (Exception e) {
                fmMain.Mensaje("Error al cargar facturas " + e);
            } finally {
                SqlAnt.Close();
            }
  
    }//GEN-LAST:event_jMenuItem1ActionPerformed
private void CargaDoctos(String Banco,String Documento){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel TableModel = (DefaultTableModel) GrillaPagos.getModel();
        
        while(TableModel.getRowCount()>0)
                        TableModel.removeRow(0);  
        
        try {
            Rs = Sql.Select("select c.nrodocto,p.monto\n" +
                            "from prv_pagos p\n" +
                            "left join prv_cuentasxpagar c on c.id=p.cuenta\n" +
                            "where p.banco="+ Banco +"\n" +
                            "and p.tipopago=3\n" +
                            "and p.nrodocumento='"+ Documento +"'");
            while(Rs.next()){
                TableModel.addRow(new Object[]{"FAP", 
                                                Rs.getString("nrodocto").trim(), 
                                                fmMain.FormatoTotal(Rs.getDouble("monto"))
                                                });
            }
        } catch (Exception e) {
            fmMain.Mensaje(e.getMessage());
        }finally{
            Sql.Close();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable GrillaCheques;
    private javax.swing.JTable GrillaPagos;
    private javax.swing.JTable GrillaTalonarios;
    private javax.swing.JButton btAnulaCheque;
    private javax.swing.JButton btAsociarCheque;
    private javax.swing.JButton btEditarTalonario;
    private javax.swing.JButton btNuevoTalonario;
    private javax.swing.JComboBox cbBanco;
    private javax.swing.JComboBox cbBancoId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
