/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Conexion.ExeSqlLuvaly;
import Dialogos.jdPagadoPrvCli;
import Formularios.fmMain;
import Utilidades.Exportercsv;
import Utilidades.Exporterxls;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.math.BigInteger;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author David Alcaman
 */
public class pfReporteAjustePrecio extends javax.swing.JPanel {
   
    
//    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    
    public pfReporteAjustePrecio() {
        initComponents();
        Date date = new Date();

        dtFecha.setDate(date);
        dtFecha.setEnabled(true);
         


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        Tot_Ordenes = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        dtFecha = new org.jdesktop.swingx.JXDatePicker();
        rbDesde = new javax.swing.JRadioButton();
        rbPeriodoTodos = new javax.swing.JRadioButton();
        BtBuscar = new javax.swing.JButton();
        btExportar = new javax.swing.JButton();

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Grilla.setAutoCreateRowSorter(true);
        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Rut", "Proveedor", "O.C.P.", "Origen", "Nro. Docto.", "Fecha", "Sku", "Descripcion", "Precio Unitario", "Precio Ajustado", "Diferencia", "Emisor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(80);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(1).setMinWidth(240);
            Grilla.getColumnModel().getColumn(1).setPreferredWidth(240);
            Grilla.getColumnModel().getColumn(2).setMinWidth(65);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(65);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(65);
            Grilla.getColumnModel().getColumn(3).setMinWidth(60);
            Grilla.getColumnModel().getColumn(3).setPreferredWidth(60);
            Grilla.getColumnModel().getColumn(3).setMaxWidth(60);
            Grilla.getColumnModel().getColumn(4).setMinWidth(80);
            Grilla.getColumnModel().getColumn(4).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(4).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(5).setMinWidth(80);
            Grilla.getColumnModel().getColumn(5).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(5).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(6).setMinWidth(95);
            Grilla.getColumnModel().getColumn(6).setPreferredWidth(95);
            Grilla.getColumnModel().getColumn(6).setMaxWidth(95);
            Grilla.getColumnModel().getColumn(7).setMinWidth(320);
            Grilla.getColumnModel().getColumn(7).setPreferredWidth(320);
            Grilla.getColumnModel().getColumn(8).setMinWidth(80);
            Grilla.getColumnModel().getColumn(8).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(8).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(9).setMinWidth(80);
            Grilla.getColumnModel().getColumn(9).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(9).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(10).setMinWidth(80);
            Grilla.getColumnModel().getColumn(10).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(10).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(11).setMinWidth(80);
            Grilla.getColumnModel().getColumn(11).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(11).setMaxWidth(80);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Total Productos");

        Tot_Ordenes.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Tot_Ordenes.setText("0");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "BUSQUEDA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        dtFecha.setEnabled(false);

        buttonGroup1.add(rbDesde);
        rbDesde.setSelected(true);
        rbDesde.setText("Por Fecha");
        rbDesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDesdeActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbPeriodoTodos);
        rbPeriodoTodos.setText("Todos");
        rbPeriodoTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPeriodoTodosActionPerformed(evt);
            }
        });

        BtBuscar.setText("Buscar");
        BtBuscar.setName("CboUsuario"); // NOI18N
        BtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbPeriodoTodos)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbDesde)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addComponent(BtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbDesde)
                    .addComponent(BtBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(rbPeriodoTodos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btExportar.setText("Exportar");
        btExportar.setEnabled(false);
        btExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExportarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(btExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 374, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Tot_Ordenes, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(Tot_Ordenes)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(btExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.getAccessibleContext().setAccessibleName("");
        jPanel1.getAccessibleContext().setAccessibleDescription("");
    }// </editor-fold>//GEN-END:initComponents
    
    private void BtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtBuscarActionPerformed
        String Query, Query2 ="";
        ExeSql Sql = new ExeSql();
        ExeSql Sql2 = new ExeSql();
        ResultSet Rs, Rs2;
        SimpleDateFormat sdf2 = new SimpleDateFormat("dd-MM-yyyy");
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        ExeSqlLuvaly luv = new ExeSqlLuvaly();
        ResultSet producto = null;
        double Sumador=0;
        int ContReg=0;
        String emisor = "";
        
        while(TableModel.getRowCount()>0){
        
            TableModel.removeRow(0);
        } 
        
        btExportar.setEnabled(true);
        
        try {
            
            Query = "SELECT ccd.rut,pr.nombre AS proveedor,rp.ocp,ccd.tipdocto,ccd.nrodocto, cc.femision, ccd.sku,p.nombre AS producto,ccd.unitanterior,ccd.valorunitario,ccd.difajuste, cc.usuarioemite\n" +
                    "FROM ctacteprvdet ccd\n" +
                    "LEFT JOIN ctacteprv cc ON ccd.rut = cc.rut AND ccd.tipdocto = cc.tipdocto AND ccd.nrodocto = cc.nrodocto\n" +
                    "LEFT JOIN producto p ON ccd.sku = p.sku\n" +
                    "LEFT JOIN recepcionprv rp ON ccd.rut = rp.rut AND ccd.tipdocto = rp.tipdocto AND ccd.nrodocto = rp.nrodocto\n" +
                    "LEFT JOIN proveedor pr ON ccd.rut = pr.rut\n" ;
                    
             if(rbDesde.isSelected()){
                
                Query = Query + "WHERE cc.femision = '"+getFecha()+"'\n" +
                                "AND ccd.tipdocto IN ('FAP','GDP')\n" +
                                "AND ccd.difajuste <> 0";
                
             }else if(rbPeriodoTodos.isSelected()){
             
                 
                 Query = Query + "WHERE ccd.tipdocto IN ('FAP','GDP')\n" +
                                 "AND ccd.difajuste <> 0";
             
             }
                   

            Rs = Sql.Select(Query);
            
            while (Rs.next()){
                producto =  luv.Select("select p.nombre producto,trim(u.unidad) as unidad, u.um from producto p \n"
                + "LEFT JOIN par_unidad u ON u.codigo=p.unidad\n "
                + "where p.sku = '"+Rs.getString("sku").trim()+"'");
                producto.next();
                String femision = sdf2.format((Rs.getDate("femision")).getTime() );
                String unitanterior =  fmMain.FormatoNumero(Rs.getDouble("unitanterior"));
                String valorunitario =  fmMain.FormatoNumero(Rs.getDouble("valorunitario"));
                String difajuste =  fmMain.FormatoNumero(Rs.getDouble("difajuste"));
                
                
                Query2 = "SELECT nrodocto, usuarioemite FROM ctacteprv \n" +
                         "WHERE rut = "+Rs.getString("rut").trim()+" AND tipdocto IN ('OCP') AND nrodocto = "+Rs.getInt("ocp");
                
                Rs2 = Sql2.Select(Query2);
                
                if (Sql2.GetRowCount() > 0){
                    
                    Rs2.next();
                    emisor = Rs2.getString("usuarioemite");
                }
                
                TableModel.addRow(new Object[]{Rs.getString("rut").trim(),
                                               Rs.getString("proveedor").trim(),  
                                               Rs.getString("ocp").trim(),  
                                               Rs.getString("tipdocto").trim(),  
                                               Rs.getString("nrodocto").trim(), 
                                               femision.trim(),
                                               Rs.getString("sku").trim(),
                                               producto.getString("producto").trim(),
                                               unitanterior.trim(),
                                               valorunitario.trim(),
                                               difajuste.trim(),
                                               emisor.trim()
                });

                ContReg++;
            }
         
           Tot_Ordenes.setText(""+ContReg); 
            
        } catch (SQLException e) {
          
        } finally{
            Sql.Close();
            luv.Close();
        }

    }//GEN-LAST:event_BtBuscarActionPerformed


    
    
    private void rbDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDesdeActionPerformed
        // TODO add your handling code here:
        if(rbDesde.isSelected()){
            dtFecha.setEnabled(true);
        
        }
    }//GEN-LAST:event_rbDesdeActionPerformed

    private void rbPeriodoTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPeriodoTodosActionPerformed
        // TODO add your handling code here:
        if(rbPeriodoTodos.isSelected()){
            dtFecha.setEnabled(false);
           
          }
    }//GEN-LAST:event_rbPeriodoTodosActionPerformed

    private void btExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExportarActionPerformed
         
        if(Grilla.getRowCount()==0){
            fmMain.Mensaje("No hay Productos para exportar");
            return;
        }
        
        File archivo = null;
        File folder = new File("C:/temp");
        String nombre = "Precios Ajustados"+getFecha();
        String sSistemaOperativo = System.getProperty("os.name").toString().toLowerCase();       //Determina el Sistema Operativo del Equipo
        
        if (sSistemaOperativo.contains("win")){
             
            if (!folder.exists()){
                folder.mkdir();
            }
            
            archivo = new File("C:/temp/precios_ajustadoslista"+getFecha()+".xls");
                
        }else{
            
            JFileChooser elegir = new JFileChooser();
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos de Excel","xls");
            elegir.setSelectedFile(new File("/user","precios_ajustados"+getFecha()+".xls"));
            elegir.setFileFilter(filtro);
            elegir.setDialogTitle("Guardar archivo");
            elegir.setAcceptAllFileFilterUsed(false);
            
            if (elegir.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                String file2 = elegir.getSelectedFile().toString().concat(".xls");
                
                 archivo = new File(file2);  
                
                try {
                     Exporterxls exp = new Exporterxls(archivo, Grilla, nombre); 
                    if (exp.export()) {
                        JOptionPane.showMessageDialog(null, "Los datos fueron exportados en el directorio seleccionado", "Mensaje de Informacion", JOptionPane.INFORMATION_MESSAGE);
                        abrir(file2);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Hubo un error " + e.getMessage(), " Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
  
        FileWriter flarchivo = null;
        
        try {
          
             Exporterxls exp = new Exporterxls(archivo, Grilla, nombre); 
 
             if(exp.export()){
             
                String file = archivo.toString();
                           
                abrir(file);
             }
                    
        } catch (IOException ex ) {
            
            Logger.getLogger(pfReporteAjustePrecio.class.getName()).log(Level.SEVERE, null, ex);
        
        
        } catch (Exception ex) {
            
            Logger.getLogger(pfReporteAjustePrecio.class.getName()).log(Level.SEVERE, null, ex);
        
        }finally{
        
            if (flarchivo != null) {
		
                try {              
	    	    
                    flarchivo.close();   //cierra el flujo principal
                   
                }catch (IOException e){
		
                    e.printStackTrace();
		
                }
                
	    }
            
        }
    }//GEN-LAST:event_btExportarActionPerformed

    
    public void abrir(String file ){
        
       try {
           String url = file;
           ProcessBuilder p = new ProcessBuilder();
           p.command("cmd.exe", "/c",url);
           p.start();
       } catch (IOException ex) {
           Logger.getLogger(pfReporteAjustePrecio.class.getName()).log(Level.SEVERE, null, ex);
       }
        
    }
    
    
    public String getFecha() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        return( sdf.format((dtFecha.getDate()).getTime() ) );
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtBuscar;
    private javax.swing.JTable Grilla;
    private javax.swing.JLabel Tot_Ordenes;
    private javax.swing.JButton btExportar;
    private javax.swing.ButtonGroup buttonGroup1;
    private org.jdesktop.swingx.JXDatePicker dtFecha;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private javax.swing.JRadioButton rbDesde;
    private javax.swing.JRadioButton rbPeriodoTodos;
    // End of variables declaration//GEN-END:variables
}
