/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Dialogos.jdBuscarCliPrv;
import Dialogos.jdPagadoPrvCli;
import Dialogos.jdPagarPrv;
import Formularios.fmMain;
import static Formularios.fmMain.pnPestanas;
import Utilidades.Exporter;
import Utilidades.TableCellRenderer_Proveedor;
import Utilidades.PanelTab;
import Utilidades.TableCellRenderer;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.io.File;
import java.math.BigInteger;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author David Alcaman
 */
public class pfReportePagosPrv extends javax.swing.JPanel {
    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    DecimalFormat formateador = new DecimalFormat("###,###");
            /**
     * Creates new form pfReportePagosPrv
     */
    public pfReportePagosPrv() {
        initComponents();
//        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
//        Grilla.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
//        Grilla.getColumnModel().getColumn(6).setCellRenderer(rightRenderer);
//        Grilla.getColumnModel().getColumn(8).setCellRenderer(rightRenderer);
//        Grilla.getColumnModel().getColumn(9).setCellRenderer(rightRenderer);
//        Grilla.getColumnModel().getColumn(10).setCellRenderer(rightRenderer);
//        Grilla.getColumnModel().getColumn(11).setCellRenderer(rightRenderer);
        btExcel.setVisible(false);
        
        
        Grilla.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                
               SumaMonto();
//               DefaultTableCellRenderer MyCellrendar = new DefaultTableCellRenderer();
// 
//               MyCellrendar.setBackground(Color.blue);
//               MyCellrendar.setForeground(Color.white);
//
//               Grilla.getColumnModel().getColumn(9).setCellRenderer(MyCellrendar);
                               
            }
        });
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        rbDesde = new javax.swing.JRadioButton();
        dtDesde = new org.jdesktop.swingx.JXDatePicker();
        dtHasta = new org.jdesktop.swingx.JXDatePicker();
        jLabel2 = new javax.swing.JLabel();
        rbPeriodoTodos = new javax.swing.JRadioButton();
        rbDesdeEmision = new javax.swing.JRadioButton();
        Desde = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        rbEstadoPendientes = new javax.swing.JRadioButton();
        rbEstadoVigentes = new javax.swing.JRadioButton();
        rbEstadoPagadas = new javax.swing.JRadioButton();
        rbEstadoTodas = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        rbRut = new javax.swing.JRadioButton();
        txRut = new javax.swing.JTextField();
        txProveedor = new javax.swing.JTextField();
        rbRutTodos = new javax.swing.JRadioButton();
        btIr = new javax.swing.JButton();
        txSku = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        lbMonto = new javax.swing.JLabel();
        lbSumFiltro = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbContPagos = new javax.swing.JLabel();
        lbSumMontos = new javax.swing.JLabel();
        btExcel = new javax.swing.JButton();
        lbPagoCheques = new javax.swing.JLabel();
        lbPagosTrans = new javax.swing.JLabel();
        lbPagosOtros = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btBuscar = new javax.swing.JButton();
        btPagar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        lbSumDoc = new javax.swing.JLabel();

        jMenuItem1.setText("Ver Factura");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "PERIODO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        buttonGroup2.add(rbDesde);
        rbDesde.setText("Vencimiento");
        rbDesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDesdeActionPerformed(evt);
            }
        });

        dtDesde.setEnabled(false);

        dtHasta.setEnabled(false);

        jLabel2.setText("Hasta");

        buttonGroup2.add(rbPeriodoTodos);
        rbPeriodoTodos.setSelected(true);
        rbPeriodoTodos.setText("Todos");
        rbPeriodoTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPeriodoTodosActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbDesdeEmision);
        rbDesdeEmision.setText("Emision");
        rbDesdeEmision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDesdeEmisionActionPerformed(evt);
            }
        });

        Desde.setText("Desde");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbPeriodoTodos)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbDesdeEmision)
                            .addComponent(rbDesde))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Desde)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addComponent(dtDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dtHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(rbDesde)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbDesdeEmision))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dtDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(Desde)
                            .addComponent(dtHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbPeriodoTodos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "ESTADO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        buttonGroup1.add(rbEstadoPendientes);
        rbEstadoPendientes.setSelected(true);
        rbEstadoPendientes.setText("Vencidas");

        buttonGroup1.add(rbEstadoVigentes);
        rbEstadoVigentes.setText("Vigentes");

        buttonGroup1.add(rbEstadoPagadas);
        rbEstadoPagadas.setText("Pagadas");

        buttonGroup1.add(rbEstadoTodas);
        rbEstadoTodas.setText("Todas");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbEstadoTodas)
                    .addComponent(rbEstadoPagadas)
                    .addComponent(rbEstadoVigentes)
                    .addComponent(rbEstadoPendientes))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbEstadoPendientes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbEstadoVigentes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbEstadoPagadas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbEstadoTodas)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "PROVEEDOR", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        buttonGroup3.add(rbRut);
        rbRut.setText("Rut");
        rbRut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRutActionPerformed(evt);
            }
        });

        txRut.setEnabled(false);
        txRut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txRutKeyPressed(evt);
            }
        });

        txProveedor.setEditable(false);
        txProveedor.setEnabled(false);

        buttonGroup3.add(rbRutTodos);
        rbRutTodos.setSelected(true);
        rbRutTodos.setText("Todos");
        rbRutTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRutTodosActionPerformed(evt);
            }
        });

        btIr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos22/Go.png"))); // NOI18N
        btIr.setBorderPainted(false);
        btIr.setEnabled(false);
        btIr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIrActionPerformed(evt);
            }
        });

        txSku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txSkuActionPerformed(evt);
            }
        });
        txSku.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txSkuKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txSkuKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txSkuKeyTyped(evt);
            }
        });

        jLabel12.setText("FILTRO:");

        lbMonto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbMonto.setText("Monto");

        lbSumFiltro.setText("0.00");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(rbRut)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txRut, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btIr, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(rbRutTodos)
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lbMonto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbSumFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txSku)))))
                .addGap(95, 95, 95))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbRut)
                        .addComponent(txRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btIr, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbRutTodos)
                    .addComponent(jLabel12)
                    .addComponent(txSku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMonto)
                    .addComponent(lbSumFiltro))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Grilla.setAutoCreateRowSorter(true);
        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Estado", "Rut", "Proveedor", "Tipo", "Nro.Docto", "Proveedor Asociado", "Fec. Factura", "Cuota", "Vencimiento", "Monto", "Pagado", "Saldo", "Tipo Pago", "id_cuota", "procesado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.setColumnSelectionAllowed(true);
        Grilla.setComponentPopupMenu(jPopupMenu1);
        Grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Grilla);
        Grilla.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(95);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(1).setMinWidth(75);
            Grilla.getColumnModel().getColumn(1).setPreferredWidth(75);
            Grilla.getColumnModel().getColumn(1).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(2).setMinWidth(200);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(320);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(350);
            Grilla.getColumnModel().getColumn(3).setMinWidth(45);
            Grilla.getColumnModel().getColumn(3).setPreferredWidth(45);
            Grilla.getColumnModel().getColumn(4).setMinWidth(60);
            Grilla.getColumnModel().getColumn(4).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(4).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(5).setMinWidth(80);
            Grilla.getColumnModel().getColumn(5).setPreferredWidth(110);
            Grilla.getColumnModel().getColumn(5).setMaxWidth(320);
            Grilla.getColumnModel().getColumn(6).setMinWidth(100);
            Grilla.getColumnModel().getColumn(6).setPreferredWidth(100);
            Grilla.getColumnModel().getColumn(6).setMaxWidth(120);
            Grilla.getColumnModel().getColumn(7).setMinWidth(50);
            Grilla.getColumnModel().getColumn(7).setPreferredWidth(50);
            Grilla.getColumnModel().getColumn(7).setMaxWidth(50);
            Grilla.getColumnModel().getColumn(8).setMinWidth(80);
            Grilla.getColumnModel().getColumn(8).setPreferredWidth(100);
            Grilla.getColumnModel().getColumn(8).setMaxWidth(120);
            Grilla.getColumnModel().getColumn(9).setMinWidth(80);
            Grilla.getColumnModel().getColumn(9).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(9).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(10).setMinWidth(60);
            Grilla.getColumnModel().getColumn(10).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(10).setMaxWidth(120);
            Grilla.getColumnModel().getColumn(12).setMinWidth(140);
            Grilla.getColumnModel().getColumn(12).setPreferredWidth(140);
            Grilla.getColumnModel().getColumn(12).setMaxWidth(150);
            Grilla.getColumnModel().getColumn(13).setMinWidth(0);
            Grilla.getColumnModel().getColumn(13).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(13).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(14).setMinWidth(0);
            Grilla.getColumnModel().getColumn(14).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(14).setMaxWidth(0);
        }

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Nro Pagos:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Pago Cheques");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Pago Total");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Pago Transferencia");

        lbContPagos.setText("0.00");

        lbSumMontos.setText("0.00");

        btExcel.setText("jButton1");
        btExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcelActionPerformed(evt);
            }
        });

        lbPagoCheques.setText("0.00");

        lbPagosTrans.setText("0.00");

        lbPagosOtros.setText("0.00");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Otros Pagos");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbContPagos, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbPagoCheques, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbPagosTrans, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbPagosOtros, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbSumMontos, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addComponent(btExcel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(lbPagosOtros))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel3)
                        .addComponent(jLabel5)
                        .addComponent(jLabel4)
                        .addComponent(lbContPagos)
                        .addComponent(lbSumMontos)
                        .addComponent(btExcel)
                        .addComponent(lbPagoCheques)
                        .addComponent(lbPagosTrans)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btBuscar.setText("Buscar");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        btPagar.setText("Pagar");
        btPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPagarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Total Documentos");

        lbSumDoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbSumDoc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbSumDoc.setText("0.00");
        lbSumDoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(btPagar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btBuscar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(lbSumDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1682, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btPagar)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbSumDoc)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

     public String getDesde() {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        return( sdf.format( (dtDesde.getDate()).getTime() ) );
    }
    public String getHasta() {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        return( sdf.format( (dtHasta.getDate()).getTime() ) );
    }
    
    void CargaProveedor(String Rut){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        try {
            Rs = Sql.Select("select rut,nombre\n" +
                            "from proveedor\n" +
                            "where rut=" + Rut);
            if(Sql.GetRowCount()==0) return;
            
            Rs.next();
            txRut.setText(Rs.getString("Rut").trim());
            txProveedor.setText(Rs.getString("Nombre").trim());
            btBuscar.doClick();
            
        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
    }
    
    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
        buscar(txRut.getText().trim());       
    }//GEN-LAST:event_btBuscarActionPerformed

    public void buscar(String StrRut){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        String Query="";
        String NombrePersonal ="";
        String Rut ="";
        String Proveedor ="";
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        int ContPagos=0;
        BigInteger TotalPagos           = new BigInteger("0");
        BigInteger PagosCheques         = new BigInteger("0");
        BigInteger PagosTransferencia   = new BigInteger("0");
        BigInteger PagosOtros           = new BigInteger("0");
        
        
        StrRut = txRut.getText().trim();
        
        
        String tipdocto = "";
        String nrodocto = "";
        String femision = "";
        String cuotas = "";
        String tipoc = "";
        
        while(TableModel.getRowCount()>0)
                        TableModel.removeRow(0);        
        try {
//            Query = "select pp.procesado, case pp.estado when 0 then 'Pendiente' when 1 then 'Pagado' else 'Pagado Parcial' end as estado,\n" +
//                    "case when p.rut is NULL then pp.rut else p.rut end,"+
//                    "case when p.nombre is NULL then 'NO REGISTRADO' else p.nombre end,"+
//                    "fp.tipdocto,fp.nrodocto,case fp.tipdocto when 'FAP' then (select * from fn_get_proveedor_asociado(p.rut,fp.nrodocto)) else p.nombre end as prv_asociado, fp.femision,pp.nrocuota || ' de ' || fp.cuotas as cuotas,\n" +
//                    " pp.fpago,pp.monto,pp.pagado,pp.monto- pp.pagado as saldo,g.nombre as tipopago,pp.id,g.codigo as codpago, \n" +
//                    " case when per.nombre is NULL then 'NA' else per.nombre end as NomPer, pp.rut AS rut2  \n" +
//                    "from prv_cuentasxpagar pp\n" +
//                    "left join proveedor p on pp.rut=p.rut\n" +
//                    "left join ctacteprv fp on fp.rut=pp.rut and fp.tipdocto=pp.tipdocto and fp.nrodocto=pp.nrodocto \n" +
//                    "left join par_general g on g.tipo='TIPOPAGOPRV' and g.codigo=pp.tipopago\n" + 
//                    "left join personal per on fp.contacto = per.rut and fp.tipopago=1\n";
//            
            
            
            
            
            Query = "select pp.procesado, case pp.estado when 0 then 'Pendiente' when 1 then 'Pagado' else 'Pagado Parcial' end as estado,\n" +
                    "case when p.rut is NULL then pp.rut else p.rut end,"+
                    "case when p.nombre is NULL then 'NO REGISTRADO' else p.nombre end,"+
                    "fp.tipdocto,fp.nrodocto,case fp.tipdocto when 'FAP' then (select * from fn_get_proveedor_asociado(p.rut,fp.nrodocto)) else p.nombre end as prv_asociado, fp.femision,pp.nrocuota || ' de ' || fp.cuotas as cuotas,\n" +
                    " pp.fpago,pp.monto,pp.pagado,pp.monto- pp.pagado as saldo,g.nombre as tipopago,pp.id,g.codigo as codpago, \n" +
                    " case when per.nombre is NULL then 'NA' else per.nombre end as NomPer, pp.rut AS rut2, pp.tipdocto AS tipoc,pp.nrodocto AS ndocto,ct.femision AS fecham \n" +
                    "from prv_cuentasxpagar pp\n" +
                    "left join proveedor p on pp.rut=p.rut\n" +
                    "left join ctacteprv fp on fp.rut=pp.rut and fp.tipdocto=pp.tipdocto and fp.nrodocto=pp.nrodocto \n" +
                    "left join par_general g on g.tipo='TIPOPAGOPRV' and g.codigo=pp.tipopago\n" + 
                    "left join personal per on fp.contacto = per.rut and fp.tipopago=1\n"+
                    "left join ctactecli ct on ct.rut=pp.rut and ct.tipdocto='NCC' and ct.nrodocto=pp.nrodocto ";
            
            //ESTADOS
            if(rbEstadoPendientes.isSelected()){
                Query = Query + "Where pp.fpago < current_date and pp.estado in (0,2) and pp.tipdocto NOT IN ('REM','PRV','FIN','PRE') \n";
                
            }
            else if(rbEstadoVigentes.isSelected())
               Query = Query + "Where pp.estado in (0,2) and pp.fpago>= current_date and pp.tipdocto NOT IN ('REM','PRV','FIN','PRE') \n";
             
            else if(rbEstadoPagadas.isSelected())
                Query = Query + "Where pp.estado=1 and pp.tipdocto NOT IN ('REM','PRV','FIN','PRE') \n";
                
            
            else
              Query = Query + "Where pp.estado >=0 and pp.tipdocto NOT IN ('REM','PRV','FIN','PRE') \n";
               
                        //Fechas de vencimiento
            if(rbDesde.isSelected())
                Query = Query + "and pp.fpago between '" + getDesde() + "' and '" + getHasta() + "'\n";
            
            if(rbDesdeEmision.isSelected())
                Query = Query + "and ((fp.femision between '" + getDesde() + "' and '" + getHasta() + "') or (ct.femision between '" + getDesde() + "' and '" + getHasta() + "'))  \n";
            
            if(rbRut.isSelected())
                Query = Query + "and pp.rut=" + StrRut;
            
//            if(txRut.getText().trim() != ("")){
//                Query = Query + "and pp.rut=" + StrRut;
//            }
            
            // EJECUTA CONSULTA
            Rs = Sql.Select(Query);
            
            while(Rs.next()){
                ContPagos++;
                
                
                if(!rbEstadoPagadas.isSelected()){
                    TotalPagos = TotalPagos.add(new BigInteger(Rs.getString("saldo"))) ;
                    switch(Rs.getInt("codpago")){
                        case 2:     PagosTransferencia = PagosTransferencia.add(new BigInteger(Rs.getString("saldo"))) ;
                                    break;
                        case 3:     PagosCheques = PagosCheques.add(new BigInteger(Rs.getString("saldo"))) ;
                                    break;
                        default:    PagosOtros = PagosOtros.add(new BigInteger(Rs.getString("saldo"))) ;
                    }
                }else{
                 
                    TotalPagos = TotalPagos.add(new BigInteger(Rs.getString("pagado"))) ;
                    
                    switch(Rs.getInt("codpago")){
                        case 2:     PagosTransferencia = PagosTransferencia.add(new BigInteger(Rs.getString("pagado"))) ;
                                    break;
                        case 3:     PagosCheques = PagosCheques.add(new BigInteger(Rs.getString("pagado"))) ;
                                    break;
                        default:    PagosOtros = PagosOtros.add(new BigInteger(Rs.getString("pagado"))) ;
                    }
                }
                    
              
//                System.out.println(  Rs.getString("tipdocto").trim() + '-' +  Rs.getString("nrodocto").trim());
//                if ( Rs.getString("nrodocto").trim().equals("165")) 
//                    fmMain.Mensaje("para");
                System.out.println(Rs.getString("estado")+"-"+Rs.getString("nrodocto")+"-"+Rs.getString("tipopago")+"-"+Rs.getString("tipdocto")+"-"
                +"-"+Rs.getString("fpago")+"-"+"-"+Rs.getString("estado")+"-"+Rs.getString("codpago"));
                
                
                
                if (Rs.getString("tipoc") == null){ 
                
                       tipoc = " "; 
                
                }else {
                
                     tipoc = Rs.getString("tipoc");
                
                }
                
                
                
                if (Rs.getString("tipdocto") != null || tipoc.equals("CLI") ){
                
                    
                    
                        if (tipoc.equals("CLI")){
                        
                            tipdocto = Rs.getString("tipoc");
                            nrodocto = Rs.getString("ndocto");
                            femision = Rs.getString("fecham");
                            cuotas = "1 de 1";
                            
                        }else {
                        
                            tipdocto = Rs.getString("tipdocto");
                            nrodocto = Rs.getString("nrodocto");
                            femision = Rs.getString("femision");
                            cuotas =  Rs.getString("cuotas");
                        
                        
                        }
                }
                
//                TableModel.addRow(new Object[]{Rs.getString("estado").trim(), 
//                                               Rs.getString("rut").trim(), 
//                                                Rs.getString("nombre").trim(),
//                                               Rs.getString("tipdocto").trim(),
//                                               Rs.getString("nrodocto").trim(),
//                                               Rs.getString("prv_asociado").trim(),
//                                               Rs.getString("femision").trim(), 
//                                               Rs.getString("cuotas").trim(), 
//                                               Rs.getString("fpago").trim(), 
//                                               fmMain.FormatoTotal(Rs.getDouble("monto")),
//                                               fmMain.FormatoTotal(Rs.getDouble("pagado")),
//                                               fmMain.FormatoTotal(Rs.getDouble("saldo")),
//                                               Rs.getString("tipopago").trim(),
//                                               Rs.getString("id").trim(),
//                                               Rs.getString("procesado").trim()
//                });
//                
                
                
                
                TableModel.addRow(new Object[]{Rs.getString("estado").trim(), 
                                               Rs.getString("rut").trim(), 
                                               Rs.getString("nombre").trim(),
                                               tipdocto.trim(),
                                               nrodocto.trim(),
                                               Rs.getString("prv_asociado").trim(),
                                               femision.trim(), 
                                               cuotas.trim(), 
                                               Rs.getString("fpago").trim(), 
                                               fmMain.FormatoTotal(Rs.getDouble("monto")),
                                               fmMain.FormatoTotal(Rs.getDouble("pagado")),
                                               fmMain.FormatoTotal(Rs.getDouble("saldo")),
                                               Rs.getString("tipopago").trim(),
                                               Rs.getString("id").trim(),
                                               Rs.getString("procesado").trim()
                });
                
                
                
                
                
            }
//            String[] valores = new String[];
           
            lbPagoCheques.setText(fmMain.FormatoNumeroBig(PagosCheques));
            lbPagosTrans.setText(fmMain.FormatoNumeroBig(PagosTransferencia));
            lbPagosOtros.setText(fmMain.FormatoNumeroBig(PagosOtros));
            lbSumMontos.setText(fmMain.FormatoNumeroBig(TotalPagos));
            
            lbContPagos.setText(fmMain.FormatoTotal(ContPagos));
            Grilla.setDefaultRenderer(Object.class,new Utilidades.TableCellRenderer_Proveedor());
        

//            TableColumnModel columnModel = Grilla.getColumnModel();
//            TableColumn column = columnModel.getColumn(4); // Give column index here
//            column.setCellRenderer(new Utilidades.TableCellRenderer_Proveedor());
//            TableColumn column2 = columnModel.getColumn(6); // Give column index here
//            column2.setCellRenderer(new Utilidades.TableCellRenderer_Proveedor());
//            TableColumn column3 = columnModel.getColumn(8); // Give column index here
//            column3.setCellRenderer(new Utilidades.TableCellRenderer_Proveedor());
//            TableColumn column4 = columnModel.getColumn(9); // Give column index here
//            column4.setCellRenderer(new Utilidades.TableCellRenderer_Proveedor());
//            TableColumn column5 = columnModel.getColumn(10); // Give column index here
//            column5.setCellRenderer(new Utilidades.TableCellRenderer_Proveedor());
//            TableColumn column6 = columnModel.getColumn(11); // Give column index here
//            column6.setCellRenderer(new Utilidades.TableCellRenderer_Proveedor());
              Grilla.repaint();
        } catch (Exception e) {
            fmMain.Mensaje("Existe una inconsistencia en la información.");
             Logger.getLogger(pfReportePagosPrv.class.getName()).log(Level.SEVERE, null, e);
            
        }finally{
            Sql.Close();
        }
    }
    private void btPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPagarActionPerformed

        if (!Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString().equals("Pagado")) {
            
            String tipop = Grilla.getValueAt(Grilla.getSelectedRow(), 12).toString().trim();
            
            jdPagarPrv PagarCuotaPrv = new jdPagarPrv(null, true);
            PagarCuotaPrv.setLocationRelativeTo(null);
            PagarCuotaPrv.setTitle("Pagar Cuota Proveedor");
            PagarCuotaPrv.CargaPago(Grilla.getValueAt(Grilla.getSelectedRow(), 13).toString().trim());
            PagarCuotaPrv.setVisible(true);
            
            if (PagarCuotaPrv.GetPagado() == 1) {
                Grilla.setValueAt("Pagado", Grilla.getSelectedRow(), 0);
            }
        }
    }//GEN-LAST:event_btPagarActionPerformed

    private void btIrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIrActionPerformed
        if(!txRut.getText().isEmpty())
            CargaProveedor(txRut.getText());
        else{
            jdBuscarCliPrv BPC = new jdBuscarCliPrv(null, true);
            BPC.setLocationRelativeTo(null);
            BPC.setTitle("Buscar Proveedor");
            BPC.SetTipo(1);
            BPC.setVisible(true);
            CargaProveedor(BPC.GetRut());
        }           // TODO add your handling code here:
    }//GEN-LAST:event_btIrActionPerformed

    private void rbRutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbRutActionPerformed
        if(rbRut.isSelected()){
            txRut.setEnabled(true);
            txProveedor.setEnabled(true);
            btIr.setEnabled(true);
            txRut.requestFocus();
        }
    }//GEN-LAST:event_rbRutActionPerformed

    private void rbRutTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbRutTodosActionPerformed
        if(rbRutTodos.isSelected()){
            txRut.setEnabled(false);
            txProveedor.setEnabled(false);
            btIr.setEnabled(false);
        }
    }//GEN-LAST:event_rbRutTodosActionPerformed

    private void rbPeriodoTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPeriodoTodosActionPerformed
        if(rbPeriodoTodos.isSelected()){
            dtDesde.setEnabled(false);
            dtHasta.setEnabled(false);

        }
    }//GEN-LAST:event_rbPeriodoTodosActionPerformed

    private void rbDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDesdeActionPerformed
        if(rbDesde.isSelected()){
            dtDesde.setEnabled(true);
            dtHasta.setEnabled(true);
        }
    }//GEN-LAST:event_rbDesdeActionPerformed

    private void txRutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txRutKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
            btIr.doClick();
    }//GEN-LAST:event_txRutKeyPressed

    private void btExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcelActionPerformed
        if(Grilla.getRowCount()==0){
            fmMain.Mensaje("Nada que exportar");
            return;
        }
        
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo Excel",".xls");
        chooser.setFileFilter(filter);
        chooser.setDialogTitle("Guardar Informe en Excel");
        chooser.setMultiSelectionEnabled(false);
        chooser.setAcceptAllFileFilterUsed(false);
        
        if(chooser.showSaveDialog(null)== JFileChooser.APPROVE_OPTION){
            List<JTable> tb=new ArrayList<>();
            List<String> nom=new ArrayList<>();
            tb.add(Grilla);
            nom.add("Socios");
            String file=chooser.getSelectedFile().toString().concat(".xls");
            try {
                Exporter e = new Exporter(new File(file), tb, nom);
                if(e.export())
                    fmMain.Mensaje("Datos Exportados");
            } catch (Exception e) {
                fmMain.Mensaje(e.getMessage());
            }
            
            
        }
    }//GEN-LAST:event_btExcelActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

    if(Grilla.getValueAt(Grilla.getSelectedRow(), 3).toString().trim().equals("FAP")){    
        pfFAProveedor FAP = new pfFAProveedor();
        FAP.setOpaque(false);
        pnPestanas.addTab("FACTURA PROVEEDOR", FAP);
        FAP.CargaFactura(Grilla.getValueAt(Grilla.getSelectedRow(), 1).toString().trim(), Grilla.getValueAt(Grilla.getSelectedRow(), 4).toString().trim());
        PanelTab btc=new PanelTab(pnPestanas,0);
        pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(FAP), btc);
        pnPestanas.setSelectedIndex(pnPestanas.getTabCount()-1);
    }else if(Grilla.getValueAt(Grilla.getSelectedRow(), 3).toString().trim().equals("FAG")){
         String StrRut, StrCodigo, StrTipo;
            pfGastos reGastos = new pfGastos();;
            pnPestanas.addTab("Consulta de Vendedor", reGastos);
            PanelTab btc=new PanelTab(pnPestanas,0);
            pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(reGastos), btc);
            pnPestanas.setSelectedIndex(pnPestanas.getTabCount()-1);
        
            StrRut= Grilla.getValueAt(Grilla.getSelectedRow(), 1).toString().trim();
            StrCodigo = Grilla.getValueAt(Grilla.getSelectedRow(), 4).toString().trim();
            StrTipo = Grilla.getValueAt(Grilla.getSelectedRow(), 3).toString().trim();
        
            if (!StrRut.equals("")){
            reGastos.AbrirDocumento(StrRut, StrCodigo, StrTipo);
        
    }else{
           //SI ES TIPO BOG NO HACE NADA. FECHA DE REALIZACION 14-03-2018    
          }
    }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void GrillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMouseClicked

        if(evt.getClickCount()==2 && !Grilla.getValueAt(Grilla.getSelectedRow(),0).toString().equals("Pendiente")){
            jdPagadoPrvCli Pagado = new jdPagadoPrvCli(null, true);
            Pagado.setLocationRelativeTo(null);
            Pagado.setTitle("Pagos Proveedor");
            Pagado.CargaPagosPrv(Grilla.getValueAt(Grilla.getSelectedRow(), 13).toString().trim(),Grilla.getValueAt(Grilla.getSelectedRow(), 3).toString().trim());
            Pagado.setVisible(true);
        }
    }//GEN-LAST:event_GrillaMouseClicked

    private void txSkuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txSkuKeyPressed

//        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            TableRowSorter<TableModel>sorter = new TableRowSorter<TableModel>(Grilla.getModel());
            Grilla.setRowSorter(sorter);
            String sku = txSku.getText().trim();
            if (sku.length()==0)
            {
                sorter.setRowFilter(null);
            }
            else{
                int cant=0;
                int ev=0;
                String precio = "";
                sorter.setRowFilter(RowFilter.regexFilter(sku));
                
            }
//        }
    }//GEN-LAST:event_txSkuKeyPressed

    private void txSkuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txSkuKeyReleased
        TableRowSorter<TableModel>sorter = new TableRowSorter<TableModel>(Grilla.getModel());
        Grilla.setRowSorter(sorter);
        String sku = txSku.getText().trim();
        if (sku.length()==0)
        {
            sorter.setRowFilter(null);
        }
        else{
            int cant=0;
            int ev=0;
            String precio = "";
            sorter.setRowFilter(RowFilter.regexFilter(sku));
            int sum = 0;
                for(int i = 0; i < Grilla.getRowCount(); i++)
                        {
                            sum = sum + Integer.parseInt(Grilla.getValueAt(i, 9).toString().replace(",", ""));
                        }
                
                lbSumFiltro.setText((fmMain.FormatoNumeroBig(BigInteger.valueOf(sum))));
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txSkuKeyReleased

    private void txSkuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txSkuKeyTyped
        // TODO add your handling code here:
        if (Character.isLowerCase(evt.getKeyChar()))
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    }//GEN-LAST:event_txSkuKeyTyped

    private void txSkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txSkuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txSkuActionPerformed

    private void rbDesdeEmisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDesdeEmisionActionPerformed
        if(rbDesdeEmision.isSelected()){
            dtDesde.setEnabled(true);
            dtHasta.setEnabled(true);

        }
    }//GEN-LAST:event_rbDesdeEmisionActionPerformed
//6700

     public void SumaMonto() {
        int[] filasSelec = Grilla.getSelectedRows();
        int SumMontos = 0;    
        int Celda;
       
        for(int i = 0; i < filasSelec.length; i++){
            Celda = Integer.valueOf(Grilla.getValueAt(filasSelec[i], 9).toString().replaceAll(",",""));
            if(Grilla.getValueAt(filasSelec[i], 9).toString().isEmpty())
                continue;

            SumMontos = SumMontos + Celda;
            //fmMain.SetGuardar(TOOL_TIP_TEXT_KEY)
        }
        
        double suma = (double) SumMontos;
        
        lbSumDoc.setText(formateador.format(suma));

    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Desde;
    private javax.swing.JTable Grilla;
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btExcel;
    private javax.swing.JButton btIr;
    private javax.swing.JButton btPagar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private org.jdesktop.swingx.JXDatePicker dtDesde;
    private org.jdesktop.swingx.JXDatePicker dtHasta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private javax.swing.JLabel lbContPagos;
    private javax.swing.JLabel lbMonto;
    private javax.swing.JLabel lbPagoCheques;
    private javax.swing.JLabel lbPagosOtros;
    private javax.swing.JLabel lbPagosTrans;
    private javax.swing.JLabel lbSumDoc;
    private javax.swing.JLabel lbSumFiltro;
    private javax.swing.JLabel lbSumMontos;
    private javax.swing.JRadioButton rbDesde;
    private javax.swing.JRadioButton rbDesdeEmision;
    private javax.swing.JRadioButton rbEstadoPagadas;
    private javax.swing.JRadioButton rbEstadoPendientes;
    private javax.swing.JRadioButton rbEstadoTodas;
    private javax.swing.JRadioButton rbEstadoVigentes;
    private javax.swing.JRadioButton rbPeriodoTodos;
    private javax.swing.JRadioButton rbRut;
    private javax.swing.JRadioButton rbRutTodos;
    private javax.swing.JTextField txProveedor;
    private javax.swing.JTextField txRut;
    private javax.swing.JTextField txSku;
    // End of variables declaration//GEN-END:variables


}
