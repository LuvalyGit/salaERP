/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Conexion.ExeSqlLuvaly;
import Dialogos.jdAgregaBlog;
import Dialogos.jdBuscarCliPrv;
import Dialogos.jdBuscarProductos;
import Dialogos.jdContactos;
import Formularios.fmMain;
import static Formularios.fmMain.pnPestanas;
import Utilidades.ComboCodigos;
import Utilidades.ImgTabla;
import Utilidades.LogError;
import Utilidades.PanelTab;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author David Alcaman
 */
public class pfOCPReporte extends javax.swing.JPanel {
    
    private enum Columnas{Fecha,Numero,Rut,Nombre,Total,Estado};
    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    int g1Col,g1Row;
    
    public pfOCPReporte() {
        initComponents();
       
        dtFecha.setDate(new Date());
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        Grilla.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        Grilla2.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        Grilla2.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        Grilla2.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
        Grilla2.getColumnModel().getColumn(6).setCellRenderer(rightRenderer);
        Grilla.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            //Se ejecuta automáticamente cada vez que se hace una nueva selección. 
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(Grilla.getSelectedRowCount()>0){
                  //  CargaProductos();
                    CargaProductos();
                    CargaBlog();
                }
                    
            }

        });
        
        btAgregarBlog.setVisible(false);
        btContacto.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        pn1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        pMenu = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        MnuCerrarOC = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        rbSinEmitir = new javax.swing.JRadioButton();
        rbEmitidas = new javax.swing.JRadioButton();
        dtFecha = new org.jdesktop.swingx.JXDatePicker();
        btBuscar = new javax.swing.JButton();
        rbRecibidas = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        lbOrdenes = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lbProductos = new javax.swing.JLabel();
        rbCerradas = new javax.swing.JRadioButton();
        chk_Fecha = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        Grilla2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        Grilla3 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        GrillaBlog = new javax.swing.JTable();
        btAgregarBlog = new javax.swing.JButton();
        btContacto = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout pn1Layout = new javax.swing.GroupLayout(pn1);
        pn1.setLayout(pn1Layout);
        pn1Layout.setHorizontalGroup(
            pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn1Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jLabel2)
                .addContainerGap(95, Short.MAX_VALUE))
        );
        pn1Layout.setVerticalGroup(
            pn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jMenuItem1.setText("Abrir Orden de Compra");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        pMenu.add(jMenuItem1);

        MnuCerrarOC.setText("Cerrar Orden de Compra");
        MnuCerrarOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnuCerrarOCActionPerformed(evt);
            }
        });
        pMenu.add(MnuCerrarOC);

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonGroup1.add(rbSinEmitir);
        rbSinEmitir.setSelected(true);
        rbSinEmitir.setText("Sin Emitir");
        rbSinEmitir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSinEmitirActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbEmitidas);
        rbEmitidas.setText("Emitidas");
        rbEmitidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbEmitidasActionPerformed(evt);
            }
        });

        dtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dtFechaActionPerformed(evt);
            }
        });

        btBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos22/search.png"))); // NOI18N
        btBuscar.setText("BUSCAR");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbRecibidas);
        rbRecibidas.setText("Recibidas");
        rbRecibidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRecibidasActionPerformed(evt);
            }
        });

        jLabel3.setText("Notas");

        lbOrdenes.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbOrdenes.setForeground(new java.awt.Color(0, 51, 204));
        lbOrdenes.setText("0");

        jLabel4.setText("Productos");

        lbProductos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbProductos.setForeground(new java.awt.Color(0, 51, 204));
        lbProductos.setText("0");

        buttonGroup1.add(rbCerradas);
        rbCerradas.setText("Cerradas");
        rbCerradas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCerradasActionPerformed(evt);
            }
        });

        chk_Fecha.setText("Filtrar x Fecha");
        chk_Fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_FechaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(chk_Fecha)
                        .addGap(27, 27, 27)
                        .addComponent(dtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbOrdenes)
                        .addGap(52, 52, 52)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(lbProductos)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rbSinEmitir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rbEmitidas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rbRecibidas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rbCerradas, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                        .addComponent(btBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(959, 959, 959))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 27, Short.MAX_VALUE)
                        .addComponent(rbSinEmitir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbEmitidas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbRecibidas)
                        .addGap(0, 0, 0)
                        .addComponent(rbCerradas)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chk_Fecha)
                    .addComponent(dtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(lbOrdenes)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(lbProductos)))
                .addGap(19, 19, 19))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 1370, -1));

        Grilla.setAutoCreateRowSorter(true);
        Grilla.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Numero", "Rut", "Nombre", "Neto", "Estado", "Días", "Directo", "OCC"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.setComponentPopupMenu(pMenu);
        Grilla.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Grilla.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                GrillaMouseWheelMoved(evt);
            }
        });
        Grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaMouseClicked(evt);
            }
        });
        Grilla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                GrillaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                GrillaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(80);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(1).setMinWidth(75);
            Grilla.getColumnModel().getColumn(1).setPreferredWidth(75);
            Grilla.getColumnModel().getColumn(1).setMaxWidth(75);
            Grilla.getColumnModel().getColumn(2).setMinWidth(80);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(3).setPreferredWidth(250);
            Grilla.getColumnModel().getColumn(4).setMinWidth(0);
            Grilla.getColumnModel().getColumn(4).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(4).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(5).setMinWidth(120);
            Grilla.getColumnModel().getColumn(5).setPreferredWidth(120);
            Grilla.getColumnModel().getColumn(5).setMaxWidth(120);
            Grilla.getColumnModel().getColumn(6).setMinWidth(45);
            Grilla.getColumnModel().getColumn(6).setPreferredWidth(45);
            Grilla.getColumnModel().getColumn(6).setMaxWidth(45);
            Grilla.getColumnModel().getColumn(7).setMinWidth(0);
            Grilla.getColumnModel().getColumn(7).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(7).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(8).setMinWidth(0);
            Grilla.getColumnModel().getColumn(8).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(8).setMaxWidth(0);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 179, 934, 190));

        Grilla2.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        Grilla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "UM", "Cantidad", "Recibido", "Unitario", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Grilla2);
        if (Grilla2.getColumnModel().getColumnCount() > 0) {
            Grilla2.getColumnModel().getColumn(0).setMinWidth(90);
            Grilla2.getColumnModel().getColumn(0).setPreferredWidth(100);
            Grilla2.getColumnModel().getColumn(0).setMaxWidth(100);
            Grilla2.getColumnModel().getColumn(1).setPreferredWidth(250);
            Grilla2.getColumnModel().getColumn(2).setMinWidth(40);
            Grilla2.getColumnModel().getColumn(2).setPreferredWidth(40);
            Grilla2.getColumnModel().getColumn(2).setMaxWidth(40);
            Grilla2.getColumnModel().getColumn(3).setMinWidth(80);
            Grilla2.getColumnModel().getColumn(3).setPreferredWidth(90);
            Grilla2.getColumnModel().getColumn(3).setMaxWidth(90);
            Grilla2.getColumnModel().getColumn(4).setMinWidth(80);
            Grilla2.getColumnModel().getColumn(4).setPreferredWidth(90);
            Grilla2.getColumnModel().getColumn(4).setMaxWidth(90);
            Grilla2.getColumnModel().getColumn(5).setMinWidth(80);
            Grilla2.getColumnModel().getColumn(5).setPreferredWidth(90);
            Grilla2.getColumnModel().getColumn(5).setMaxWidth(90);
            Grilla2.getColumnModel().getColumn(6).setMinWidth(80);
            Grilla2.getColumnModel().getColumn(6).setPreferredWidth(90);
            Grilla2.getColumnModel().getColumn(6).setMaxWidth(90);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 934, 330));

        Grilla3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Documento", "Número", "Fecha", "Usuario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(Grilla3);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 179, 440, 180));

        GrillaBlog.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        GrillaBlog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Historial", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GrillaBlog.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane4.setViewportView(GrillaBlog);
        if (GrillaBlog.getColumnModel().getColumnCount() > 0) {
            GrillaBlog.getColumnModel().getColumn(0).setMinWidth(30);
            GrillaBlog.getColumnModel().getColumn(0).setPreferredWidth(30);
            GrillaBlog.getColumnModel().getColumn(0).setMaxWidth(30);
            GrillaBlog.getColumnModel().getColumn(2).setMinWidth(0);
            GrillaBlog.getColumnModel().getColumn(2).setPreferredWidth(0);
            GrillaBlog.getColumnModel().getColumn(2).setMaxWidth(0);
        }

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 410, 469, 310));

        btAgregarBlog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Agregar.png"))); // NOI18N
        btAgregarBlog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarBlogActionPerformed(evt);
            }
        });
        add(btAgregarBlog, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 370, 20, 30));

        btContacto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Provider24.png"))); // NOI18N
        btContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btContactoActionPerformed(evt);
            }
        });
        add(btContacto, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 370, 20, 30));
    }// </editor-fold>//GEN-END:initComponents
    public String getFechaAsString() {
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    return( sdf.format( (dtFecha.getDate()).getTime() ) );
    }
    static public int GetCol(String Col){
        return Columnas.valueOf(Col).ordinal();
    }
    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
        ExeSql Sql = new ExeSql();
        ResultSet Rs = null;
        String Query  ="";
        DefaultTableModel tmodel =  (DefaultTableModel)Grilla.getModel();
        DefaultTableModel tmodel2 = (DefaultTableModel)Grilla2.getModel();
        DefaultTableModel tmodel3 = (DefaultTableModel)Grilla3.getModel();
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        
        while(tmodel.getRowCount()>0)
              tmodel.removeRow(0);
        
        while(tmodel2.getRowCount()>0)
              tmodel2.removeRow(0);
        
        while(tmodel3.getRowCount()>0)
              tmodel3.removeRow(0);
        
        lbOrdenes.setText("0");
        lbProductos.setText("0");
        
        try {
            //BUSQUEDA SIN EMITIR
            if(rbSinEmitir.isSelected()){
               
                Query=  "select oc.femision,oc.nrodocto,oc.rut,p.nombre,oc.totalafecto,count(occ.*) as OCCH,min(occe.femision) as fechaoc,\n " +
                        "case oc.estado \n"+
                        "when -1 then 'Por Emitir' \n"+
                        "when 1 then 'Emitida' \n"+
                        "when 2 then 'Recibida' \n"+
                        "when 4 then 'Cerrada' \n"+
                        "end as estado, "+
                        "current_date - oc.femision as dias, oc.tipodespacho \n" +
                        "from ctacteprv oc\n" +
                        "left join proveedor p on oc.rut=p.rut \n" +
                        "left join ctacteprvdet d on oc.rut=d.rut and oc.nrodocto=d.nrodocto and oc.tipdocto=d.tipdocto \n" +
                        "left join occhdet occ on d.sku=occ.sku and occ.cantidad > occ.separado + occ.despachado\n" +
                        "left join occh occe on occe.codigo_oc=occ.codigo_oc and occe.orden=occ.orden and occe.rut=occ.rut\n" +
                        "where oc.tipdocto='NPP'\n" +
                        "and oc.estado = -1 \n";
                
                        if (chk_Fecha.isSelected()){
                           Query = Query + " and oc.femision = '"+ getFechaAsString() +"'\n"; 
                        }
                                
                        Query = Query + "group by oc.femision,oc.nrodocto,oc.rut,p.nombre,oc.totalafecto,oc.estado,oc.femision, oc.tipodespacho";                
                
                
                Rs = Sql.Select(Query);
            }
            //BUSQUEDA EMITIDAS
            else if (rbEmitidas.isSelected()) {
                
                Query=  "select oc.femision,oc.nrodocto,oc.rut,p.nombre,oc.totalafecto,count(occ.*) as OCCH,min(occe.femision) as fechaoc,\n " +
                        "case oc.estado \n"+
                        "when -1 then 'Por Emitir' \n"+
                        "when 1 then 'Emitida' \n"+
                        "when 2 then 'Recibida' \n"+
                        "when 4 then 'Cerrada' \n"+
                        "end as estado, \n"+
                        "current_date - oc.femision as dias, oc.tipodespacho \n" +
                        "from ctacteprv oc\n" +
                        "left join proveedor p on oc.rut=p.rut \n" +
                        "left join ctacteprvdet d on oc.rut=d.rut and oc.nrodocto=d.nrodocto and oc.tipdocto=d.tipdocto \n" +
                        "left join occhdet occ on d.sku=occ.sku and occ.cantidad > occ.separado + occ.despachado\n" +
                        "left join occh occe on occe.codigo_oc=occ.codigo_oc and occe.orden=occ.orden and occe.rut=occ.rut\n" +
                        "where oc.tipdocto='NPP'\n" +
                        "and oc.estado = 1 \n";
                
                        if (chk_Fecha.isSelected()){
                           Query = Query + " and oc.femision = '"+ getFechaAsString() +"'\n"; 
                        }
                                
                        Query = Query + "group by oc.femision,oc.nrodocto,oc.rut,p.nombre,oc.totalafecto,oc.estado,oc.femision, oc.tipodespacho";                
                
                
                Rs = Sql.Select(Query);
                
                
                
                
                
            }
            //BUSQUEDA RECIBIDAS
            else if (rbRecibidas.isSelected()) {
                
                Query=  "select oc.femision,oc.nrodocto,oc.rut,p.nombre,oc.totalafecto,count(occ.*) as OCCH,min(occe.femision) as fechaoc,\n " +
                        "case oc.estado \n"+
                        "when -1 then 'Por Emitir' \n"+
                        "when 1 then 'Emitida' \n"+
                        "when 2 then 'Recibida' \n"+
                        "when 4 then 'Cerrada' \n"+
                        "end as estado, "+
                        "current_date - oc.femision as dias, oc.tipodespacho \n" +
                        "from ctacteprv oc\n" +
                        "left join proveedor p on oc.rut=p.rut \n" +
                        "left join ctacteprvdet d on oc.rut=d.rut and oc.nrodocto=d.nrodocto and oc.tipdocto=d.tipdocto \n" +
                        "left join occhdet occ on d.sku=occ.sku and occ.cantidad > occ.separado + occ.despachado\n" +
                        "left join occh occe on occe.codigo_oc=occ.codigo_oc and occe.orden=occ.orden and occe.rut=occ.rut\n" +
                        "where oc.tipdocto='NPP'\n" +
                        "and oc.estado = 2 \n";
                
                        if (chk_Fecha.isSelected()){
                           Query = Query + " and oc.femision = '"+ getFechaAsString() +"'\n"; 
                        }
                                
                        Query = Query + "group by oc.femision,oc.nrodocto,oc.rut,p.nombre,oc.totalafecto,oc.estado,oc.femision, oc.tipodespacho";                
                
                
                Rs = Sql.Select(Query);
                
                
                
            }
            //BUSQUEDA CERRADAS
            else if (rbCerradas.isSelected()){
                 
                Query=  "select oc.femision,oc.nrodocto,oc.rut,p.nombre,oc.totalafecto,count(occ.*) as OCCH,min(occe.femision) as fechaoc,\n " +
                        "case oc.estado \n"+
                        "when -1 then 'Por Emitir' \n"+
                        "when 1 then 'Emitida' \n"+
                        "when 2 then 'Recibida' \n"+
                        "when 4 then 'Cerrada' \n"+
                        "end as estado, "+
                        "current_date - oc.femision as dias, oc.tipodespacho \n" +
                        "from ctacteprv oc\n" +
                        "left join proveedor p on oc.rut=p.rut \n" +
                        "left join ctacteprvdet d on oc.rut=d.rut and oc.nrodocto=d.nrodocto and oc.tipdocto=d.tipdocto \n" +
                        "left join occhdet occ on d.sku=occ.sku and occ.cantidad > occ.separado + occ.despachado\n" +
                        "left join occh occe on occe.codigo_oc=occ.codigo_oc and occe.orden=occ.orden and occe.rut=occ.rut\n" +
                        "where oc.tipdocto='NPP'\n" +
                        "and oc.estado = 4 \n";
                
                        if (chk_Fecha.isSelected()){
                           Query = Query + " and oc.femision = '"+ getFechaAsString() +"'\n"; 
                        }
                                
                        Query = Query + "group by oc.femision,oc.nrodocto,oc.rut,p.nombre,oc.totalafecto,oc.estado,oc.femision, oc.tipodespacho";                
                
                
                Rs = Sql.Select(Query);
                
                
                
                
                
                
                
            }
            
            if(Sql.GetRowCount()==0) return;
            
            lbOrdenes.setText(String.valueOf(Sql.GetRowCount()));
            
            while(Rs.next()){
               tmodel.addRow(new Object[]{
                                    sdf.format(Rs.getDate("femision")),
                                    Rs.getString("nrodocto"),
                                    Rs.getString("rut"),
                                    Rs.getString("nombre").trim(),
                                    fmMain.FormatoTotal(Rs.getDouble("totalafecto")),
                                    Rs.getString("estado"),
                                    Rs.getInt("dias"),
                                    Rs.getBoolean("tipodespacho"),
                                    Rs.getInt("occh")
                                            
                                    }); 
            }
            //Grilla.setDefaultRenderer(Object.class, new Utilidades.TableCellRendererColor_2());
            CuentaProductos();
            
        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
    }//GEN-LAST:event_btBuscarActionPerformed
    
    
    private void CargaProductos(){
        ExeSql Sql = new ExeSql();
        ExeSqlLuvaly luv = new ExeSqlLuvaly();
        ResultSet Rs, producto;
        DefaultTableModel tmodel = (DefaultTableModel)Grilla2.getModel();
        
        while(tmodel.getRowCount()>0)
              tmodel.removeRow(0);
        
        
            try {
                Rs = Sql.Select("select c.sku,p.nombre,u.um,c.cantidad, c.recibido,c.valorunitario,c.totallinea\n" +
                        "from ctacteprvdet c\n" +
                        "left join producto p on c.sku=p.sku \n" +
                        "left join par_unidad u on p.unidad=u.codigo\n" +
                        "where c.tipdocto='NPP'\n" +
                        "and c.nrodocto=" + Grilla.getValueAt(Grilla.getSelectedRow(), 1).toString().trim());
                if(Sql.GetRowCount()==0) return;
                while(Rs.next()){
                    producto =  luv.Select("select p.nombre,trim(u.unidad) as unidad, u.um from producto p \n"
                              + "LEFT JOIN par_unidad u ON u.codigo=p.unidad\n "
                              + "where p.sku = '"+Rs.getString("sku").trim()+"'");
                    producto.next();
                    tmodel.addRow(new Object[]{
                                        Rs.getString("sku").trim(),
                                        producto.getString("nombre").trim(),
                                        producto.getString("um").trim(),
                                        fmMain.FormatoTotal(Rs.getDouble("cantidad")),
                                        fmMain.FormatoTotal(Rs.getDouble("recibido")),
                                        fmMain.FormatoTotal(Rs.getDouble("valorunitario")),
                                        fmMain.FormatoTotal(Rs.getDouble("totallinea")),
                                        
                                        }); 
                    
                }
                
            } catch (Exception e) {
                System.out.println(e);
            }
            finally{
                Sql.Close();
            }
          
        
    }
    private void GrillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMouseClicked
//        g1Row = Grilla.rowAtPoint(evt.getPoint());
//        g1Col = Grilla.columnAtPoint(evt.getPoint());
//        CargaProductos();
//        CargaRecepciones();
    }//GEN-LAST:event_GrillaMouseClicked

    private void GrillaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GrillaKeyPressed
        
    }//GEN-LAST:event_GrillaKeyPressed

    private void GrillaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GrillaKeyReleased
//        if(evt.getKeyCode()==KeyEvent.VK_DOWN || evt.getKeyCode()==KeyEvent.VK_UP){
//            CargaProductos();
//            CargaRecepciones();
//        }
    }//GEN-LAST:event_GrillaKeyReleased
    
    

    private void dtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dtFechaActionPerformed
       // btBuscar.doClick();
    }//GEN-LAST:event_dtFechaActionPerformed

    
    private void GrillaMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_GrillaMouseWheelMoved
//        CambioDeBusqueda();
    }//GEN-LAST:event_GrillaMouseWheelMoved

    private void rbSinEmitirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSinEmitirActionPerformed
       // CambioDeBusqueda();
    }//GEN-LAST:event_rbSinEmitirActionPerformed

    private void rbEmitidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbEmitidasActionPerformed
       // CambioDeBusqueda();
    }//GEN-LAST:event_rbEmitidasActionPerformed

    private void rbRecibidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbRecibidasActionPerformed
       // CambioDeBusqueda();
    }//GEN-LAST:event_rbRecibidasActionPerformed

    private void rbCerradasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCerradasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbCerradasActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        pfNPProveedor PrvOC = new pfNPProveedor();
        PrvOC.setOpaque(false);
        pnPestanas.addTab("OC Proveedor", PrvOC);
        PanelTab btc=new PanelTab(pnPestanas,0);
        pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(PrvOC), btc);
        pnPestanas.setSelectedIndex(pnPestanas.getTabCount()-1);
        PrvOC.AbrirOCP(Grilla.getValueAt(Grilla.getSelectedRow(), 1).toString().trim());
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    private void CargaBlog(){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        
        GrillaBlog.setDefaultRenderer(Object.class, new ImgTabla());
        DefaultTableModel tm = (DefaultTableModel) GrillaBlog.getModel();
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy - hh:mm");
        SimpleDateFormat sdf2 = new SimpleDateFormat("dd-MMM-yyyy");
        
        while(tm.getRowCount()>0)
            tm.removeRow(0); 
        
        JLabel lbCall = new JLabel();
        JLabel lbMail = new JLabel();
        JLabel lbFin  = new JLabel();
        JLabel lbIni  = new JLabel();
        JLabel lbInfo = new JLabel();
        
        URL urlCall = this.getClass().getResource("/Iconos/Llamada.png");  
        URL urlMail = this.getClass().getResource("/Iconos/email.png");  
        URL urlIni =  this.getClass().getResource("/Iconos22/Go.png");  
        URL urlFin =  this.getClass().getResource("/Iconos/camion.png");  
        URL urlInfo =  this.getClass().getResource("/Iconos/info.png");
         
        ImageIcon IconoCall =  new ImageIcon(urlCall); 
        ImageIcon IconoMail =  new ImageIcon(urlMail); 
        ImageIcon IconoIni  =  new ImageIcon(urlIni); 
        ImageIcon IconoFin  =  new ImageIcon(urlFin); 
        ImageIcon IconoInfo =  new ImageIcon(urlInfo); 
        
        lbCall.setIcon(IconoCall);
        lbMail.setIcon(IconoMail);
        lbIni.setIcon(IconoIni);
        lbFin.setIcon(IconoFin);
        lbInfo.setIcon(IconoInfo);
        
        try {
            Rs = Sql.Select("SELECT id,fecha,usuario,texto,tipo,compromiso,fcompromiso\n" +
                            "FROM blog_ocp\n" +
                            "where rut=" + Grilla.getValueAt(Grilla.getSelectedRow(),2).toString().trim() + "\n" +
                            "and tipdocto='NPP' \n" + 
                            "and nrodocto=" + Grilla.getValueAt(Grilla.getSelectedRow(), 1).toString().trim());
            
            while(Rs.next()){
                 //Tipo 0 = Llamada
                if(Rs.getInt("tipo")==1){
                    tm.addRow(new Object[]{lbCall,sdf.format(Rs.getTimestamp("fecha"))+ "   [" + Rs.getString("usuario").trim().toUpperCase() + "]",Rs.getString("id")});
                    
                }
                //Tipo 1 = Correo
                else if(Rs.getInt("tipo")==2) {
                    tm.addRow(new Object[]{lbMail,sdf.format(Rs.getTimestamp("fecha"))+ "   [" + Rs.getString("usuario").trim().toUpperCase() + "]",Rs.getString("id")});
                }
                // Tipo 2 = Bloque
                else if(Rs.getInt("tipo")==3) {
                    tm.addRow(new Object[]{lbIni,sdf.format(Rs.getTimestamp("fecha"))+ "   [" + Rs.getString("usuario").trim().toUpperCase() + "]",Rs.getString("id")});
                }
                // Tipo 3 = Desbloqueo
                else if(Rs.getInt("tipo")==4) {
                    tm.addRow(new Object[]{lbFin,sdf.format(Rs.getTimestamp("fecha"))+ "   [" + Rs.getString("usuario").trim().toUpperCase() + "]",Rs.getString("id")});
                }
                
                else if(Rs.getInt("tipo")==5) {
                    tm.addRow(new Object[]{lbInfo,sdf.format(Rs.getTimestamp("fecha"))+ "   [" + Rs.getString("usuario").trim().toUpperCase() + "]",Rs.getString("id")});
                }
                
                 //Mensaje
                tm.addRow(new Object[]{" ",Rs.getString("texto"),Rs.getString("id")});
                if(Rs.getBoolean("compromiso"))
                    tm.addRow(new Object[]{" ", "Compromiso: " + sdf2.format(Rs.getTimestamp("fcompromiso"))});
                    
            }
            
        } catch (Exception e) {
            fmMain.Mensaje("Ha ocurrido un error");
            LogError.Guardar(this.getClass().getSimpleName(),e.getMessage());
        } finally {
            Sql.Close();
        }
    }
    
    private void btAgregarBlogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarBlogActionPerformed
        jdAgregaBlog AddBlog = new jdAgregaBlog(null, true);
        AddBlog.SetDatos(Grilla.getValueAt(Grilla.getSelectedRow(),2).toString().trim(),"OCP",Grilla.getValueAt(Grilla.getSelectedRow(), 1).toString().trim());
        AddBlog.setTitle("Nuevo Registro");
        AddBlog.setLocationRelativeTo(btAgregarBlog);
        AddBlog.setVisible(true);
        if(AddBlog.GetGuardar())
        CargaBlog();
    }//GEN-LAST:event_btAgregarBlogActionPerformed

    private void btContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btContactoActionPerformed
        String Vendedor;
        String RutMaster = Grilla.getValueAt(Grilla.getSelectedRow(),2).toString().trim();
        try {
            jdContactos Con = new jdContactos(null, true);
            Vendedor = Con.Show(RutMaster, "PRV",false).trim();
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btContactoActionPerformed

    private void MnuCerrarOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnuCerrarOCActionPerformed
        if(fmMain.GetUsuarioAdminOCP()){
            if(fmMain.OkCancel("Al cerrar la Orden se liberarán los productos no recepcionados \n\n ¿Está seguro de cerrar?")==JOptionPane.OK_OPTION){
                ExeSql Sql = new ExeSql();
                try {
                    //Elimina productos sin recepcionar
                    Sql.ExeSql( " delete from ctacteprvdet\n" +
                                "where tipdocto='OCP'\n" +
                                "and nrodocto="+ Grilla.getValueAt(Grilla.getSelectedRow(), 1).toString().trim() +"\n" +
                                "and recibido=0;");
                    Sql.ExeSql(" update ctacteprvdet\n" +
                                "set cantidad=recibido\n" +
                                "where recibido>0\n" +
                                "and tipdocto='OCP'\n" +
                                "and nrodocto=" + Grilla.getValueAt(Grilla.getSelectedRow(), 1).toString().trim());
                    Sql.Commit();
                    fmMain.Mensaje("Orden de Proveedor Cerrada con exito");
                } catch (Exception e) {
                    fmMain.Mensaje("Ocurrio un error mientras se cerraba la orden");
                } finally{
                    Sql.Close();
                }
            }
        }
        else{
            fmMain.Mensaje("Usted no esta autorizado para esta operacion");
        }
    }//GEN-LAST:event_MnuCerrarOCActionPerformed

    private void chk_FechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_FechaActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_chk_FechaActionPerformed
    private void CuentaProductos(){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        
        String Todos="";
        
        for(int i=0; i< Grilla.getModel().getRowCount() ; i++){
            Todos = Todos + Grilla.getValueAt(i, 1).toString().trim() + ",";
        }
        Todos = "(" + Todos.substring(0, Todos.length()-1) + ")";
        
        try {
            Rs = Sql.Select("select count(*) as cantidad\n" +
                            "from ctacteprvdet\n" +
                            "where tipdocto='NPP'\n" +
                            "and nrodocto in " + Todos);
           
            Rs.next();
            lbProductos.setText(Rs.getString("cantidad"));
            
                    
        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla;
    private javax.swing.JTable Grilla2;
    private javax.swing.JTable Grilla3;
    private javax.swing.JTable GrillaBlog;
    private javax.swing.JMenuItem MnuCerrarOC;
    private javax.swing.JButton btAgregarBlog;
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btContacto;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chk_Fecha;
    private org.jdesktop.swingx.JXDatePicker dtFecha;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbOrdenes;
    private javax.swing.JLabel lbProductos;
    private javax.swing.JPopupMenu pMenu;
    private javax.swing.JPanel pn1;
    private javax.swing.JRadioButton rbCerradas;
    private javax.swing.JRadioButton rbEmitidas;
    private javax.swing.JRadioButton rbRecibidas;
    private javax.swing.JRadioButton rbSinEmitir;
    // End of variables declaration//GEN-END:variables
}
