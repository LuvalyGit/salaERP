/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Dialogos.jdBuscarProductos;
import Dialogos.jd_UbicacionProductos;
import Formularios.fmMain;
import Utilidades.Combo_CodStr;
import Utilidades.ComboCodigos;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author luvaly
 */
public class AsignaUbicacion extends javax.swing.JPanel {
public boolean booAgregando = false;
DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();    
    /**
     * Creates new form AsignaUbicacion
     */
 
    public AsignaUbicacion() {
        initComponents();
        limpia_all();
        btEliminarTodo.setVisible(false);
        btEliminar_linea.setVisible(false);
        btLimpiaTodo.setVisible(false);
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        Grilla_prod.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        CargaBodega();
     //panel.setFocusTraversalPolicy(new FocusTraversalOnArray(new Component[]{txtUbicacion, txtSku}));
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        panel = new javax.swing.JPanel();
        txtSku = new javax.swing.JTextField();
        btLimpiaTodo = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        cbBodega = new javax.swing.JComboBox<String>();
        cbRack = new javax.swing.JComboBox<String>();
        cbMetro = new javax.swing.JComboBox<String>();
        btDesde = new javax.swing.JButton();
        txtUbicacion = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txNombreUbica = new javax.swing.JTextField();
        btEliminarTodo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Grilla_prod = new javax.swing.JTable();
        btEliminar_linea = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jTextField1.setText("jTextField1");

        jTextField2.setText("jTextField2");

        txtSku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSkuActionPerformed(evt);
            }
        });
        txtSku.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSkuKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSkuKeyReleased(evt);
            }
        });

        btLimpiaTodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/erase16.png"))); // NOI18N
        btLimpiaTodo.setText("Limpiar");
        btLimpiaTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimpiaTodoActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("UBICACION"));

        cbBodega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBodegaActionPerformed(evt);
            }
        });

        cbRack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRackActionPerformed(evt);
            }
        });

        cbMetro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMetroActionPerformed(evt);
            }
        });

        btDesde.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Ok.png"))); // NOI18N
        btDesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDesdeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbBodega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbRack, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbMetro, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbBodega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbRack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbMetro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btDesde)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtUbicacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUbicacionKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUbicacionKeyReleased(evt);
            }
        });

        jLabel1.setText("Ubicacion");

        txNombre.setEditable(false);
        txNombre.setEnabled(false);

        jLabel3.setText("Nombre");

        txNombreUbica.setEditable(false);

        btEliminarTodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/trush16.png"))); // NOI18N
        btEliminarTodo.setText("Elimina Todo");
        btEliminarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminarTodoActionPerformed(evt);
            }
        });

        jLabel2.setText("Sku");

        Grilla_prod.setAutoCreateRowSorter(true);
        Grilla_prod.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod", "Nombre", "Cant", "Graba"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla_prod.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Grilla_prodMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(Grilla_prod);
        if (Grilla_prod.getColumnModel().getColumnCount() > 0) {
            Grilla_prod.getColumnModel().getColumn(0).setMinWidth(100);
            Grilla_prod.getColumnModel().getColumn(0).setPreferredWidth(100);
            Grilla_prod.getColumnModel().getColumn(0).setMaxWidth(100);
            Grilla_prod.getColumnModel().getColumn(1).setMinWidth(400);
            Grilla_prod.getColumnModel().getColumn(1).setPreferredWidth(400);
            Grilla_prod.getColumnModel().getColumn(1).setMaxWidth(400);
            Grilla_prod.getColumnModel().getColumn(3).setMinWidth(0);
            Grilla_prod.getColumnModel().getColumn(3).setPreferredWidth(0);
            Grilla_prod.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        btEliminar_linea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Eliminar.png"))); // NOI18N
        btEliminar_linea.setText("Eliminar Linea");
        btEliminar_linea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminar_lineaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addGap(0, 43, Short.MAX_VALUE)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelLayout.createSequentialGroup()
                                                .addGap(63, 63, 63)
                                                .addComponent(txtUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel1))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txNombreUbica, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(46, 46, 46)
                                        .addComponent(txtSku, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(10, 10, 10)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(26, 26, 26)
                                .addComponent(txNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addGap(46, 46, 46)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btEliminar_linea, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                            .addComponent(btLimpiaTodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btEliminarTodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel1))
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txNombreUbica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtSku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btEliminar_linea, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btLimpiaTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btEliminarTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private String  existe_sku(String Codigo, String ubicacion){
    ExeSql Sql = new ExeSql();
        ResultSet Rs1;
        String Query2 ="";
        String strUbicacion = "";
        
         try{
         
          Query2 = "select * from mt_productos where sku = '" + Codigo + "' and ubicacion = '" + ubicacion + "';";
            Rs1 = Sql.Select(Query2);
                     if (Rs1.next()){
                        return(Rs1.getString("sku"));
                     }   
         }
     catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }          
        return(""); 
    }
    
     public void CargaBodega(){
        DefaultComboBoxModel value;
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        String Query="";
        cbBodega.removeAllItems();
        int i=0;
        value =new DefaultComboBoxModel();
        try {
            Query=" select codigo, bodega from mt_bodega order by codigo;";
            Rs = Sql.Select(Query);
            if(Sql.GetRowCount()==0) return;
           value.addElement(new Combo_CodStr("Seleccione","",0));     
           while(Rs.next()){
            value.addElement(new Combo_CodStr(Rs.getString("bodega").trim(),Rs.getString("codigo").trim(),i));
            System.out.println(Rs.getString("bodega").trim());
            i++;
           } 
           cbBodega.setModel(value);
           cbBodega.setSelectedIndex(0);
           
           

        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
     }
     
     
     public void CargaRack(){
        DefaultComboBoxModel value;
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        String Query="";
        cbRack.removeAllItems();
        int i=0;
        
//        CboProveedor.addItem("<Todos>");  
//        CboProveedor.setSelectedIndex(0);
        value =new DefaultComboBoxModel();
        try {
           
            Query=" Select r.rack, r.codigo from mt_rack r \n" +
                  " where r.bodega = (select b.codigo from mt_bodega b where b.bodega='"+cbBodega.getSelectedItem().toString().trim()+"')";
            
            Rs = Sql.Select(Query);
            if(Sql.GetRowCount()==0) return;
             value.addElement(new ComboCodigos("Seleccione",0)); 
           while(Rs.next()){
            value.addElement(new ComboCodigos(Rs.getString("rack").trim(),Rs.getInt("codigo")));
            System.out.println(Rs.getString("rack").trim());
            i++;
           } 
           cbRack.setModel(value);
           if (cbRack.getSelectedIndex()>0){
                    cbRack.setSelectedIndex(0);}
        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
     }
     
     
     public void CargaMetro(){
        DefaultComboBoxModel value;
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        String Query="";
        cbMetro.removeAllItems();
        
        
//        CboProveedor.addItem("<Todos>");  
//        CboProveedor.setSelectedIndex(0);
        value =new DefaultComboBoxModel();
        try {
    
//            Query=" Select r.rack, r.codigo from mt_rack r \n" +
//                  " where r.bodega = (select b.codigo from mt_bodega b where b.bodega='"+cbBodega.getSelectedItem().toString().trim()+"')";
            
             
             
            String strbodega="";
               if ((cbRack.getSelectedIndex()>=0) && (cbBodega.getSelectedIndex()>=0)){
                   
                        Combo_CodStr bodega = (Combo_CodStr) cbBodega.getSelectedItem();
                        bodega.getId(); 
                        
                        ComboCodigos RackCodigo = (ComboCodigos) cbRack.getSelectedItem();
                        RackCodigo.getId();
            
                      
                         
                     Query =" Select m.metro,m.codigo from mt_bodega b\n" +
                    " left join mt_rack r\n" +
                    " on b.codigo = r.bodega\n" +
                    " left join mt_metro m\n" +
                    " on m.rack = r.codigo\n" +
                    " where m.rack =" + RackCodigo.getId() + " and r.bodega = '" + bodega.getId() +"' order by m.codigo;";    
                   } 
               else
               {
                   return;
               }
            
            Rs = Sql.Select(Query);
            if(Sql.GetRowCount()==0) return;
             value.addElement(new ComboCodigos("Seleccione",0)); 
           while(Rs.next()){
            value.addElement(new ComboCodigos(Rs.getString("metro").trim(),Rs.getInt("codigo")));
            System.out.println(Rs.getString("metro").trim());
            
           } 
           cbMetro.setModel(value);
           cbMetro.setSelectedIndex(0);
        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
     }
     
     
     
    private void agrega_linea()
    {
        String codigo="";
        int pos = -1;
        DefaultTableModel TableModel = (DefaultTableModel) Grilla_prod.getModel();
         
                 
        //---- Inicio----------------------------
        // Queda seteado para grabar
        if  (booAgregando == false)
        {
        for (int i=0; i<=Grilla_prod.getRowCount()-1; i++ ){
                   Grilla_prod.setValueAt("0", i, 3);
                }
        booAgregando = true;
        Grilla_prod.changeSelection(0, 0 , false, false);
        }
        //----------------------------------------
                 
          // Busca si el codigo se ha ingresado anteriormente en la grilla
        for (int i=0; i<=Grilla_prod.getRowCount()-1; i++ ){
                codigo= Grilla_prod.getValueAt(i, 0).toString().trim();
                if (codigo.equals(txtSku.getText().trim())){
                    pos = i;
                    break;
                }
            }
         // Si existe el codigo en la grilla modificara la cantidad ingresada
        if (pos>=0){
                fmMain.Mensaje("Ya existe Codigo en la grilla no se agregara en la lista");
                txtSku.setText("");
                txNombre.setText("");
                txtSku.requestFocus();
                return;
         }
        
        if (existe_sku(txtSku.getText().trim(), txtUbicacion.getText().trim())!= ""){
             fmMain.Mensaje("Ya existe Codigo Sku para la Ubicación :" + txNombreUbica.getText().trim());
                txtSku.setText("");
                txNombre.setText("");
                txtSku.requestFocus();
                return;
            
        }
        
        // Si no existe el producto se marca como ingresado para que ese solo sea insertado.

        TableModel.addRow(new Object[]{txtSku.getText().trim(), txNombre.getText().trim(),"0","1"});
        // se cambia a procedimiento para eliminar el boton
        grabar_linea(); 
         txtSku.setText("");
         txNombre.setText("");
         txtSku.requestFocus();
    }
    
    private void btEliminarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminarTodoActionPerformed
        // TODO add your handling code here:
            // TODO add your handling code here:
//        DefaultTableModel TableModel = (DefaultTableModel) Grilla_prod.getModel();
//        TableModel.removeRow(Grilla_prod.getSelectedRow());
        
        ExeSql Sql = new ExeSql();
        ResultSet Rs, Rs1;
        String Query2, SKU, qryDel ;
        String strUbicacion = txtUbicacion.getText().trim();
        
         try{ 
             
             Query2= "select * from mt_productos where ubicacion ='" + strUbicacion + "';";
             Rs1 = Sql.Select(Query2);
              if (Rs1.next()){
                        if (Rs1.getInt("cant")>0){
                            fmMain.Mensaje("No se puede eliminar este producto ya que su cantidad ingresada es:" + Rs1.getInt("cant"));
                            return;
                        }
                        else
                        {
                            // Elimina el registro Seleccionado
                             qryDel = "delete from mt_productos where ubicacion ='" + strUbicacion + "';";
                             Sql.ExeSql(qryDel);
                             limpiar_prod();
                             Carga_Prod_Ubicacion(strUbicacion);
                             
                        }   
               }
              else
              {
                  fmMain.Mensaje("Producto no Existe" );
              }
         } 
        catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }    
 
    }//GEN-LAST:event_btEliminarTodoActionPerformed

    private void txtUbicacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUbicacionKeyPressed
        // TODO add your handling code here:
        ExeSql Sql = new ExeSql();
        ResultSet Rs, Rs1;
        String Query2 ;
        String strUbicacion = "";
        
        
         try{ 
                if(evt.getKeyCode() == KeyEvent.VK_ENTER){
                    strUbicacion = txtUbicacion.getText().trim();
                 String nombrePalabra =strUbicacion + Character.toString(evt.getKeyChar());    
                 
                 String ubicaArray[] = strUbicacion.split("\\.");
                 if (ubicaArray.length<3 ){
                        fmMain.Mensaje("Favor revise el codigo, no es de Ubicacion");
                        txtUbicacion.setText("");
                        txNombreUbica.setText("");
                        txtUbicacion.requestFocus();
                        return;   
                 } 
                 
                 
                if (nombrePalabra.substring(0,3).trim().equals("LVL") || nombrePalabra.substring(0,4).trim().equals("TRAN")){
                    System.out.println("Codigo Correcto de Ubicacion");
                }
                else
                {
                        fmMain.Mensaje("Favor revise el codigo, no es de Ubicacion");
                        txtUbicacion.setText("");
                        txNombreUbica.setText("");
                        txtUbicacion.requestFocus();
                        return;   
                }
                    //String ubicaArray[] = strUbicacion.split("\\.");
                    
                    Query2 = "SELECT (b.bodega ||' - '|| r.rack ||' - '|| m.metro) as ubc\n" +
                    " from mt_bodega b, mt_rack r, mt_metro m\n" +
                    " where b.codigo='" + ubicaArray[0] + "' and r.codigo= " + ubicaArray[1] +  " and m.codigo= " + ubicaArray[2] + "  and m.rack=" + ubicaArray[1];   
                    Rs1 = Sql.Select(Query2);
                     if (Rs1.next()){
                        strUbicacion =Rs1.getString("ubc").trim();
                        txNombreUbica.setText(strUbicacion);
                        Carga_Prod_Ubicacion(txtUbicacion.getText().trim());
                       }   
                     else
                     {
                         fmMain.Mensaje("Ubicacion no encontrada, favor revise la ubicación");
                         limpia_all();
                     }
                      
                     
                } 
            }
     catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }    
    }//GEN-LAST:event_txtUbicacionKeyPressed

      private void setea_pivot_grabar(){
        //---- Setea Pivot para grabar----------------------------
        // Queda seteado para grabar
        if  (booAgregando == false)
        {
        for (int i=0; i<=Grilla_prod.getRowCount()-1; i++ ){
                   Grilla_prod.setValueAt("0", i, 3);
                }
        booAgregando = true;
        Grilla_prod.changeSelection(0, 0 , false, false);
        }
    }
      
      
    private void grabar_linea(){
    
    // TODO add your handling code here:
    DefaultTableModel TableModel = (DefaultTableModel) Grilla_prod.getModel();
    ExeSql Sql = new ExeSql();
    ResultSet Rs;
    String Query, qryIns, qryUpd,Sku,Ubicacion,StUsuario ;
    Ubicacion ="";
    
    try{ 
//                qryUpd = "delete from mt_productos where ubicacion ='" + txtUbicacion.getText().trim() + "';";
//                Sql.ExeSql(qryUpd);
                for (int i=0; i<=Grilla_prod.getRowCount()-1; i++ ){
                    
                    if (Grilla_prod.getValueAt(i, 3).toString().trim().equals("1"))
                    {   
                        Sku= Grilla_prod.getValueAt(i, 0).toString().trim();
                        Ubicacion = txtUbicacion.getText().trim();
                        StUsuario = fmMain.GetUsuario();
                        qryIns = "insert into mt_productos (ubicacion,sku,usuario,cant)\n" +
                        " values ('" + Ubicacion + "','" + Sku + "','" + StUsuario +  "',0);";
                        Sql.ExeSql(qryIns);
                    }  
                       
                       
                }

                //fmMain.LimpiaGrilla(TableModel);
                Sql.Commit();
                limpiar_prod();
                Carga_Prod_Ubicacion(Ubicacion);
                //fmMain.Mensaje("Ubicacion grabada Correctamente");
                setea_pivot_grabar();
          }
     catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }    
                
    
      }
    
    private void txtSkuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSkuKeyPressed
        // TODO add your handling code here:

        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           String nombrePalabra =txtSku.getText() + Character.toString(evt.getKeyChar());
           if (nombrePalabra.substring(0,3).trim().equals("LVL") || nombrePalabra.substring(0,3).trim().equals("TRAN")){
               trae_ubicacion(nombrePalabra);
               txtSku.setText("");
               txtUbicacion.setText(nombrePalabra);
               Carga_Prod_Ubicacion(nombrePalabra);
               txtSku.requestFocus();
               return;   }
            else{
//                        jdBuscarProductos BP = new jdBuscarProductos(null, true);
//                        BP.setLocationRelativeTo(null);
//                        BP.setTitle("Buscar Producto");
//                        BP.SetTexto(txtSku.getText());
//                        BP.setVisible(true);
//                        if(!"".equals(BP.GetCodigo()))
//                        CargaProducto(BP.GetCodigo());
                carga_producto();
                    }
            //carga_producto();
        }

//        else if(Character.isLetter(evt.getKeyChar())){
//
//            jdBuscarProductos BP = new jdBuscarProductos(null, true);
//            BP.setLocationRelativeTo(null);
//            BP.setTitle("Buscar Producto");
//            BP.SetTexto(txtSku.getText() + Character.toString(evt.getKeyChar()));
//            BP.setVisible(true);
//            
//            if(!"".equals(BP.GetCodigo()))
//            CargaProducto(BP.GetCodigo());
//        }
    }//GEN-LAST:event_txtSkuKeyPressed

   
    public  void limpia_all(){
   // TODO add your handling code here:
        limpiar_prod();
        txtUbicacion.setText("");
        txNombreUbica.setText("");
        txtUbicacion.requestFocus();
    }
    
    private void limpiar_prod(){
         DefaultTableModel dfTm = (DefaultTableModel) Grilla_prod.getModel();
        txNombre.setText("");
        txtSku.setText("");
        fmMain.LimpiaGrilla(dfTm);
        txtUbicacion.requestFocus();
        
    }
       
    
    private void btLimpiaTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimpiaTodoActionPerformed
        // TODO add your handling code here:
        limpia_all();
        
    }//GEN-LAST:event_btLimpiaTodoActionPerformed

    private void txtUbicacionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUbicacionKeyReleased
        // TODO add your handling code here:
      txtUbicacion.setText( txtUbicacion.getText().toUpperCase());
    }//GEN-LAST:event_txtUbicacionKeyReleased

    private void txtSkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSkuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSkuActionPerformed

    private void cbBodegaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBodegaActionPerformed
        ExeSql Sql = new ExeSql();
        ResultSet Rs;

                  if ((cbBodega.getSelectedIndex()>0) && (cbRack.getSelectedIndex()>0) && (cbBodega.getSelectedIndex()>0)){
                          Combo_CodStr id = (Combo_CodStr) cbBodega.getSelectedItem();
                          txtUbicacion.setText(id.getId()); 
                          
                          ComboCodigos id2 = (ComboCodigos) cbRack.getSelectedItem();
                          txtUbicacion.setText(txtUbicacion.getText().trim()+ "." +  id2.getId()); 
                          
                          ComboCodigos id3 = (ComboCodigos) cbMetro.getSelectedItem();
                          txtUbicacion.setText(txtUbicacion.getText().trim()+ "." +  id3.getId()); 
                  }
                  else{
                      
                          txtUbicacion.setText("");
                        
                   } 
        
        try{
//            Rs= Sql.Select("Select r.rack from mt_rack r \n" +
//                "where r.bodega = (select b.codigo from mt_bodega b where b.bodega='"+cbBodega.getSelectedItem().toString().trim()+"')");
//            cbRack.removeAllItems();
//            while (Rs.next()){
//                cbRack.addItem(Rs.getString("rack"));
//            }
            CargaRack();
            

        }
        catch(Exception e)
        {
            fmMain.Mensaje("Error: "+e);
        }
        finally{
            Sql.Close();
        }
    }//GEN-LAST:event_cbBodegaActionPerformed

    private void cbRackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRackActionPerformed

        if (cbRack.getItemCount()==0)
        {
            return;
        }

        ExeSql Sql = new ExeSql();
        ResultSet Rs;

        try{
            
//            Rs= Sql.Select("Select m.metro from mt_metro m \n" +
//                "where m.rack = (select r.codigo from mt_rack r where r.rack='"+cbRack.getSelectedItem().toString().trim()+"' and r.bodega = (select b.codigo from mt_bodega b where b.bodega='"+cbBodega.getSelectedItem().toString().trim()+"')) order by m.codigo");
//            
//            cbMetro.removeAllItems();
//            while (Rs.next()){
//                cbMetro.addItem(Rs.getString("metro"));
//            }
             if ((cbBodega.getSelectedIndex()>0) && (cbRack.getSelectedIndex()>0) && (cbMetro.getSelectedIndex()>0)){
                          Combo_CodStr id = (Combo_CodStr) cbBodega.getSelectedItem();
                          txtUbicacion.setText(id.getId()); 
                          
                          ComboCodigos id2 = (ComboCodigos) cbRack.getSelectedItem();
                          txtUbicacion.setText(txtUbicacion.getText().trim()+ "." +  id2.getId()); 
                          
                          ComboCodigos id3 = (ComboCodigos) cbMetro.getSelectedItem();
                          txtUbicacion.setText(txtUbicacion.getText().trim()+ "." +  id3.getId()); 
               }
                  else{
                      
                          txtUbicacion.setText("");
                       
                        
             } 
            
            
            
            
            CargaMetro();

        }
        catch(Exception e)
        {
            fmMain.Mensaje("Error: "+e);
        }
        finally{
            Sql.Close();
        }
    }//GEN-LAST:event_cbRackActionPerformed

    private void cbMetroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMetroActionPerformed
        // TODO add your handling code here:
     if ((cbBodega.getSelectedIndex()>0) && (cbRack.getSelectedIndex()>0) && (cbMetro.getSelectedIndex()>0))
     {
                          Combo_CodStr id = (Combo_CodStr) cbBodega.getSelectedItem();
                          txtUbicacion.setText(id.getId()); 
                          
                          ComboCodigos id2 = (ComboCodigos) cbRack.getSelectedItem();
                          txtUbicacion.setText(txtUbicacion.getText().trim()+ "." +  id2.getId()); 
                          
                          ComboCodigos id3 = (ComboCodigos) cbMetro.getSelectedItem();
                          txtUbicacion.setText(txtUbicacion.getText().trim()+ "." +  id3.getId()); 
                          btDesde.doClick();
                          
    }
                  else{
                          txtUbicacion.setText("");
    }    
        
    }//GEN-LAST:event_cbMetroActionPerformed

    private void btDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDesdeActionPerformed
        // TODO add your handling code here:
      ExeSql Sql = new ExeSql();
        ResultSet Rs, Rs1;
        String Query2 ;
        String strUbicacion = "";
        
         try{         
           strUbicacion = txtUbicacion.getText().trim();
                    String ubicaArray[] = strUbicacion.split("\\.");
                    
                 Query2 = "SELECT (b.bodega ||' - '|| r.rack ||' - '|| m.metro) as ubc\n" +
                    " from mt_bodega b, mt_rack r, mt_metro m\n" +
                    " where b.codigo='" + ubicaArray[0] + "' and r.codigo= " + ubicaArray[1] +  " and m.codigo= " + ubicaArray[2] + "  and m.rack=" + ubicaArray[1];   
                    Rs1 = Sql.Select(Query2);
                     if (Rs1.next()){
                        strUbicacion =Rs1.getString("ubc").trim();
                        txNombreUbica.setText(strUbicacion);
                        Carga_Prod_Ubicacion(txtUbicacion.getText().trim());
                       }   
                     else
                     {
                         fmMain.Mensaje("Ubicacion no encontrada, favor revise la ubicación");
                         limpia_all();
                     }
        }
     catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }                    
    }//GEN-LAST:event_btDesdeActionPerformed

    private void txtSkuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSkuKeyReleased
        // TODO add your handling code here:
         txtSku.setText( txtSku.getText().toUpperCase());
    }//GEN-LAST:event_txtSkuKeyReleased

    private void Grilla_prodMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Grilla_prodMouseClicked
        //        if(evt.getClickCount()==1 ){
            //
            //
            //           /* jdPagadoPrvCli Pagado = new jdPagadoPrvCli(null, true);
            //            Pagado.setLocationRelativeTo(null);
            //            Pagado.setTitle("Pagos Realizados");
            //            Pagado.CargaPagosPrv(Grilla.getValueAt(Grilla.getSelectedRow(), 12).toString().trim());
            //            Pagado.setVisible(true);*/
            //        }
    }//GEN-LAST:event_Grilla_prodMouseClicked

    private void btEliminar_lineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminar_lineaActionPerformed
        ExeSql Sql = new ExeSql();
        ResultSet Rs, Rs1;
        String Query2, SKU, qryDel ;
        String strUbicacion = txtUbicacion.getText().trim();
        
         try{ 
             SKU=Grilla_prod.getValueAt(Grilla_prod.getSelectedRow(), 0).toString().trim();
             Query2= "select * from mt_productos where ubicacion ='" + strUbicacion + "' and sku = '" + SKU + "'";
             Rs1 = Sql.Select(Query2);
              if (Rs1.next()){
                        if (Rs1.getInt("cant")>0){
                            fmMain.Mensaje("No se puede eliminar este producto ya que su cantidad ingresada es:" + Rs1.getInt("cant"));
                            return;
                        }
                        else
                        {
                            // Elimina el registro Seleccionado
                             qryDel = "delete from mt_productos where ubicacion ='" + strUbicacion + "' and sku = '" + SKU + "'";
                             Sql.ExeSql(qryDel);
                             limpiar_prod();
                             Carga_Prod_Ubicacion(strUbicacion);
                             
                        }   
               }
              else
              {
                  fmMain.Mensaje("Producto no Existe" );
              }
         } 
        catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }    
        
    }//GEN-LAST:event_btEliminar_lineaActionPerformed

    
    private void trae_ubicacion (String Ubica){
          ExeSql Sql = new ExeSql();
        ResultSet Rs, Rs1;
        String Query2 ;
        String strUbicacion = "";
        
         try{         
           strUbicacion = Ubica;
                    String ubicaArray[] = strUbicacion.split("\\.");
                    
                 Query2 = "SELECT (b.bodega ||' - '|| r.rack ||' - '|| m.metro) as ubc\n" +
                    " from mt_bodega b, mt_rack r, mt_metro m\n" +
                    " where b.codigo='" + ubicaArray[0] + "' and r.codigo= " + ubicaArray[1] +  " and m.codigo= " + ubicaArray[2] + "  and m.rack=" + ubicaArray[1];   
                    Rs1 = Sql.Select(Query2);
                     if (Rs1.next()){
                        strUbicacion =Rs1.getString("ubc").trim();
                        txNombreUbica.setText(strUbicacion);
                        Carga_Prod_Ubicacion(Ubica);
                       }   
                     else
                     {
                         fmMain.Mensaje("Ubicacion no encontrada, favor revise la ubicación");
                         limpia_all();
                     }
        }
     catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }               
    }
    
    
    private void Carga_Prod_Ubicacion(String ubicacion){
           ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel dfTm = (DefaultTableModel) Grilla_prod.getModel();
        double peso=0;
        fmMain.LimpiaGrilla(dfTm);
        
        
        try {
           // Rs = Sql.Select("select * from pg_user where usename <> 'postgres'");
             Rs = Sql.Select(" select  p.nombre Nombre, p.sku Sku, mp.cant \n" +
                                " from mt_productos mp \n" +
                                " left join producto p on p.sku = mp.sku " +
                                " where ubicacion = '" + ubicacion  + "' order by mp.fecha" );

            
            while(Rs.next()){
                
                dfTm.addRow(new Object[]{Rs.getString("Sku"),Rs.getString("Nombre"),Rs.getString("cant"),"0"});
            }
            txtSku.requestFocus();
             }
     catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }    
        
    }
        
    
    
    
    private void carga_producto(){
         String codbarfinal = txtSku.getText().replace("'", "-");
        txtSku.setText(codbarfinal.trim());
        if(!txtSku.getText().isEmpty())
             CargaProducto(txtSku.getText());
        else{
            jdBuscarProductos BP = new jdBuscarProductos(null, true);
            BP.setLocationRelativeTo(null);
            BP.setTitle("Buscar Producto");
            BP.setVisible(true);
            if(!"".equals(BP.GetCodigo()))
                CargaProducto(BP.GetCodigo());
        }
            
    }
    
    
    
    
    public void CargaProducto(String Codigo) {
        ExeSql Sql = new ExeSql();
        ResultSet Rs = null;
        double Margen;
        int revisa_codbar =0;
        int revisa_codchile =0;
        
   
        try {
            String Query;
            //Limpia la Lista

            Rs = Sql.Select("select codbar, sku from codbar where sku='" + Codigo + "' or codbar='"+ Codigo + "'" );        
                    if (Rs.next())
                        {
                        Codigo = Rs.getString("sku").trim();
                        revisa_codbar++;
                        }
            Rs = Sql.Select("select idch, sku from codchile where sku='" + Codigo +"' or idch='"+ Codigo + "'" );
                    if (Rs.next())
                        {
                        Codigo = Rs.getString("sku").trim();
                        revisa_codchile++;
                        }
            Rs = Sql.Select("select codbar, sku from codbar where sku='" + Codigo + "' or codbar='"+ Codigo + "'" );        
                    if (Rs.next())
                        {
                        Codigo = Rs.getString("sku").trim();
                        revisa_codbar++;
                        }
             
                    
            Query ="select p.sku,p.nombre " 
                    + " from producto p \n"
                    + " left join inventario i\n"
                    + " on p.sku=i.Sku\n"
                    + " where p.sku='" + Codigo + "' or p.sku in (select sku from codbar where codbar='" + Codigo + "')";
              Rs = Sql.Select(Query);
            
            
//            Rs = Sql.Select("select p.sku,p.discontinuado, p.sinstock, p.publicado, p.oferta, p.oferta_inicio, p.oferta_fin, p.display, p.sku,p.nombre,p.unidad,p.linea,p.sublinea,p.codbar,p.codbar2,codigo_cc,p.vigente,p.peso,cast(p.fcreacion as date) as fcreacion,p.usuariocreacion,p.otroimpuesto,\n"
//                    + "i.stock,i.ocp,i.occ,i.gdc, p.pventa,p.valultcompra,p.costopromedio,p.imptoiva,p.convenio,p.otroimpuesto,p.marca,(select sum(separado) from occhdet where sku=p.sku) as separado\n"
//                    + "from producto p\n"
//                    + "left join inventario i\n"
//                    + "on p.sku=i.Sku\n"
//                    + "where p.sku='" + Codigo + "' or p.codbar='" + Codigo + "' or p.codigo_cc='"+ Codigo + "'");
//            if(Sql.GetRowCount()==0){
//                Rs = Sql.Select("select p.publicado, p.sincompetencia, p.desxprecio, p.notransado,  p.oferta, p.oferta_inicio, p.oferta_fin, p.display, p.sku,p.nombre,p.unidad,p.linea,p.sublinea,p.codbar,p.codbar2,p.vigente,p.peso,cast(p.fcreacion as date) as fcreacion,p.usuariocreacion,p.otroimpuesto,\n"
//                                + "i.stock,i.ocp,i.occ,i.gdc, p.pventa,p.valultcompra,p.costofinal,p.imptoiva,p.convenio,p.otroimpuesto,p.marca,(select sum(separado) from occhdet where sku=p.sku) as separado\n"
//                                + "from producto p\n"
//                                + "left join inventario i\n"
//                                + "on p.sku=i.Sku");
//            }
      if(Sql.GetRowCount()==0){  
                 fmMain.Mensaje("SKU: " + txtSku.getText().trim() + " no esta en Nuestra Bases de Datos. Comuniquese con Informática");
                 txtSku.setText("");
                 txtSku.requestFocus();
                 return;
      }      
            Rs.next();
            Codigo = Rs.getString("sku").trim();
            String Nombre = Rs.getString("nombre");
       
            
            if (Nombre.length() > 20) {
                Nombre.substring(0, 20);
            }
            txtSku.setText(Rs.getString("sku"));
            txNombre.setText(Rs.getString("nombre"));
            //btAgrega.doClick();
            agrega_linea();
        } catch (SQLException ex) {
            System.out.println(ex);
        } finally {
            Sql.Close();
        }
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla_prod;
    private javax.swing.JButton btDesde;
    private javax.swing.JButton btEliminarTodo;
    private javax.swing.JButton btEliminar_linea;
    private javax.swing.JButton btLimpiaTodo;
    private javax.swing.JComboBox<String> cbBodega;
    private javax.swing.JComboBox<String> cbMetro;
    private javax.swing.JComboBox<String> cbRack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField txNombre;
    private javax.swing.JTextField txNombreUbica;
    private javax.swing.JTextField txtSku;
    private javax.swing.JTextField txtUbicacion;
    // End of variables declaration//GEN-END:variables
}
