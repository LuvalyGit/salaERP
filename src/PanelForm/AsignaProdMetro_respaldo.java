/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Dialogos.jdBuscarProductos;
import Dialogos.jdEntrada;
import Formularios.fmMain;
import Utilidades.ComboCodigos;
import Utilidades.Combo_CodStr;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.table.DefaultTableModel;
import Utilidades.FullSelectorListener;
import javax.swing.DefaultComboBoxModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author luvaly
 */
public class AsignaProdMetro_respaldo extends javax.swing.JPanel {
public boolean booAgregando = false;    
public double en_ingreso=0.0;
DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    /**
     * Creates new form AsignaUbicacion
     */
    public AsignaProdMetro_respaldo() {
        initComponents();
        btLimpiaTodo.doClick();
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        Grilla_prod.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        txtUbicacionOrig.setText(fmMain.BodegaTransito());
        txNombreUbicaOrig.setText("TRANSITO - RACK 1 - METRO 1");
        jPanelDesde.setBorder(javax.swing.BorderFactory.createTitledBorder("UBICACION DESDE"));
        jPanelHasta.setBorder(javax.swing.BorderFactory.createTitledBorder("UBICACION HASTA"));
        CargaBodega();
        CargaBodegaOR();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelHasta = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txNombreUbica = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        btAdd = new javax.swing.JButton();
        txtSku = new javax.swing.JTextField();
        btMenos = new javax.swing.JButton();
        txtUbicacion = new javax.swing.JTextField();
        btTeclado = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtCant = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btLimpiaTodo = new javax.swing.JButton();
        txNombre = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        cbBodega = new javax.swing.JComboBox<String>();
        cbRack = new javax.swing.JComboBox<String>();
        cbMetro = new javax.swing.JComboBox<String>();
        bt_hasta = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Grilla_prod = new javax.swing.JTable();
        jPanelDesde = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtUbicacionOrig = new javax.swing.JTextField();
        txNombreUbicaOrig = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        cbBodegaOR = new javax.swing.JComboBox<String>();
        cbRackOR = new javax.swing.JComboBox<String>();
        cbMetroOR = new javax.swing.JComboBox<String>();
        btDesde = new javax.swing.JButton();

        jPanelHasta.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setText("Nombre");

        txNombreUbica.setEditable(false);
        txNombreUbica.setBackground(new java.awt.Color(255, 255, 255));
        txNombreUbica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNombreUbicaActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/save16.png"))); // NOI18N
        jButton1.setText("Grabar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel13.setText("Cantidad");

        btAdd.setText("+");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        txtSku.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSkuKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSkuKeyReleased(evt);
            }
        });

        btMenos.setText("-");
        btMenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMenosActionPerformed(evt);
            }
        });

        txtUbicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUbicacionActionPerformed(evt);
            }
        });
        txtUbicacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUbicacionKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUbicacionKeyReleased(evt);
            }
        });

        btTeclado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/keyboard.png"))); // NOI18N
        btTeclado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTecladoActionPerformed(evt);
            }
        });

        jLabel1.setText("Ubicacion Hasta");

        txtCant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantActionPerformed(evt);
            }
        });
        txtCant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCantKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCantKeyReleased(evt);
            }
        });

        jLabel2.setText("Sku");

        btLimpiaTodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/erase16.png"))); // NOI18N
        btLimpiaTodo.setText("Limpiar");
        btLimpiaTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimpiaTodoActionPerformed(evt);
            }
        });

        txNombre.setEnabled(false);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("UBICACION"));

        cbBodega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBodegaActionPerformed(evt);
            }
        });

        cbRack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRackActionPerformed(evt);
            }
        });

        cbMetro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMetroActionPerformed(evt);
            }
        });

        bt_hasta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Ok.png"))); // NOI18N
        bt_hasta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_hastaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbBodega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbRack, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbMetro, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_hasta, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt_hasta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbBodega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbRack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbMetro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Grilla_prod.setAutoCreateRowSorter(true);
        Grilla_prod.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod", "Nombre", "Cant", "Graba", "Ingr"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla_prod.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Grilla_prodMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Grilla_prod);
        if (Grilla_prod.getColumnModel().getColumnCount() > 0) {
            Grilla_prod.getColumnModel().getColumn(0).setMinWidth(100);
            Grilla_prod.getColumnModel().getColumn(0).setPreferredWidth(100);
            Grilla_prod.getColumnModel().getColumn(0).setMaxWidth(100);
            Grilla_prod.getColumnModel().getColumn(1).setMinWidth(400);
            Grilla_prod.getColumnModel().getColumn(1).setPreferredWidth(400);
            Grilla_prod.getColumnModel().getColumn(1).setMaxWidth(400);
            Grilla_prod.getColumnModel().getColumn(2).setMinWidth(50);
            Grilla_prod.getColumnModel().getColumn(2).setPreferredWidth(50);
            Grilla_prod.getColumnModel().getColumn(2).setMaxWidth(50);
        }

        javax.swing.GroupLayout jPanelHastaLayout = new javax.swing.GroupLayout(jPanelHasta);
        jPanelHasta.setLayout(jPanelHastaLayout);
        jPanelHastaLayout.setHorizontalGroup(
            jPanelHastaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHastaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelHastaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btLimpiaTodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelHastaLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanelHastaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelHastaLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txNombre))
                    .addComponent(txNombreUbica)
                    .addGroup(jPanelHastaLayout.createSequentialGroup()
                        .addGroup(jPanelHastaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelHastaLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(20, 20, 20)
                                .addComponent(txtSku, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanelHastaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelHastaLayout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanelHastaLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btMenos, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btAdd)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btTeclado, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelHastaLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanelHastaLayout.setVerticalGroup(
            jPanelHastaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHastaLayout.createSequentialGroup()
                .addGroup(jPanelHastaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHastaLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanelHastaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txNombreUbica, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelHastaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelHastaLayout.createSequentialGroup()
                                .addGroup(jPanelHastaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelHastaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btMenos)
                                    .addComponent(btAdd)))
                            .addComponent(jLabel2)
                            .addComponent(btTeclado, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelHastaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(jPanelHastaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelHastaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHastaLayout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btLimpiaTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 191, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanelDesde.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setText("Ubicacion Desde");

        txtUbicacionOrig.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUbicacionOrigFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUbicacionOrigFocusLost(evt);
            }
        });
        txtUbicacionOrig.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUbicacionOrigKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUbicacionOrigKeyReleased(evt);
            }
        });

        txNombreUbicaOrig.setEditable(false);
        txNombreUbicaOrig.setBackground(new java.awt.Color(255, 255, 255));
        txNombreUbicaOrig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNombreUbicaOrigActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("UBICACION"));

        cbBodegaOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBodegaORActionPerformed(evt);
            }
        });

        cbRackOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRackORActionPerformed(evt);
            }
        });

        cbMetroOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMetroORActionPerformed(evt);
            }
        });

        btDesde.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Ok.png"))); // NOI18N
        btDesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDesdeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbBodegaOR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbRackOR, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbMetroOR, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbBodegaOR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbRackOR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbMetroOR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelDesdeLayout = new javax.swing.GroupLayout(jPanelDesde);
        jPanelDesde.setLayout(jPanelDesdeLayout);
        jPanelDesdeLayout.setHorizontalGroup(
            jPanelDesdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDesdeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelDesdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDesdeLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(28, 28, 28)
                        .addComponent(txtUbicacionOrig, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txNombreUbicaOrig, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(115, 115, 115)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelDesdeLayout.setVerticalGroup(
            jPanelDesdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDesdeLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanelDesdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtUbicacionOrig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txNombreUbicaOrig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
            .addGroup(jPanelDesdeLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(801, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanelDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(170, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSkuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSkuKeyPressed
    
    if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           String nombrePalabra =txtSku.getText() + Character.toString(evt.getKeyChar());
           if (nombrePalabra.substring(0,3).trim().equals("LVL") || nombrePalabra.substring(0,3).trim().equals("TRAN")){
               //trae_ubicacion(nombrePalabra);
               txtSku.setText("");
               txtUbicacion.setText(nombrePalabra);
               trae_ubicacion(nombrePalabra);
               Carga_Prod_Ubicacion(nombrePalabra,1);
               txtSku.requestFocus();
               return;   }
            else{
                carga_producto();
    
                }
    }

//           String nombrePalabra =txtSku.getText() + Character.toString(evt.getKeyChar());
//           if (nombrePalabra.substring(0,3).trim().equals("LVL")){
//               trae_ubicacion(nombrePalabra);
//               txtSku.setText("");
//               txtUbicacion.setText(nombrePalabra);
//               txtSku.requestFocus();
//               return;   }
//               else{
//                        jdBuscarProductos BP = new jdBuscarProductos(null, true);
//                        BP.setLocationRelativeTo(null);
//                        BP.setTitle("Buscar Producto");
//                        BP.SetTexto(txtSku.getText() + Character.toString(evt.getKeyChar()));
//                        BP.setVisible(true);
//                        if(!"".equals(BP.GetCodigo()))
//                        CargaProducto(BP.GetCodigo());
//                    }
//            carga_producto();
//        }
//            if(evt.getKeyCode() == KeyEvent.VK_ENTER){
//                carga_producto();
//              } 
//             
//             else if(Character.isLetter(evt.getKeyChar())){
//           
//             jdBuscarProductos BP = new jdBuscarProductos(null, true);
//             BP.setLocationRelativeTo(null);
//             BP.setTitle("Buscar Producto");
//             BP.SetTexto(txtSku.getText() + Character.toString(evt.getKeyChar()));
//             //txSku.setText("");  
//             BP.setVisible(true);
//             if(!"".equals(BP.GetCodigo()))
//                 CargaProducto(BP.GetCodigo());
//        }        
        
        
        
        
    }//GEN-LAST:event_txtSkuKeyPressed

  private void trae_ubicacion (String Ubica){
          ExeSql Sql = new ExeSql();
        ResultSet Rs, Rs1;
        String Query2 ;
        String strUbicacion = "";
        
         try{         
           strUbicacion = Ubica;
                    String ubicaArray[] = strUbicacion.split("\\.");
                    
                 Query2 = "SELECT (b.bodega ||' - '|| r.rack ||' - '|| m.metro) as ubc\n" +
                    " from mt_bodega b, mt_rack r, mt_metro m\n" +
                    " where b.codigo='" + ubicaArray[0] + "' and r.codigo= " + ubicaArray[1] +  " and m.codigo= " + ubicaArray[2] + "  and m.rack=" + ubicaArray[1];   
                    Rs1 = Sql.Select(Query2);
                     if (Rs1.next()){
                        strUbicacion =Rs1.getString("ubc").trim();

                        txNombreUbica.setText(strUbicacion);
                        //Carga_Prod_Ubicacion(Ubica,1);
                       }   
                     else
                     {
                         fmMain.Mensaje("Ubicacion no encontrada, favor revise la ubicación");
                         limpia_all();
                     }
        }
     catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }               
    }
    



//-------------------  Carga Combnobox ---------------------------------------
 public void CargaBodega(){
        DefaultComboBoxModel value;
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        String Query="";
        cbBodega.removeAllItems();
        int i=0;
        value =new DefaultComboBoxModel();
        try {
            Query=" select codigo, bodega from mt_bodega order by codigo;";
            Rs = Sql.Select(Query);
            if(Sql.GetRowCount()==0) return;
           value.addElement(new Combo_CodStr("Seleccione","",0));     
           while(Rs.next()){
            value.addElement(new Combo_CodStr(Rs.getString("bodega").trim(),Rs.getString("codigo").trim(),i));
            System.out.println(Rs.getString("bodega").trim());
            i++;
           } 
           cbBodega.setModel(value);
           cbBodega.setSelectedIndex(0);
         
           

        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
     }
     
     
     public void CargaRack(){
        DefaultComboBoxModel value;
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        String Query="";
        cbRack.removeAllItems();
        int i=0;
        
//        CboProveedor.addItem("<Todos>");  
//        CboProveedor.setSelectedIndex(0);
        value =new DefaultComboBoxModel();
        try {
           
            Query=" Select r.rack, r.codigo from mt_rack r \n" +
                  " where r.bodega = (select b.codigo from mt_bodega b where b.bodega='"+cbBodega.getSelectedItem().toString().trim()+"')";
            
            Rs = Sql.Select(Query);
            if(Sql.GetRowCount()==0) return;
             value.addElement(new ComboCodigos("Seleccione",0)); 
           while(Rs.next()){
            value.addElement(new ComboCodigos(Rs.getString("rack").trim(),Rs.getInt("codigo")));
            System.out.println(Rs.getString("rack").trim());
            i++;
           } 
           cbRack.setModel(value);
           
           if (cbRack.getSelectedIndex()>0){
                    cbRack.setSelectedIndex(0);}
           
        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
     }
     
     
     public void CargaMetro(){
        DefaultComboBoxModel value;
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        String Query="";
        cbMetro.removeAllItems();

        value =new DefaultComboBoxModel();
        try {
            String strbodega="";

               if ((cbRack.getSelectedIndex()>0) && (cbBodega.getSelectedIndex()>0)){
                   
                        Combo_CodStr bodega = (Combo_CodStr) cbBodega.getSelectedItem();
                        bodega.getId(); 
                        
                        ComboCodigos RackCodigo = (ComboCodigos) cbRack.getSelectedItem();
                        RackCodigo.getId();
            
                      
                         
                     Query =" Select m.metro,m.codigo from mt_bodega b\n" +
                    " left join mt_rack r\n" +
                    " on b.codigo = r.bodega\n" +
                    " left join mt_metro m\n" +
                    " on m.rack = r.codigo\n" +
                    " where m.rack =" + RackCodigo.getId() + " and r.bodega = '" + bodega.getId() +"' order by m.codigo;";    
                   } 
               else
               {
                   return;
               }
            
            Rs = Sql.Select(Query);
            if(Sql.GetRowCount()==0) return;
             value.addElement(new ComboCodigos("Seleccione",0)); 
           while(Rs.next()){
            value.addElement(new ComboCodigos(Rs.getString("metro").trim(),Rs.getInt("codigo")));
            System.out.println(Rs.getString("metro").trim());
            
           } 
           cbMetro.setModel(value);
           cbMetro.setSelectedIndex(0);
           
           
        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
     }    
//  -------------------  Agrega la carga de combos en Ubicacion Original----------------------------
     public void CargaBodegaOR(){
        DefaultComboBoxModel value;
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        String Query="";
        cbBodegaOR.removeAllItems();
        int i=0;
        value =new DefaultComboBoxModel();
        try {
            Query=" select codigo, bodega from mt_bodega order by codigo;";
            Rs = Sql.Select(Query);
            if(Sql.GetRowCount()==0) return;
           value.addElement(new Combo_CodStr("Seleccione","",0));     
           while(Rs.next()){
            value.addElement(new Combo_CodStr(Rs.getString("bodega").trim(),Rs.getString("codigo").trim(),i));
            System.out.println(Rs.getString("bodega").trim());
            i++;
           } 
           cbBodegaOR.setModel(value);
           cbBodegaOR.setSelectedIndex(0);
         
           

        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
     }
     
     
     public void CargaRackOR(){
        DefaultComboBoxModel value;
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        String Query="";
        cbRackOR.removeAllItems();
        int i=0;
        
//        CboProveedor.addItem("<Todos>");  
//        CboProveedor.setSelectedIndex(0);
        value =new DefaultComboBoxModel();
        try {
           
            Query=" Select r.rack, r.codigo from mt_rack r \n" +
                  " where r.bodega = (select b.codigo from mt_bodega b where b.bodega='"+cbBodegaOR.getSelectedItem().toString().trim()+"')";
            
            Rs = Sql.Select(Query);
            if(Sql.GetRowCount()==0) return;
             value.addElement(new ComboCodigos("Seleccione",0)); 
           while(Rs.next()){
            value.addElement(new ComboCodigos(Rs.getString("rack").trim(),Rs.getInt("codigo")));
            System.out.println(Rs.getString("rack").trim());
            i++;
           } 
           cbRackOR.setModel(value);
           
           if (cbRackOR.getSelectedIndex()>0){
                    cbRackOR.setSelectedIndex(0);}
           
        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
     }
     
     
     public void CargaMetroOK(){
        DefaultComboBoxModel value;
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        String Query="";
        cbMetroOR.removeAllItems();

        value =new DefaultComboBoxModel();
        try {
            String strbodega="";

               if ((cbRackOR.getSelectedIndex()>=0) && (cbBodegaOR.getSelectedIndex()>=0)){
                   
                        Combo_CodStr bodegaOR = (Combo_CodStr) cbBodegaOR.getSelectedItem();
                        bodegaOR.getId(); 
                        
                        ComboCodigos RackCodigoOR = (ComboCodigos) cbRackOR.getSelectedItem();
                        RackCodigoOR.getId();
            
                      
                         
                     Query =" Select m.metro,m.codigo from mt_bodega b\n" +
                    " left join mt_rack r\n" +
                    " on b.codigo = r.bodega\n" +
                    " left join mt_metro m\n" +
                    " on m.rack = r.codigo\n" +
                    " where m.rack =" + RackCodigoOR.getId() + " and r.bodega = '" + bodegaOR.getId() +"' order by m.codigo;";    
                   } 
               else
               {
                   return;
               }
            
            Rs = Sql.Select(Query);
            if(Sql.GetRowCount()==0) return;
             value.addElement(new ComboCodigos("Seleccione",0)); 
           while(Rs.next()){
            value.addElement(new ComboCodigos(Rs.getString("metro").trim(),Rs.getInt("codigo")));
            System.out.println(Rs.getString("metro").trim());
            
           } 
           cbMetroOR.setModel(value);
           cbMetroOR.setSelectedIndex(0);
           
           
        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
     }    
//-----------------------------------------------------------------------------------------------
     
    private String  existe_sku(String Codigo){
    ExeSql Sql = new ExeSql();
        ResultSet Rs1;
        String Query2 ="";
        String strUbicacion = "";
        
         try{
         
          Query2 = "select * from mt_productos where sku = '" + Codigo + "'";
            Rs1 = Sql.Select(Query2);
                     if (Rs1.next()){
                        return(Rs1.getString("sku"));
                     }   
         }
     catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }          
        return(""); 
    }
            
    private void agrega_linea(){
         String codigo="";
        int pos = -1;
        
        double  cant_picking=0.00;
        double  cant_picking2=0.00;
       
        double cant_ingresa=0.00;

        DefaultTableModel TableModel = (DefaultTableModel) Grilla_prod.getModel();
        
         //---- Inicio----------------------------
        // Queda seteado para grabar
        if  (booAgregando == false)
        {
        for (int i=0; i<=Grilla_prod.getRowCount()-1; i++ ){
                   Grilla_prod.setValueAt("NO", i, 3);
                   Grilla_prod.setValueAt("0", i, 4);
                }
        booAgregando = true;
        Grilla_prod.changeSelection(0, 0 , false, false);
        en_ingreso=0.0;
        fmMain.SetEstado(fmMain.pnPestanas.getSelectedIndex(), 0);
        }
        //----------------------------------------
        
        
                 
        // Busca si el codigo se ha ingresado anteriormente en la grilla
        for (int i=0; i<=Grilla_prod.getRowCount()-1; i++ ){
                codigo= Grilla_prod.getValueAt(i, 0).toString().trim();
                if (codigo.equals(txtSku.getText().trim())){
                    pos = i;
                    break;
                }
            }
         // Si existe el codigo en la grilla modificara la cantidad ingresada
        if (pos>=0){
         
                Grilla_prod.changeSelection(pos, 0 , false, false);
                cant_ingresa = Double.parseDouble(fmMain.SetGuardar(txtCant.getText().trim()));
                cant_picking = Double.valueOf(fmMain.SetGuardar(Grilla_prod.getValueAt(Grilla_prod.getSelectedRow(), 2).toString().trim()));
                cant_picking2 = Double.valueOf(fmMain.SetGuardar(Grilla_prod.getValueAt(Grilla_prod.getSelectedRow(), 4).toString().trim()));
                
                    
                    
                    cant_picking = cant_picking + cant_ingresa;
                    en_ingreso = cant_picking2 + cant_ingresa;
                    Grilla_prod.setValueAt(en_ingreso, pos, 4);
                    Grilla_prod.setValueAt(cant_picking, pos, 2);
                    Grilla_prod.setValueAt("SI", pos, 3);
                    fmMain.SetEstado(fmMain.pnPestanas.getSelectedIndex(), 1);
                    // Falta por pickear Grilla_prod.setValueAt(cant_solicitada-cant_picking, pos, 5); 
                    // Marca lo pickeado Grilla_prod.setValueAt(1, pos, 6);
                    txtSku.setText(""); // Asigno SKU vacio para leer el otro codigo
                    return;
                    
                }
        

        //TableModel.addRow(new Object[]{txtSku.getText().trim(), txNombre.getText().trim()});
         txtSku.setText("");
         txNombre.setText("");
         txtSku.requestFocus();
    }
    
    private void txtUbicacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUbicacionKeyPressed
        // TODO add your handling code here:
        ExeSql Sql = new ExeSql();
        ResultSet Rs, Rs1;
        String Query2 ;
        String strUbicacion = "";
        
         try{ 
                   if(evt.getKeyCode() == KeyEvent.VK_ENTER){
                    strUbicacion = txtUbicacion.getText();
                 String nombrePalabra =strUbicacion + Character.toString(evt.getKeyChar());    
                 
                 String ubicaArray[] = strUbicacion.split("\\.");
                 if (ubicaArray.length<3 ){
                        fmMain.Mensaje("Favor revise el codigo, no es de Ubicacion");
                        txtUbicacion.setText("");
                        txNombreUbica.setText("");
                        txtUbicacion.requestFocus();
                        return;   
                 } 
                 
                 
                if (nombrePalabra.substring(0,3).trim().equals("LVL") || nombrePalabra.substring(0,4).trim().equals("TRAN")){
                    System.out.println("Codigo Correcto de Ubicacion");
                }
                else
                {
                        fmMain.Mensaje("Favor revise el codigo, no es de Ubicacion");
                        txtUbicacion.setText("");
                        txNombreUbica.setText("");
                        txtUbicacion.requestFocus();
                        return;   
                }
                    
                 Query2 = "SELECT (b.bodega ||' - '|| r.rack ||' - '|| m.metro) as ubc\n" +
                    " from mt_bodega b, mt_rack r, mt_metro m\n" +
                    " where b.codigo='" + ubicaArray[0] + "' and r.codigo= " + ubicaArray[1] +  " and m.codigo= " + ubicaArray[2] + "  and m.rack=" + ubicaArray[1];   
                    Rs1 = Sql.Select(Query2);
                     if (Rs1.next()){
                        strUbicacion =Rs1.getString("ubc").trim();
                        txNombreUbica.setText(strUbicacion);
                        Carga_Prod_Ubicacion(txtUbicacion.getText().trim(),1);
                     }   
                     else
                     {
                         fmMain.Mensaje("Ubicacion no encontrada, favor revise la ubicación");
                         limpia_all();
                     }
                      
                 
                } 
            }
     catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }    
    }//GEN-LAST:event_txtUbicacionKeyPressed

    
    private void grabar(){
          DefaultTableModel TableModel = (DefaultTableModel) Grilla_prod.getModel();
    ExeSql Sql = new ExeSql();
    ResultSet Rs;
    String Query, qryIns, qryUpd,Sku,Ubicacion,StUsuario ;
    Ubicacion ="";
    double cantidad_grilla_ins=0.0;
    boolean grabo = false;

    try{ 
        
        for (int i=0; i<=Grilla_prod.getRowCount()-1; i++ ){
            if (Grilla_prod.getValueAt(i, 3).toString().trim()=="SI")
            {
                grabo = true;
                break;
                
            }
            else 
            {
               grabo = false; 
            }
        }
        
        if (grabo==false){
            fmMain.Mensaje("No ha realizado cambios, no se grabara");
            fmMain.SetEstado(fmMain.pnPestanas.getSelectedIndex(), 0);
            return;
        }
        
                
        
                for (int i=0; i<=Grilla_prod.getRowCount()-1; i++ ){
                    if (Grilla_prod.getValueAt(i, 3).toString().trim()=="SI")
                    {   
                        Sku= Grilla_prod.getValueAt(i, 0).toString().trim();
                        Ubicacion = txtUbicacion.getText().trim();
                        StUsuario = fmMain.GetUsuario();

                        qryIns = " update  mt_productos set cant = " +  Double.valueOf(fmMain.SetGuardar(Grilla_prod.getValueAt(i, 2).toString().trim())) + ",\n" +
                                 "  usuario_mod ='" +fmMain.GetUsuario() + "', fecha_mod = now(), ubica_origen ='" + txtUbicacionOrig.getText().trim() + "' " +
                                 " where ubicacion = '" + txtUbicacion.getText().trim() + "' and sku = '" + Sku + "' ";
                        System.out.println("Fila grabada: " + i + " Ubic: " + txtUbicacion.getText().trim() + " SKU: " + Grilla_prod.getValueAt(i, 1).toString().trim());
                        Sql.ExeSql(qryIns);
                        
                        
                        cantidad_grilla_ins=Double.valueOf(fmMain.SetGuardar(Grilla_prod.getValueAt(i, 4).toString().trim()));
                        
                        qryUpd = "update mt_productos set cant = cant -" +  cantidad_grilla_ins +
                                " where ubicacion = '" + txtUbicacionOrig.getText().trim() + "' and sku = '" + Sku + "' ";
                        Sql.ExeSql(qryUpd);
                        
//                        qryUpd = "update mt_productos set cant = cant +" +  cantidad_grilla_ins +
//                                " where ubicacion = '" + txtUbicacion.getText().trim() + "' and sku = '" + Sku + "' ";
//                        Sql.ExeSql(qryUpd);
                        
                    }
                    else
                    {System.out.println("Fila no grabada: " + i + " Ubic: " + txtUbicacion.getText().trim() + " SKU: " + Grilla_prod.getValueAt(i, 1).toString().trim());}    
                }

                //fmMain.LimpiaGrilla(TableModel);
                Sql.Commit();
                Carga_Prod_Ubicacion(Ubicacion,1);
                fmMain.Mensaje("Grabacion realizada con Exito.");
                fmMain.SetEstado(fmMain.pnPestanas.getSelectedIndex(), 0);
                setea_pivot_grabar();
                txtSku.requestFocus();
          }
     catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }    
    }
            
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        grabar();
    }//GEN-LAST:event_jButton1ActionPerformed

    
    private void setea_pivot_grabar(){
        //---- Setea Pivot para grabar----------------------------
        // Queda seteado para grabar
//        if  (booAgregando == false)
//        {
//        for (int i=0; i<=Grilla_prod.getRowCount()-1; i++ ){
//                   Grilla_prod.setValueAt("0", i, 3);
//                   Grilla_prod.setValueAt("0", i, 4);
//                }
//        booAgregando = false;
//        Grilla_prod.changeSelection(0, 0 , false, false);
//        en_ingreso=0.0;
//        }
        booAgregando = false;
        Grilla_prod.changeSelection(0, 0 , false, false);
        en_ingreso=0.0;
    }
    
    
    private void limpiar_prod(){
    DefaultTableModel TableModel = (DefaultTableModel) Grilla_prod.getModel();    
        txNombre.setText("");
        //txNombre.setEnabled(false);
        txtSku.setText("");
        txtCant.setText("1");
        txtUbicacion.setText("");
        txNombreUbica.setText("");
        txtUbicacion.requestFocus();
        booAgregando=false;
        fmMain.LimpiaGrilla(TableModel);
    }
    
    
    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        // TODO add your handling code here:
        double num =0;
        num = Double.parseDouble(txtCant.getText().trim()) +1;
        txtCant.setText(String.valueOf(num));
    }//GEN-LAST:event_btAddActionPerformed

    private void btMenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMenosActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        double num =0;
        num = Double.parseDouble(txtCant.getText().trim()) -1;
        txtCant.setText(String.valueOf(num));
    }//GEN-LAST:event_btMenosActionPerformed

    private void btTecladoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTecladoActionPerformed
        // TODO add your handling code here:

        jdEntrada Ent = new jdEntrada(null, true);
        Ent.setLocationRelativeTo(null);
        Ent.setTitle("Ingreso de Cantidad");
        Ent.setVisible(true);
        Ent.setAlwaysOnTop(true);
        txtCant.setText(Ent.GetNumero());
    }//GEN-LAST:event_btTecladoActionPerformed

    private void txtCantKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantKeyPressed
        // TODO add your handling code here:
        ExeSql Sql = new ExeSql();
        ResultSet Rs, Rs1;
        String Query2,Query1 ;
        String strUbicacion = "";
        double cant_ub=0.0, cant_or=0.0;
                
        
         try{          
            if(evt.getKeyCode() == KeyEvent.VK_ENTER){

                if (txtUbicacionOrig.getText().trim().equals("")){
                    fmMain.Mensaje("Ubicacion Original no puede ser vacio.!!");
                    txtUbicacionOrig.requestFocus();
                    return;
                }
                
                
               if (!txtSku.getText().trim().equals("") && !txtCant.getText().trim().equals("")) 
               {    
                     
               Query1 = "select cant from mt_productos where ubicacion ='" + txtUbicacionOrig.getText().trim() + "' and sku ='"  + txtSku.getText().trim() +"'";
               Rs1 = Sql.Select(Query1);
                     if (Rs1.next()){
                       cant_or = Rs1.getDouble("cant");
                     }      
                cant_ub = Double.valueOf(txtCant.getText().trim());     
                if (cant_or < cant_ub ){
                   fmMain.Mensaje("Cantidad de Ubicacion Origen: " + cant_or +  " es menor a Cantidad de Ubicacion Destino: " + cant_ub);
                   return;
                }     
                   
                agrega_linea();
               } 
               else
               {fmMain.Mensaje("Falta ingresar Sku o Cantidad.");   }    
              }
            }
     catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }        
    }//GEN-LAST:event_txtCantKeyPressed

    public void limpia_all(){
         limpiar_prod();
        txtUbicacion.setText("");
        txNombreUbica.setText("");
        txtSku.setText("");
        txtUbicacionOrig.setText("");
        txtUbicacionOrig.requestFocus();
    }
    
    private void btLimpiaTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimpiaTodoActionPerformed
        // TODO add your handling code here:
        limpia_all();
        
    }//GEN-LAST:event_btLimpiaTodoActionPerformed

    private void txNombreUbicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNombreUbicaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txNombreUbicaActionPerformed

    private void txtUbicacionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUbicacionKeyReleased
        // TODO add your handling code here:
          txtUbicacion.setText( txtUbicacion.getText().toUpperCase());
    }//GEN-LAST:event_txtUbicacionKeyReleased

    private void txtUbicacionOrigKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUbicacionOrigKeyPressed
        // TODO add your handling code here:
        ExeSql Sql = new ExeSql();
        ResultSet Rs, Rs1;
        String Query2 ;
        String strUbicacion = "";
        
         try{ 
//                    if(evt.getKeyCode() == KeyEvent.VK_ENTER){
//                    strUbicacion = txtUbicacionOrig.getText().trim();
//                    String ubicaArray[] = strUbicacion.split("\\.");
             if(evt.getKeyCode() == KeyEvent.VK_ENTER){
                    strUbicacion = txtUbicacionOrig.getText();
                 String nombrePalabra =strUbicacion + Character.toString(evt.getKeyChar());    
                 
                 String ubicaArray[] = strUbicacion.split("\\.");
                 if (ubicaArray.length<3 ){
                        fmMain.Mensaje("Favor revise el codigo, no es de Ubicacion");
                        txtUbicacionOrig.setText("");
                        txNombreUbicaOrig.setText("");
                        txtUbicacionOrig.requestFocus();
                        return;   
                 } 
                 
                 
                if (nombrePalabra.substring(0,3).trim().equals("LVL") || nombrePalabra.substring(0,4).trim().equals("TRAN")){
                    System.out.println("Codigo Correcto de Ubicacion");
                }
                else
                {
                        fmMain.Mensaje("Favor revise el codigo, no es de Ubicacion");
                        txtUbicacionOrig.setText("");
                        txNombreUbicaOrig.setText("");
                        txtUbicacionOrig.requestFocus();
                        return;   
                }
                    
                 Query2 = "SELECT (b.bodega ||' - '|| r.rack ||' - '|| m.metro) as ubc\n" +
                    " from mt_bodega b, mt_rack r, mt_metro m\n" +
                    " where b.codigo='" + ubicaArray[0] + "' and r.codigo= " + ubicaArray[1] +  " and m.codigo= " + ubicaArray[2] + "  and m.rack=" + ubicaArray[1];   
                    Rs1 = Sql.Select(Query2);
                     if (Rs1.next()){
                        strUbicacion =Rs1.getString("ubc").trim();
                        txNombreUbicaOrig.setText(strUbicacion);
                        txtUbicacion.requestFocus();
                     }   
                     else
                     {
                         fmMain.Mensaje("Ubicacion no encontrada, favor revise la ubicación");
                         limpia_all();
                     }
                      
                 
                } 
                    
            
                    
                    
            }
     catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }    

        
    }//GEN-LAST:event_txtUbicacionOrigKeyPressed

    private void txtUbicacionOrigKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUbicacionOrigKeyReleased
        // TODO add your handling code here:
            txtUbicacionOrig.setText( txtUbicacionOrig.getText().toUpperCase());
    }//GEN-LAST:event_txtUbicacionOrigKeyReleased

    private void txNombreUbicaOrigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNombreUbicaOrigActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txNombreUbicaOrigActionPerformed

    private void txtUbicacionOrigFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUbicacionOrigFocusLost
        // TODO add your handling code here:
             //if(evt.getKeyCode() == KeyEvent.VK_DELETE){
                     if (txtUbicacionOrig.getText().trim().equals("")){
                        txNombreUbicaOrig.setText("");
                   //  }
                         
                 }   
    }//GEN-LAST:event_txtUbicacionOrigFocusLost

    private void txtUbicacionOrigFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUbicacionOrigFocusGained
        // TODO add your handling code here:
         
         if (txtUbicacionOrig.getText().trim().equals("")){
                        txNombreUbicaOrig.setText("");
          }
    }//GEN-LAST:event_txtUbicacionOrigFocusGained

    private void txtCantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantActionPerformed

    private void txtCantKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantKeyReleased

    private void cbBodegaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBodegaActionPerformed
        ExeSql Sql = new ExeSql();
        ResultSet Rs;

        if ((cbBodega.getSelectedIndex()>0) && (cbRack.getSelectedIndex()>0) && (cbBodega.getSelectedIndex()>0)){
            Combo_CodStr id = (Combo_CodStr) cbBodega.getSelectedItem();
            txtUbicacion.setText(id.getId());

            ComboCodigos id2 = (ComboCodigos) cbRack.getSelectedItem();
            txtUbicacion.setText(txtUbicacion.getText().trim()+ "." +  id2.getId());

            ComboCodigos id3 = (ComboCodigos) cbMetro.getSelectedItem();
            txtUbicacion.setText(txtUbicacion.getText().trim()+ "." +  id3.getId());
              bt_hasta.doClick();

        }
        else{

            txtUbicacion.setText("");
            txNombreUbica.setText("");
          
        }
        
        try{
            //            Rs= Sql.Select("Select r.rack from mt_rack r \n" +
                //                "where r.bodega = (select b.codigo from mt_bodega b where b.bodega='"+cbBodega.getSelectedItem().toString().trim()+"')");
            //            cbRack.removeAllItems();
            //            while (Rs.next()){
                //                cbRack.addItem(Rs.getString("rack"));
                //            }
            CargaRack();

        }
        catch(Exception e)
        {
            fmMain.Mensaje("Error: "+e);
        }
        finally{
            Sql.Close();
        }
    }//GEN-LAST:event_cbBodegaActionPerformed

    private void cbRackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRackActionPerformed

        if (cbRack.getItemCount()==0)
        {
            return;
        }

        
        if ((cbBodega.getSelectedIndex()>0) && (cbRack.getSelectedIndex()>0) && (cbMetro.getSelectedIndex()>0)){
            Combo_CodStr id = (Combo_CodStr) cbBodega.getSelectedItem();
            txtUbicacion.setText(id.getId());

            ComboCodigos id2 = (ComboCodigos) cbRack.getSelectedItem();
            txtUbicacion.setText(txtUbicacion.getText().trim()+ "." +  id2.getId());

            ComboCodigos id3 = (ComboCodigos) cbMetro.getSelectedItem();
            txtUbicacion.setText(txtUbicacion.getText().trim()+ "." +  id3.getId());
            
            bt_hasta.doClick();
        }
        else{

            txtUbicacion.setText("");
            txNombreUbica.setText("");
            

        }
           
            CargaMetro();

    }//GEN-LAST:event_cbRackActionPerformed

    private void cbMetroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMetroActionPerformed
        // TODO add your handling code here:
        if ((cbBodega.getSelectedIndex()>0) && (cbRack.getSelectedIndex()>0) && (cbMetro.getSelectedIndex()>0))
        {
            Combo_CodStr id = (Combo_CodStr) cbBodega.getSelectedItem();
            txtUbicacion.setText(id.getId());

            ComboCodigos id2 = (ComboCodigos) cbRack.getSelectedItem();
            txtUbicacion.setText(txtUbicacion.getText().trim()+ "." +  id2.getId());

            ComboCodigos id3 = (ComboCodigos) cbMetro.getSelectedItem();
            txtUbicacion.setText(txtUbicacion.getText().trim()+ "." +  id3.getId());
            bt_hasta.doClick();
        }
        else{
            txtUbicacion.setText("");
            txNombreUbica.setText("");
            
        }

    }//GEN-LAST:event_cbMetroActionPerformed

    private void bt_hastaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_hastaActionPerformed
        // TODO add your handling code here:
        ExeSql Sql = new ExeSql();
        ResultSet Rs, Rs1;
        String Query2 ;
        String strUbicacion = "";

        try{
            strUbicacion = txtUbicacion.getText().trim();
            String ubicaArray[] = strUbicacion.split("\\.");

            Query2 = "SELECT (b.bodega ||' - '|| r.rack ||' - '|| m.metro) as ubc\n" +
            " from mt_bodega b, mt_rack r, mt_metro m\n" +
            " where b.codigo='" + ubicaArray[0] + "' and r.codigo= " + ubicaArray[1] +  " and m.codigo= " + ubicaArray[2] + "  and m.rack=" + ubicaArray[1];
            Rs1 = Sql.Select(Query2);
            if (Rs1.next()){
                strUbicacion =Rs1.getString("ubc").trim();
                txNombreUbica.setText(strUbicacion);
                Carga_Prod_Ubicacion(txtUbicacion.getText().trim(),1);
            }
            else
            {
                
                fmMain.Mensaje("Ubicacion no encontrada, favor revise la ubicación");
                limpia_all();
            }
        }
        catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }
    }//GEN-LAST:event_bt_hastaActionPerformed

    private void cbBodegaORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBodegaORActionPerformed
        // TODO add your handling code here:
        ExeSql Sql = new ExeSql();
        ResultSet Rs;

        if ((cbBodegaOR.getSelectedIndex()>0) && (cbRackOR.getSelectedIndex()>0) && (cbBodegaOR.getSelectedIndex()>0)){
            Combo_CodStr id = (Combo_CodStr) cbBodegaOR.getSelectedItem();
            txtUbicacionOrig.setText(id.getId());

            ComboCodigos id2 = (ComboCodigos) cbRackOR.getSelectedItem();
            txtUbicacionOrig.setText(txtUbicacionOrig.getText().trim()+ "." +  id2.getId());

            ComboCodigos id3 = (ComboCodigos) cbMetroOR.getSelectedItem();
            txtUbicacionOrig.setText(txtUbicacionOrig.getText().trim()+ "." +  id3.getId());
            
            btDesde.doClick();
            
        }
        else{

             txtUbicacionOrig.setText("");
            txNombreUbicaOrig.setText("");

        }
        
        try{
         
            CargaRackOR();

        }
        catch(Exception e)
        {
            fmMain.Mensaje("Error: "+e);
        }
        finally{
            Sql.Close();
        }
    }//GEN-LAST:event_cbBodegaORActionPerformed

    private void cbRackORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRackORActionPerformed
        // TODO add your handling code here:
        
        if (cbRackOR.getItemCount()==0)
        {
            return;
        }

        ExeSql Sql = new ExeSql();
        ResultSet Rs;

        if ((cbBodegaOR.getSelectedIndex()>0) && (cbRackOR.getSelectedIndex()>0) && (cbMetroOR.getSelectedIndex()>0))
        {
            Combo_CodStr id = (Combo_CodStr) cbBodegaOR.getSelectedItem();
            txtUbicacionOrig.setText(id.getId());

            ComboCodigos id2 = (ComboCodigos) cbRackOR.getSelectedItem();
            txtUbicacionOrig.setText(txtUbicacionOrig.getText().trim()+ "." +  id2.getId());

            ComboCodigos id3 = (ComboCodigos) cbMetroOR.getSelectedItem();
            txtUbicacionOrig.setText(txtUbicacionOrig.getText().trim()+ "." +  id3.getId());
            
            btDesde.doClick();
        }
        else{
            txtUbicacionOrig.setText("");
            txNombreUbicaOrig.setText("");
        }
        
        
        try{


            CargaMetroOK();

        }
        catch(Exception e)
        {
            fmMain.Mensaje("Error: "+e);
        }
        finally{
            Sql.Close();
        }
    }//GEN-LAST:event_cbRackORActionPerformed

    private void cbMetroORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMetroORActionPerformed
        // TODO add your handling code here:
         if ((cbBodegaOR.getSelectedIndex()>0) && (cbRackOR.getSelectedIndex()>0) && (cbMetroOR.getSelectedIndex()>0))
        {
            Combo_CodStr id = (Combo_CodStr) cbBodegaOR.getSelectedItem();
            txtUbicacionOrig.setText(id.getId());

            ComboCodigos id2 = (ComboCodigos) cbRackOR.getSelectedItem();
            txtUbicacionOrig.setText(txtUbicacionOrig.getText().trim()+ "." +  id2.getId());

            ComboCodigos id3 = (ComboCodigos) cbMetroOR.getSelectedItem();
            txtUbicacionOrig.setText(txtUbicacionOrig.getText().trim()+ "." +  id3.getId());
            
            btDesde.doClick();
        }
        else{
            
             txtUbicacionOrig.setText("");
            txNombreUbicaOrig.setText("");
        }
        
    }//GEN-LAST:event_cbMetroORActionPerformed

    private void btDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDesdeActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        ExeSql Sql = new ExeSql();
        ResultSet Rs, Rs1;
        String Query2 ;
        String strUbicacion = "";
        
            if ((cbBodegaOR.getSelectedIndex()>0) && (cbRackOR.getSelectedIndex()>0) && (cbMetroOR.getSelectedIndex()>0))
        {
            Combo_CodStr id = (Combo_CodStr) cbBodegaOR.getSelectedItem();
            txtUbicacionOrig.setText(id.getId());

            ComboCodigos id2 = (ComboCodigos) cbRackOR.getSelectedItem();
            txtUbicacionOrig.setText(txtUbicacionOrig.getText().trim()+ "." +  id2.getId());

            ComboCodigos id3 = (ComboCodigos) cbMetroOR.getSelectedItem();
            txtUbicacionOrig.setText(txtUbicacionOrig.getText().trim()+ "." +  id3.getId());
        }
        else{
            txtUbicacionOrig.setText("");
        }

        try{
            strUbicacion = txtUbicacionOrig.getText().trim();
            String ubicaArray[] = strUbicacion.split("\\.");

            Query2 = "SELECT (b.bodega ||' - '|| r.rack ||' - '|| m.metro) as ubc\n" +
            " from mt_bodega b, mt_rack r, mt_metro m\n" +
            " where b.codigo='" + ubicaArray[0] + "' and r.codigo= " + ubicaArray[1] +  " and m.codigo= " + ubicaArray[2] + "  and m.rack=" + ubicaArray[1];
            Rs1 = Sql.Select(Query2);
            if (Rs1.next()){
                strUbicacion =Rs1.getString("ubc").trim();
                txNombreUbicaOrig.setText(strUbicacion);
                txtUbicacion.requestFocus();
                //Carga_Prod_Ubicacion(txtUbicacion.getText().trim(),1);
            }
            else
            {
                fmMain.Mensaje("Ubicacion no encontrada, favor revise la ubicación");
                limpia_all();
            }
        }
        catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }
        
        
        
        
    }//GEN-LAST:event_btDesdeActionPerformed

    private void txtUbicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUbicacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUbicacionActionPerformed

    private void txtSkuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSkuKeyReleased
  txtSku.setText( txtSku.getText().toUpperCase());
    }//GEN-LAST:event_txtSkuKeyReleased

    private void Grilla_prodMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Grilla_prodMouseClicked
        //        if(evt.getClickCount()==1 ){
            //
            //
            //           /* jdPagadoPrvCli Pagado = new jdPagadoPrvCli(null, true);
            //            Pagado.setLocationRelativeTo(null);
            //            Pagado.setTitle("Pagos Realizados");
            //            Pagado.CargaPagosPrv(Grilla.getValueAt(Grilla.getSelectedRow(), 12).toString().trim());
            //            Pagado.setVisible(true);*/
            //        }
    }//GEN-LAST:event_Grilla_prodMouseClicked

    private void Carga_Prod_Ubicacion(String ubicacion, int  llamado){
           ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel dfTm = (DefaultTableModel) Grilla_prod.getModel();
        double peso=0;
        fmMain.LimpiaGrilla(dfTm);
        String Ubica="";
        
        try {
           // Rs = Sql.Select("select * from pg_user where usename <> 'postgres'");
             Rs = Sql.Select(" select  p.nombre Nombre, p.sku Sku, mp.cant \n" +
                                " from mt_productos mp \n" +
                                " left join producto p on p.sku = mp.sku " +
                                " where ubicacion = '" + ubicacion  + "' order by p.nombre" );
           if (llamado ==0){
               Ubica =txNombreUbicaOrig.getText().trim();}
           else    
           {
               Ubica =txNombreUbica.getText().trim();
           }                     
              if(Sql.GetRowCount()==0){  
                 fmMain.Mensaje("No existen Productos asociados a esta ubicacion :" + Ubica);
                 bt_hasta.requestFocus();
                 txtSku.requestFocus();
                 return;
                }      
      
             
             
            while(Rs.next()){
                dfTm.addRow(new Object[]{Rs.getString("Sku"),Rs.getString("Nombre"),Rs.getDouble("cant"),"NO","0"});
            }
            txtSku.requestFocus();
            
             }
     catch (Exception e) {
            System.out.println(e.getMessage());
        } finally{
            Sql.Close();
        }    
        
    }
        
    
    
    
    private void carga_producto(){
         String codbarfinal = txtSku.getText().replace("'", "-");
        txtSku.setText(codbarfinal.trim());
        
        if(!txtSku.getText().isEmpty())
        {
                
                     CargaProducto(txtSku.getText());
        }     
        else{
            jdBuscarProductos BP = new jdBuscarProductos(null, true);
            BP.setLocationRelativeTo(null);
            BP.setTitle("Buscar Producto");
            BP.setVisible(true);
            
//            //-------------------------------------------------------------------------------------------------
//            // Busca si el codigo se ha ingresado anteriormente en la grilla
//            for (int i=0; i<=Grilla_prod.getRowCount()-1; i++ ){
//                    codigo= Grilla_prod.getValueAt(i, 0).toString().trim();
//                    if (codigo.equals(BP.GetCodigo())){
//                        pos = i;
//                        break;
//                    }
//                }
//             // Si existe el codigo en la grilla modificara la cantidad ingresada
//            if (pos==-1){
//                   fmMain.Mensaje("Codigo no pertenece a la ubicación. Favor revisar SKU: " + BP.GetCodigo() + " recientemente ingresado");
//                   txtSku.setText("");
//                   txtSku.requestFocus();
//                   return;
//            }
//            //--------------------------------------------------------------------------------------------------

            if(!"".equals(BP.GetCodigo()))
                CargaProducto(BP.GetCodigo());
            
            
            
            
            
            
            
            
        }
            
    }
    
    
    
    
    public void CargaProducto(String Codigo) {
        ExeSql Sql = new ExeSql();
        ResultSet Rs = null;
        double Margen;
        int revisa_codbar =0;
        int revisa_codchile =0;
        String codigo="";
        int pos = -1;
   
        try {
            String Query;
            //Limpia la Lista

            Rs = Sql.Select("select codbar, sku from codbar where sku='" + Codigo + "' or codbar='"+ Codigo + "'" );        
                    if (Rs.next())
                        {
                        Codigo = Rs.getString("sku").trim();
                        revisa_codbar++;
                        }
            Rs = Sql.Select("select idch, sku from codchile where sku='" + Codigo +"' or idch='"+ Codigo + "'" );
                    if (Rs.next())
                        {
                        Codigo = Rs.getString("sku").trim();
                        revisa_codchile++;
                        }
            Rs = Sql.Select("select codbar, sku from codbar where sku='" + Codigo + "' or codbar='"+ Codigo + "'" );        
                    if (Rs.next())
                        {
                        Codigo = Rs.getString("sku").trim();
                        revisa_codbar++;
                        }
             
                    
            Query ="select p.sku,p.nombre " 
                    + " from producto p \n"
                    + " left join inventario i\n"
                    + " on p.sku=i.Sku\n"
                    + " where p.sku='" + Codigo + "' or p.sku in (select sku from codbar where codbar='" + Codigo + "')";
              Rs = Sql.Select(Query);
            
            

      if(Sql.GetRowCount()==0){  
                 fmMain.Mensaje("SKU: " + txtSku.getText().trim() + " no esta en Nuestra Bases de Datos. Comuniquese con Informática");
                 txtSku.setText("");
                 txtSku.requestFocus();
                 return;
      }      
      
      
            Rs.next();
            Codigo = Rs.getString("sku").trim();
            String Nombre = Rs.getString("nombre");
       
            
            if (Nombre.length() > 20) {
                Nombre.substring(0, 20);
            }
            txtSku.setText(Rs.getString("sku"));
            txNombre.setText(Rs.getString("nombre"));
            
            // Aqui va el codigo si agrega el producto a la Grilla
            //-------------------------------------------------------------------------------------------------
                // Busca si el codigo se ha ingresado anteriormente en la grilla
                for (int i=0; i<=Grilla_prod.getRowCount()-1; i++ ){
                        codigo= Grilla_prod.getValueAt(i, 0).toString().trim();
                        if (codigo.equals(txtSku.getText().trim())){
                            pos = i;
                            break;
                        }
                    }
                 // Si existe el codigo en la grilla modificara la cantidad ingresada
                if (pos==-1){
                       fmMain.Mensaje("Codigo no pertenece a la ubicación seleccionada. \n Ubicación: " + txNombreUbica.getText().trim() + "\n SKU      : " + txtSku.getText().trim() + "\n Nombre    : " + txNombre.getText().trim());
                       txtSku.setText("");
                       txtSku.requestFocus();
                       return;
                }
                //--------------------------------------------------------------------------------------------------
            //btAgrega.doClick();
           agrega_linea();
        } catch (SQLException ex) {
            System.out.println(ex);
        } finally {
            Sql.Close();
        }
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla_prod;
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btDesde;
    private javax.swing.JButton btLimpiaTodo;
    private javax.swing.JButton btMenos;
    private javax.swing.JButton btTeclado;
    private javax.swing.JButton bt_hasta;
    private javax.swing.JComboBox<String> cbBodega;
    private javax.swing.JComboBox<String> cbBodegaOR;
    private javax.swing.JComboBox<String> cbMetro;
    private javax.swing.JComboBox<String> cbMetroOR;
    private javax.swing.JComboBox<String> cbRack;
    private javax.swing.JComboBox<String> cbRackOR;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanelDesde;
    private javax.swing.JPanel jPanelHasta;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txNombre;
    private javax.swing.JTextField txNombreUbica;
    private javax.swing.JTextField txNombreUbicaOrig;
    private javax.swing.JTextField txtCant;
    private javax.swing.JTextField txtSku;
    private javax.swing.JTextField txtUbicacion;
    private javax.swing.JTextField txtUbicacionOrig;
    // End of variables declaration//GEN-END:variables
}
