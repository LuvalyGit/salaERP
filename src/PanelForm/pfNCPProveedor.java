/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Conexion.ExeSqlLuvaly;
import Dialogos.jdAbrirDocumento;
import Dialogos.jdAjustePesos;
import Dialogos.jdBuscarCliPrv;
import Dialogos.jdIngresaNumero;
import Dialogos.jdOCCAgregaProducto;
import Formularios.fmMain;
import Utilidades.LogError;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David Alcaman
 */
public class pfNCPProveedor extends javax.swing.JPanel {
    
    //***************Variables Costo Promedio *****************//  
   
    ArrayList<ArrayList<String>> Lista  = new ArrayList<ArrayList<String>>();
            
 //*************************************************************//   
    
    
    public static int intNivelUsuario = 0;   //Variable nueva
    
    int Tipo; // 0:Nada   1:Nuevo      2:Abrir    3:Editar
    private int ElTipo,PosTipoDoc;
    private enum Columnas{Sku,Nombre,UM,Cantidad,Unitario,Total};
    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    int PesoCorreccion=0;
    Date hoy = new Date();
    
    SimpleDateFormat formatofecha = new SimpleDateFormat("dd-MM-yyyy");
    
    public pfNCPProveedor() {
        initComponents();
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        Grilla.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        Grilla.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        Grilla.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnMenu = new javax.swing.JPanel();
        btNuevo = new javax.swing.JButton();
        btGuardar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        btAbrir = new javax.swing.JButton();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txRut = new javax.swing.JTextField();
        txDv = new javax.swing.JTextField();
        btIr = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txProveedor = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        lbFolio = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txEstado = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dtEmision = new org.jdesktop.swingx.JXDatePicker();
        jLabel14 = new javax.swing.JLabel();
        txNroNCP = new javax.swing.JTextField();
        chkElectronica = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        cbTipoDocumento = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txNroDocumento = new javax.swing.JTextField();
        btCargaDocumento = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        cbTipo = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txExento = new javax.swing.JTextField();
        txNeto = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txIva = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txTotal = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txImpEspecifico = new javax.swing.JTextField();
        txComision = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btAgregar = new javax.swing.JButton();
        btEliminar = new javax.swing.JButton();
        btCorreccion = new javax.swing.JButton();

        pnMenu.setBackground(new java.awt.Color(220, 215, 226));

        btNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/add16.png"))); // NOI18N
        btNuevo.setText("Nuevo");
        btNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevoActionPerformed(evt);
            }
        });

        btGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/save16.png"))); // NOI18N
        btGuardar.setText("Guardar");
        btGuardar.setBorder(null);
        btGuardar.setEnabled(false);
        btGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarActionPerformed(evt);
            }
        });

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Cancel16.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.setEnabled(false);
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Pencil16.png"))); // NOI18N
        btEditar.setText("Editar");
        btEditar.setEnabled(false);
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        btAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/open16.png"))); // NOI18N
        btAbrir.setText("Abrir");
        btAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAbrirActionPerformed(evt);
            }
        });

        jXLabel1.setText("NOTA DE CRÃ‰DITO PROVEEDOR");
        jXLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        javax.swing.GroupLayout pnMenuLayout = new javax.swing.GroupLayout(pnMenu);
        pnMenu.setLayout(pnMenuLayout);
        pnMenuLayout.setHorizontalGroup(
            pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(177, 177, 177)
                .addComponent(btGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btNuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btAbrir)
                .addGap(350, 350, 350))
        );
        pnMenuLayout.setVerticalGroup(
            pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMenuLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(btNuevo)
                            .addComponent(btEditar)
                            .addComponent(btAbrir))
                        .addGroup(pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btCancelar)
                            .addComponent(btGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(7, 7, 7))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Proveedor"));

        jLabel1.setText("Rut");

        txRut.setEnabled(false);
        txRut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txRutKeyPressed(evt);
            }
        });

        txDv.setEditable(false);
        txDv.setEnabled(false);

        btIr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos22/Go.png"))); // NOI18N
        btIr.setBorderPainted(false);
        btIr.setEnabled(false);
        btIr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIrActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre");

        txProveedor.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txRut, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txDv, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btIr, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txDv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btIr))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Nota de CrÃ©dito"));

        lbFolio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbFolio.setForeground(new java.awt.Color(255, 51, 51));

        jLabel5.setText("F. EmisiÃ³n");

        txEstado.setEditable(false);

        jLabel6.setText("Estado");

        jLabel14.setText("NÃºmero");

        chkElectronica.setSelected(true);
        chkElectronica.setText("ElectrÃ³nica");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(chkElectronica)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbFolio)
                        .addGap(155, 155, 155))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txEstado)
                            .addComponent(dtEmision, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(txNroNCP))
                        .addGap(87, 87, 87))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txNroNCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(dtEmision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(chkElectronica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbFolio)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Documento de Origen"));

        cbTipoDocumento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "FAP - Factura Proveedor", "FAG - Factura de Gastos", "RegularizaciÃ³n" }));
        cbTipoDocumento.setEnabled(false);
        cbTipoDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoDocumentoActionPerformed(evt);
            }
        });

        jLabel3.setText("Tipo");

        jLabel4.setText("Numero");

        txNroDocumento.setEnabled(false);
        txNroDocumento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txNroDocumentoKeyPressed(evt);
            }
        });

        btCargaDocumento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos22/Go.png"))); // NOI18N
        btCargaDocumento.setBorderPainted(false);
        btCargaDocumento.setEnabled(false);
        btCargaDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCargaDocumentoActionPerformed(evt);
            }
        });

        jLabel16.setText("Tipo");

        cbTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Producto", "Descuento", "Regularizacion" }));
        cbTipo.setEnabled(false);
        cbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txNroDocumento))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCargaDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(cbTipoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTipoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txNroDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btCargaDocumento))
                .addGap(8, 8, 8))
        );

        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nombre", "UM", "Cantidad", "V. Unitario", "Total Linea"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(90);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(90);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(90);
            Grilla.getColumnModel().getColumn(1).setMinWidth(450);
            Grilla.getColumnModel().getColumn(1).setPreferredWidth(450);
            Grilla.getColumnModel().getColumn(2).setMinWidth(95);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(95);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(95);
            Grilla.getColumnModel().getColumn(3).setMinWidth(90);
            Grilla.getColumnModel().getColumn(3).setPreferredWidth(110);
            Grilla.getColumnModel().getColumn(3).setMaxWidth(110);
            Grilla.getColumnModel().getColumn(4).setMinWidth(90);
            Grilla.getColumnModel().getColumn(4).setPreferredWidth(110);
            Grilla.getColumnModel().getColumn(4).setMaxWidth(110);
            Grilla.getColumnModel().getColumn(5).setMinWidth(90);
            Grilla.getColumnModel().getColumn(5).setPreferredWidth(110);
            Grilla.getColumnModel().getColumn(5).setMaxWidth(110);
        }

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel11.setText("Exento");

        txExento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txExento.setText("0");

        txNeto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txNeto.setText("0");

        jLabel10.setText("Neto");

        txIva.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txIva.setText("0");
        txIva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txIvaActionPerformed(evt);
            }
        });

        jLabel12.setText("I.V.A.");

        txTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txTotal.setText("0");

        jLabel13.setText("TOTAL");

        jLabel17.setText("Imp. especÃ­fico");

        txImpEspecifico.setEditable(false);
        txImpEspecifico.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txImpEspecifico.setText("0");

        txComision.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txComision.setText("0");
        txComision.setToolTipText("");

        jLabel7.setText("Comision");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel17)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txExento, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                    .addComponent(txNeto)
                    .addComponent(txIva)
                    .addComponent(txTotal)
                    .addComponent(txImpEspecifico)
                    .addComponent(txComision))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txComision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txExento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txNeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txImpEspecifico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos22/add2.png"))); // NOI18N
        btAgregar.setText("Agregar");
        btAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarActionPerformed(evt);
            }
        });

        btEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos22/Cancel.png"))); // NOI18N
        btEliminar.setText("Eliminar");
        btEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminarActionPerformed(evt);
            }
        });

        btCorreccion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Peso16.png"))); // NOI18N
        btCorreccion.setText("CorrecciÃ³n");
        btCorreccion.setAlignmentX(0.5F);
        btCorreccion.setEnabled(false);
        btCorreccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCorreccionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btEliminar)
                                .addGap(675, 675, 675))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(770, 770, 770)
                                .addComponent(btCorreccion)))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btEliminar)
                            .addComponent(btAgregar))
                        .addGap(130, 130, 130))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(158, 158, 158)
                                .addComponent(btCorreccion)))
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents
private void SetTipo(int ElTipo){
        // NADA
        if(ElTipo==-1){
          fmMain.SetEstado(fmMain.pnPestanas.getSelectedIndex(),0);
          Habilita(false);
          Edicion(false);
          Limpia();
//          txRut.setEnabled(true);
//          txRut.setEditable(true);
//          btIr.setEnabled(true);
//          txRut.requestFocus();
          btCancelar.setEnabled(false);
          btGuardar.setEnabled(false);
          btNuevo.setEnabled(true);
          btEditar.setEnabled(false);
          btAbrir.setEnabled(true);
          Tipo=-1;
          
        }
        // NUEVA ORDEN
        else if(ElTipo==1){
          fmMain.SetEstado(fmMain.pnPestanas.getSelectedIndex(),1);
          btGuardar.setEnabled(true);
          btCancelar.setEnabled(true);
          btEditar.setEnabled(false);
          btNuevo.setEnabled(false);
          btAbrir.setEnabled(false);

          Habilita(true);
          Edicion(true);
          Limpia();
          txRut.requestFocus();
          Tipo=1;
        }
        else if(ElTipo==2){
          fmMain.SetEstado(fmMain.pnPestanas.getSelectedIndex(),0);
          btEditar.setEnabled(false);
          btNuevo.setEnabled(false);
          btGuardar.setEnabled(false);
          btCancelar.setEnabled(true);
          Habilita(true);
          Edicion(false);
          txRut.setEditable(true);
          btIr.setEnabled(true);
          txRut.requestFocus();
          Tipo=2;
        }
        else if(ElTipo==3){
            btGuardar.setEnabled(true);
            btCancelar.setEnabled(true);
            btEditar.setEnabled(false);
            btNuevo.setEnabled(false);
            Habilita(true);
            Edicion(true);
            Tipo=3;
        }
    }
    
    
//--------------------------------------------------------------------------------
// LIMPIA
//--------------------------------------------------------------------------------
private void Limpia(){
    DefaultComboBoxModel dfCm = new DefaultComboBoxModel();
    DefaultTableModel   dfTm = (DefaultTableModel) Grilla.getModel();
    txRut.setText("");
    txProveedor.setText("");
    txDv.setText("");
    txNeto.setText("");
    txComision.setText("");
    txExento.setText("");
    txIva.setText("");
    txTotal.setText("");
    txNroDocumento.setText("");
    txNroNCP.setText("");
           
//    cbTipoDocumento.setModel(dfCm);
//    cbContacto.setModel(dfCm);
    
        
    while(dfTm.getRowCount()>0)
        dfTm.removeRow(0);
    //chbPrioridad.
}  
//--------------------------------------------------------------------------------
// EDICION
//--------------------------------------------------------------------------------
private void Edicion(boolean Estado){
    txRut.setEditable(Estado);
    txProveedor.setEditable(Estado);
    txNroDocumento.setEditable(Estado);
    txNroNCP.setEditable(Estado);
    txNeto.setEditable(Estado);
    txComision.setEditable(Estado);
    txExento.setEditable(Estado);
    txIva.setEditable(Estado);
    txTotal.setEditable(Estado);
    btAgregar.setEnabled(Estado);
    btEliminar.setEnabled(Estado);
    btCargaDocumento.setEnabled(Estado);
    txNroDocumento.setEditable(Estado);
}
//--------------------------------------------------------------------------------
// HABILITA
//--------------------------------------------------------------------------------
private void Habilita(boolean Estado){
    
    cbTipoDocumento.setEnabled(Estado);
    cbTipo.setEnabled(Estado);
    btAgregar.setEnabled(Estado);
    btEliminar.setEnabled(Estado);
    txRut.setEnabled(Estado);
    txProveedor.setEnabled(Estado);
    txDv.setEnabled(Estado);
    btCorreccion.setEnabled((Estado));
  
    txComision.setEnabled(Estado);
    dtEmision.setEnabled(Estado);
    txNeto.setEnabled(Estado);
    txExento.setEnabled(Estado);
    txIva.setEnabled(Estado);
    txTotal.setEnabled(Estado);
    btIr.setEnabled(Estado);
    txEstado.setEnabled(Estado);
    btCargaDocumento.setEnabled(Estado);
    txNroDocumento.setEnabled(Estado);
    txImpEspecifico.setEnabled(Estado);
    txNroNCP.setEnabled(Estado);
    
}

static public int GetCol(String Col){
        return Columnas.valueOf(Col).ordinal();
    }


    public void CargaProveedor(String Rut){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        try {
            Rs = Sql.Select("select rut,dv,nombre\n" +
                            "from proveedor\n" +
                            "where rut=" + Rut);
            if(Sql.GetRowCount()==0) return;
            
            Rs.next();
            txRut.setText(Rs.getString("Rut"));
            txDv.setText(Rs.getString("Dv"));
            txProveedor.setText(Rs.getString("Nombre").trim());
            
        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
    }
    private void txRutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txRutKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btIr.doClick();
        }
    }//GEN-LAST:event_txRutKeyPressed
    public void AbrirNCP(String Rut,String Numero){
        ResultSet Rs;
        String tip= null;
        ExeSql Sql = new ExeSql();
        ExeSqlLuvaly luv = new ExeSqlLuvaly();
        ResultSet producto = null;
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        double Cantidad=0;
        
        while(TableModel.getRowCount()>0)
                        TableModel.removeRow(0);  
        
        try {
        //Carga Encabezado
        Rs = Sql.Select("select e.femision, e.electronica," +
                        "CASE \n" +
                        "WHEN e.tipdocorigen is null THEN 'FAP' ELSE e.tipdocorigen \n"+
                        "END,"+
                        "CASE \n" +
                        "WHEN e.nrodocorigen is null THEN 0 ELSE e.nrodocorigen \n" +
                        "END,\n" +
                        "case e.totaldocto - e.pagado when 0 then 'Utilizada' when e.totaldocto then 'No Utilizada' else 'Parcial' end as Utilizado\n" +
                        "from ctacteprv e\n" +
                        "where e.tipdocto='NCP'\n" +
                        "and nrodocto="+ Numero +"\n" +
                        "and rut="+ Rut);
        Rs.next();
        dtEmision.setDate(Rs.getDate("femision"));
        if(Rs.getInt("electronica")==1)
            chkElectronica.setSelected(true);
        else
            chkElectronica.setSelected(false);
        if(Rs.getString("tipdocorigen").trim().equals("FAP"))
            cbTipoDocumento.setSelectedIndex(0);
        else
            cbTipoDocumento.setSelectedIndex(1);
        txNroNCP.setText(Numero);
        txNroDocumento.setText(Rs.getString("nrodocorigen"));
        txEstado.setText(Rs.getString("Utilizado"));
        
        
        
        
        //Carga Productos
        
        
            Rs = Sql.Select("select trim(d.sku) as sku,p.nombre, trim(u.unidad) as unidad, d.cantidad,d.valorunitario,d.totallinea,d.recibido, d.tipo\n" +
                            "from ctacteprvdet d\n" +
                            "left join producto p on d.sku=p.sku\n" +
                            "left join par_unidad u on u.codigo=p.unidad\n" +
                            "where d.nrodocto="+ Numero +"\n" +
                            "and rut="+ Rut +"\n" +
                            "and tipdocto='NCP'");
            
            while(Rs.next()){
                producto =  luv.Select("select p.nombre,trim(u.unidad) as unidad, u.um from producto p \n"
			  + "LEFT JOIN par_unidad u ON u.codigo=p.unidad\n "
			  + "where p.sku = '"+Rs.getString("sku").trim()+"'");
                producto.next();
                TableModel.addRow(new Object[]{
                        Rs.getString("sku"), 
                        producto.getString("nombre"), 
                        producto.getString("unidad"),
                        fmMain.FormatoNumero(Rs.getDouble("cantidad")),
                        fmMain.FormatoNumero(Rs.getDouble("valorunitario")),
                        fmMain.FormatoNumero(Rs.getDouble("totallinea"))});
                Cantidad = Cantidad + Rs.getDouble("recibido");
                tip = Rs.getString("tipo");
                
            }
            
            if (tip != null){
            if(tip.equals("1")) 
                cbTipo.setSelectedIndex(1);
            else
                cbTipo.setSelectedIndex(0);
            }
            else{
                if(Cantidad == 0) 
                cbTipo.setSelectedIndex(1);
            else
                cbTipo.setSelectedIndex(0);
                
            }
            Sumador();
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }finally{
            Sql.Close();
        }
            
    }
    private void btIrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIrActionPerformed

        if(!txRut.getText().isEmpty()){
            CargaProveedor(txRut.getText());
        }
        else{
            jdBuscarCliPrv BPC = new jdBuscarCliPrv(null, true);
            BPC.setLocationRelativeTo(null);
            BPC.setTitle("Buscar Proveedor");
            BPC.SetTipo(1);
            BPC.setVisible(true);
            CargaProveedor(BPC.GetRut());
        }

        // Si cargÃ³ cliente y es nuevo.
        if(!txProveedor.getText().isEmpty() && Tipo==1){
            //CargaCodOc(RutMaster);
            Habilita(true);
            Edicion(true);
            txNroDocumento.requestFocus();
            txEstado.setText("Sin Utilizar");
            fmMain.SetEstado(fmMain.pnPestanas.getSelectedIndex(),1);
        }
        // Si cargÃ³ cliente y esta abriendo
        if(!txProveedor.getText().isEmpty() && Tipo==2){
            jdAbrirDocumento ADoc = new jdAbrirDocumento(null, true);
            if(ADoc.ShowModal("NCP",txRut.getText().trim())==JOptionPane.YES_OPTION){
                AbrirNCP(txRut.getText().trim(),ADoc.GetNumero());
            }
        }
    }//GEN-LAST:event_btIrActionPerformed

    private void cbTipoDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoDocumentoActionPerformed
       
        if(Tipo==2){
        
            cbTipoDocumento.setSelectedIndex(PosTipoDoc);
                
        }
        
        if(cbTipoDocumento.getSelectedIndex() == 2){
        
            txNroDocumento.setText("0");
            cbTipo.setSelectedIndex(2);
        }
        
        
        
    }//GEN-LAST:event_cbTipoDocumentoActionPerformed

    private void txNroDocumentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txNroDocumentoKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER && Tipo!=2){
            btCargaDocumento.doClick();
        }
    }//GEN-LAST:event_txNroDocumentoKeyPressed

    private void CargaDocumentoOrigen(String Rut,String Tipo, String Numero,int TipoNCC){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        
        txNroDocumento.setText(Numero);
        
        while(TableModel.getRowCount()>0)
            TableModel.removeRow(0);
        
        try {
            //Si es tipo Producto
            if(TipoNCC==0){
                Rs = Sql.Select("select trim(d.sku)as sku ,p.nombre,u.um,d.cantidad,d.valorunitario,d.totallinea\n" +
                                "from ctacteprvdet d\n" +
                                "left join producto p on d.sku=p.sku\n" +
                                "left join par_unidad u on u.codigo =p.unidad\n" +
                                "where d.rut=" + Rut +"\n" +
                                "and d.tipdocto='"+ Tipo +"'\n" +
                                "and d.nrodocto=" + Numero);
                while(Rs.next()){
                TableModel.addRow(new Object[]{
                        Rs.getString("sku"), 
                        Rs.getString("nombre"), 
                        Rs.getString("um"),
                        fmMain.FormatoNumero(Rs.getDouble("cantidad")),
                        fmMain.FormatoNumero(Rs.getDouble("valorunitario")),
                        fmMain.FormatoNumero(Rs.getDouble("totallinea"))});
                }
                btAgregar.setEnabled(false);
                btEliminar.setEnabled(true);
            }
            
            if(TipoNCC==1){
                Rs = Sql.Select("select trim(d.sku)as sku ,p.nombre,u.um,d.cantidad,d.valorunitario,d.totallinea\n" +
                                "from ctacteprvdet d\n" +
                                "left join producto p on d.sku=p.sku\n" +
                                "left join par_unidad u on u.codigo =p.unidad\n" +
                                "where d.rut=" + Rut +"\n" +
                                "and d.tipdocto='"+ Tipo +"'\n" +
                                "and d.nrodocto=" + Numero);
                while(Rs.next()){
                TableModel.addRow(new Object[]{
                        Rs.getString("sku"), 
                        Rs.getString("nombre"), 
                        Rs.getString("um"),
                        fmMain.FormatoNumero(Rs.getDouble("cantidad")),
                        fmMain.FormatoNumero(Rs.getDouble("valorunitario")),
                        fmMain.FormatoNumero(Rs.getDouble("totallinea"))});
                }
                btAgregar.setEnabled(false);
                btEliminar.setEnabled(true);
            }
            
            
             if(TipoNCC==2 && cbTipoDocumento.getSelectedIndex() == 2){
                
                TableModel.addRow(new Object[]{
                        "9999", 
                        "REGULARIZACION", 
                        "UNIDADES",
                        1,
                        1,
                        1
                });
                
                btAgregar.setEnabled(false);
                btEliminar.setEnabled(true);
            }
            
            
            
            
            
            
            Sumador();
        } catch (Exception e) {
            fmMain.Mensaje(e.getMessage());
        }finally{
            Sql.Close();
        }
            
        
    }
    
    private void btCargaDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCargaDocumentoActionPerformed

        if(txRut.getText().isEmpty()) return;

        
        if(!txNroDocumento.getText().isEmpty()){
            
                CargaDocumentoOrigen(txRut.getText().trim(), cbTipoDocumento.getSelectedItem().toString().substring(0, 3),txNroDocumento.getText(),cbTipo.getSelectedIndex());
                       
                btAgregar.setEnabled(true);
        
        }else{
        
            jdAbrirDocumento ADoc = new jdAbrirDocumento(null, true);
            
            if(ADoc.ShowModal(cbTipoDocumento.getSelectedItem().toString().substring(0, 3),txRut.getText().trim())==JOptionPane.YES_OPTION){
                
                CargaDocumentoOrigen(txRut.getText().trim(), cbTipoDocumento.getSelectedItem().toString().substring(0, 3),ADoc.GetNumero(),cbTipo.getSelectedIndex());
                
                if(cbTipo.getSelectedIndex()==0){
                
                    btAgregar.setEnabled(true);
                
                }else{
                 
                    btAgregar.setEnabled(true);
                }
                    
            }
        }

    }//GEN-LAST:event_btCargaDocumentoActionPerformed

    private void cbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoActionPerformed
        if(cbTipo.getSelectedIndex()==0 && !txNroDocumento.getText().isEmpty() && Tipo!=2)
            CargaDocumentoOrigen(txRut.getText().trim(), cbTipoDocumento.getSelectedItem().toString().substring(0, 3),txNroDocumento.getText(),cbTipo.getSelectedIndex());
        //else
            

    }//GEN-LAST:event_cbTipoActionPerformed

    private void txIvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txIvaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txIvaActionPerformed

    private void btNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevoActionPerformed
        SetTipo(1);
    }//GEN-LAST:event_btNuevoActionPerformed

    private void btAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarActionPerformed
        DefaultTableModel tbModel = (DefaultTableModel) Grilla.getModel();

        jdOCCAgregaProducto AgregaProducto = new jdOCCAgregaProducto(null,true);
        AgregaProducto.setLocationRelativeTo(null);
        AgregaProducto.setTitle("Agragar Producto");
        AgregaProducto.setVisible(true);
        tbModel.addRow(AgregaProducto.GetFilaNCC());
        Sumador();
    }//GEN-LAST:event_btAgregarActionPerformed

    private void btEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminarActionPerformed
        if(!Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString().isEmpty())
        if(JOptionPane.showConfirmDialog(null, "Â¿Desea Eliminar el registro?") == JOptionPane.YES_OPTION){
            DefaultTableModel tbMd = (DefaultTableModel) Grilla.getModel();
            tbMd.removeRow(Grilla.getSelectedRow());
            Sumador();
        }
    }//GEN-LAST:event_btEliminarActionPerformed

    private void GrillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMouseClicked
        if(evt.getClickCount()==2 && !Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString().isEmpty()){
            jdIngresaNumero jdNumero = new jdIngresaNumero(null, true);
            jdNumero.setLocationRelativeTo(null);
            jdNumero.setVisible(true);        
            if(jdNumero.GetNumero() != -99 ){
                try {
                    
                     double valor = Double.parseDouble(Grilla.getValueAt(Grilla.getSelectedRow(),3).toString().replaceAll("\\,",""));
                       
                    Grilla.setValueAt(jdNumero.GetNumero(), Grilla.getSelectedRow(),GetCol("Cantidad"));
                
                    Grilla.setValueAt(jdNumero.GetPrecio(), Grilla.getSelectedRow(),GetCol("Unitario"));
               
                    double TotLinea = jdNumero.GetNumero() * jdNumero.GetPrecio();
                    Grilla.setValueAt(fmMain.FormatoNumero(TotLinea),Grilla.getSelectedRow(),GetCol("Total"));
                    Sumador();
                
                } catch (Exception e) {
                    System.out.println(e);
                }
            }
        }
    }//GEN-LAST:event_GrillaMouseClicked
    private int EsElectrÃ³nica(){
        if(chkElectronica.isSelected())
            return 1;
        else
            return 0;
    }

    
    private void btGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarActionPerformed
        String Validacion="";
         int calcula = 1;    //Calcula o no el Costo Promedio

        // Validcaciones
        if(txNroDocumento.getText().isEmpty()) Validacion = Validacion + "Falta Documento de Origen\n";
        if(getFecha().isEmpty()) Validacion = Validacion + "Debe Especificar la fecha del documento\n";
        if(txNroNCP.getText().isEmpty()) Validacion = Validacion + "Falta Numero de la Nota de CrÃ©dito\n";
        
        
         //***************************************************************************************************************************//
        
        ExeSql Sql6 = new ExeSql();
        ResultSet Rs6;
        
        String Rut = txRut.getText().trim();
        String Numero = txNroNCP.getText().trim();
        
        intNivelUsuario = fmMain.trae_nivel(fmMain.GetUsuario());
            
        try {
            Rs6 = Sql6.Select("SELECT rut,tipdocto,nrodocto FROM doc_mail \n" +
                              "WHERE rut = "+Rut+ "\n"+
                              "AND nrodocto=" + Numero);
            
            
            if(Sql6.GetRowCount()==0 && intNivelUsuario < 90 ){
                JOptionPane.showMessageDialog(null,"Error Ingreso de Documento");
                txNroNCP.requestFocus();
                return;
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(pfNCPProveedor.class.getName()).log(Level.SEVERE, null, ex);
        }
   
        
        
        if(!Validacion.isEmpty()){
            fmMain.Mensaje("Error: " + Validacion);
            return;
        }
        
        if(fmMain.OkCancel("Desea Guardar") != JOptionPane.OK_OPTION){
            return;
        }
        
        
        ExeSql Sql = new ExeSql();
        ExeSql Sql3 = new ExeSql();
        ExeSql Sql4 = new ExeSql();
           //------------------------------------------
            ExeSql Sql2 = new ExeSql();
            String qryUpd="",  v_producto="";
            ResultSet Rs, Rs2, Rs4;
            boolean valido = true;   
            double v_cantidad =0, v_CantMetro =0, v_CantNCP =0;
            String Query ="";
            
             //******************************* Calculo Costo Promedio *******************************************
        
                for (int i = 0; i < Grilla.getRowCount(); i++) {
                
                    
                    String Sku = Grilla.getModel().getValueAt(i, 0).toString().trim();
                    String Cantidad = Grilla.getModel().getValueAt(i, 3).toString();
                    String ValorUnitario = Grilla.getModel().getValueAt(i, 4).toString().trim();
                    
                    Calcular_CostoPromedio(Sku,Cantidad,ValorUnitario,i);
                
                
                }
        
      //********************************************************************************************************
            
            
                if (cbTipo.getSelectedItem().toString().trim().equals("Producto")){          
                                    //----- Validar el Ingreso que esten las cantidades en Transito ----
                                    try {

                                    for(int i=0; i< Grilla.getRowCount() ; i++){
                                        Query = " select ubicacion,sku,cant from mt_productos where ubicacion = '" + fmMain.BodegaNCP() + "' "
                                                + " and sku = '" +  Grilla.getValueAt(i, 0).toString().trim() + "'";

                                           Rs2 = Sql2.Select(Query);
                                                    if (Rs2.next()){
                                                        v_CantMetro = Rs2.getDouble("cant");
                                                    }
                                               v_CantNCP =   Double.valueOf(Grilla.getValueAt(i, 3).toString().trim());
                                               v_producto = Grilla.getValueAt(i, 1).toString().trim();
                                               if(v_CantMetro<v_CantNCP){
                                                   valido = false;
                                                   break;
                                               }
                                    }
                                    } catch (Exception e) {
                                        System.out.println(Sql.GetSql());
                                        LogError.Guardar(this.getClass().getName(),e.getMessage());
                                        fmMain.Mensaje("Ha ocurrido un error: " + e);
                                    } finally {
                                        Sql2.Close();
                                    }
                
            
                                    if (!valido){
                                        fmMain.Mensaje("La cantidad en Metro de NCP debe ser Mayor o igual a la cantidad NCP de: \n"  + 
                                                " Producto: " + v_producto + "\n" 
                                         + "Cant Metro NCP = " +  v_CantMetro + "        Cant NCP: " +  v_CantNCP );
                                        return;
                                    }
                }
         //------------------------------------------------------------------
       
        // Si es Nueva NCP
        try {
            // Encabezado
            Sql.ExeSql("insert into ctacteprv \n" +
                        "(rut,tipdocto,nrodocto,femision,totalexento,totalafecto, comision, totaliva,totalotroimp,totaldocto,electronica,tipdocorigen,nrodocorigen,pagado,estado,autoriza)\n" +
                        "values (\n" +
                        txRut.getText() + ",\n'" +
                        "NCP" + "',\n" +
                        txNroNCP.getText() +",\n'" +
                        getFecha() + "',\n" +
                        fmMain.SetGuardar(txExento.getText()).trim() +",\n" +
                        fmMain.SetGuardar(txNeto.getText()) +",\n" +
                        fmMain.SetGuardar(txComision.getText()) +",\n" +
                        fmMain.SetGuardar(txIva.getText()) + ",\n" +
                        fmMain.SetGuardar(txImpEspecifico.getText()) +",\n" +
                        fmMain.SetGuardar(txTotal.getText()) + ",\n" +
                        EsElectrÃ³nica() + ",\n'" +
                        cbTipoDocumento.getSelectedItem().toString().substring(0,3) + "',\n'" +
                        txNroDocumento.getText() + "',\n" +
                        "0,\n" +
                        cbTipo.getSelectedIndex() + "," +
                        1 +
                        ")");
            // Detalle
            String Recibido="";
            
            for(int i=0; i< Grilla.getRowCount(); i++){
                    
                if(cbTipo.getSelectedIndex()==0)
                        Recibido=fmMain.SetGuardar(Grilla.getModel().getValueAt(i,GetCol("Cantidad")).toString());
                    else
                        Recibido="0";
                    Sql.ExeSql(" INSERT INTO ctacteprvdet(\n" +
                            " rut, tipdocto, nrodocto, sku, cantidad, valorunitario, totallinea,recibido, tipo)\n" + 
                            " VALUES (" +
                             txRut.getText() +"," +
                            "'NCP'," + 
                            txNroNCP.getText() + ",'" +
                            Grilla.getModel().getValueAt(i,GetCol("Sku")).toString() + "'," +
                            fmMain.SetGuardar(Grilla.getModel().getValueAt(i,GetCol("Cantidad")).toString()) + "," +
                            fmMain.SetGuardar(Grilla.getModel().getValueAt(i,GetCol("Unitario")).toString()) + "," +
                            fmMain.SetGuardar(Grilla.getModel().getValueAt(i,GetCol("Total")).toString()) +"," + 
                            Recibido + "," +
                            cbTipo.getSelectedIndex() +" )");
                    
//                //----------- SE REBAJA LO INGRESADO EN BODEGA NCP ---------------------------
//                qryUpd = " update mt_productos set cant = cant -" +  Grilla.getValueAt(i, 3).toString().trim() + 
//                     " where ubicacion = '" + fmMain.BodegaNCP()+ "' and sku = '" +  Grilla.getValueAt(i, 0).toString().trim() + "' ";
//                Sql.ExeSql(qryUpd);
//                //---------------------------------------------------------------------------------
                    
                }      
            
                Sql.Commit();
               
                
                
                
                if (cbTipoDocumento.getSelectedIndex() == 2){
                
                    Sql3.ExeSql("INSERT INTO prv_cuentasxpagar \n"
                             + "(rut,tipdocto,nrodocto,fpago,estado,monto,tipo,nrocuota,tipopago,reporte) \n"
                             + "VALUES ("
                             + txRut.getText() + ","+
                             "'NCP',"
                             + txNroNCP.getText() + ",'"
                             + formatofecha.format(hoy) + "',"
                             + 0 + ","
                             + fmMain.SetGuardar(txTotal.getText()) + ","
                             + 0 + ","
                             + 1 + ","
                             + 10 + "," 
                             + 0 + ")");
                    Sql3.Commit();
                      calcula = 0;
                    
                }else {
                
                    calcula = 1;
                
                }
                
                
                
                   //****************************** Actualiza Costo Promedio ***************************//
                if (calcula == 1) {
                    ExeSql Sql8 = new ExeSql();
                    ExeSql Sql9 = new ExeSql();
                   
                    try {
        
                            for (int i = 0; i < Grilla.getRowCount(); i++) {
                
                                    Sql8.ExeSql("UPDATE producto SET\n" +
                                                "costofinal = " + Math.round(Double.parseDouble(Lista.get(i).get(1))) + "\n" +
                                                "WHERE sku = '" + Lista.get(i).get(0).toString().trim() + "'\n");
                                    
                                    Sql9.ExeSql("UPDATE inventario SET\n" +
                                                "stock2 = stock \n" +
                                                "WHERE sku = '" + Lista.get(i).get(0).toString().trim() + "'\n");
                     
                            }
                
                            Sql8.Commit();
                            Sql9.Commit();
                
                    }catch (SQLException ex) {
            
                            Sql8.Rollback();
                            Sql9.Rollback();
                            Logger.getLogger(pfNCPProveedor.class.getName()).log(Level.SEVERE, null, ex);
                    }
        
                }    
        
        
             //******************************************************************************************//
                  
                fmMain.Mensaje("Guardado");
                SetTipo(-1);
        } catch (Exception e) {
            
            Sql.Rollback();
            Sql2.Rollback();
            Sql3.Rollback();
            System.out.println(e);
        }  finally{
            Sql.Close();
        }
        
        // Si esta modificando NCP
        
    }//GEN-LAST:event_btGuardarActionPerformed

    private void Calcular_CostoPromedio(String Sku, String Cant, String Vun, int fila){
    
        
         Vun = Vun.replaceAll("\\,","");
        
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        
        double costopromedio = 0;
        double nuevocostopromedio = 0;
        int stock = 0;
        int nuevostock = 0;
        double totalcompra = 0;
        double totalanterior = 0;
        double nuevototal = 0;
                
        
        try {
            Rs = Sql.Select("SELECT p.sku, p.costofinal, i.stock2 FROM producto p \n" +
                            "LEFT JOIN inventario i ON p.sku = i.sku \n" +
                            "WHERE p.sku = '"+Sku+"'");
            if (Sql.GetRowCount() > 0){
                
                Rs.next();
                
                stock = Rs.getInt("stock2");
                costopromedio = Rs.getDouble("costofinal");
              
                System.out.println("Actual Stock :"+stock);
                System.out.println("Actual CostoPromedio :"+costopromedio);
                
                System.out.println("Cant Compra :"+Integer.parseInt(Cant.replace(".00", "")));
                System.out.println("Valor Unitario :"+Double.parseDouble(Vun));
                totalcompra = (Integer.parseInt(Cant.replace(".00", "")) * Double.parseDouble(Vun));
                
                System.out.println("Total Compra :"+totalcompra);
                
                
                nuevostock = stock - Integer.parseInt(Cant.replace(".00", ""));
                System.out.println("Nuevo Stock :"+nuevostock);               
                
                totalanterior = (stock * costopromedio);
                System.out.println("Actual Total :"+totalanterior+"\n\n");
                
                
                nuevototal = (totalanterior - totalcompra);
                
                nuevocostopromedio = (nuevototal / nuevostock);
                
                
            
            }
            
            Lista.add(new ArrayList<String>());
  
        
            Lista.get(fila).add(0,Sku);
            Lista.get(fila).add(1,String.valueOf(nuevocostopromedio));
  
            
//            System.out.println("LA FILA1 0 = "+Lista.get(fila).get(0));
//            System.out.println("LA FILA1 0 = "+Lista.get(fila).get(1));
            
        
        } catch (SQLException ex) {
        
            Logger.getLogger(pfFAProveedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    
    } 
    
    
    
    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        if (fmMain.OkCancel("Â¿Cancelar modificaciones?") == JOptionPane.OK_OPTION) {
            if (Tipo == 3) {
                Tipo = 2;
                if(!txProveedor.getText().isEmpty())
                    btCargaDocumento.doClick();
                else
                    SetTipo(-1);
                
            } else {
                SetTipo(-1);
            }
            
        }

    }//GEN-LAST:event_btCancelarActionPerformed

    private void btAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAbrirActionPerformed
        SetTipo(-1);
        SetTipo(2);
    }//GEN-LAST:event_btAbrirActionPerformed

    private void btCorreccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCorreccionActionPerformed
        if (txEstado.getText().trim().equals("Utilizada")){
            fmMain.Mensaje("La factura se encuentra Autorizada");
            return;
        }
        jdAjustePesos aju = new jdAjustePesos(null, true);
        aju.setLocationRelativeTo(null);
        aju.setTitle("Ajuste Pesos");
        aju.setVisible(true);
        PesoCorreccion = aju.GetAjuste();
        Sumador();
    }//GEN-LAST:event_btCorreccionActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btEditarActionPerformed
    
    public String getFecha() {
        
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            return( sdf.format( (dtEmision.getDate()).getTime() ) );
        } catch (Exception e) {
            return "";
        }
                    
    }    
    
    
    private void Sumador(){    
    
        double Neto=0;
        double Neto2=0;
        double Exento=0;
        double Comision=0;
        double Iva=0;
        double Iva2=0;
        double Total=0;
        String Valor;
    
        for(int i=0; i< Grilla.getRowCount(); i++){
            Valor = Grilla.getModel().getValueAt(i,GetCol("Total")).toString();
            Valor = Valor.replace(fmMain.GetMiles(), "");
            Neto =  Float.parseFloat(Valor) + Neto;
        }
    
        if (txRut.getText().trim().equals("96726970")){
        
            Comision = Math.round(Neto*0.005);
            Neto = Neto+Comision;
        }

    
    //Si es exenta se suma en Exento.
        if(cbTipoDocumento.getSelectedItem().toString().substring(0,3).equals("FEC")){
       
           Exento=Math.round(Neto);
           Neto=0;
           Iva = 0;
           Total = Exento;
    
        }else{
      
            Neto2 = Neto;
            Neto = Math.round(Neto);
            Iva2 = (Neto2 * Double.parseDouble("0.19")); 
            Iva = Math.round((Neto * Double.parseDouble("0.19")));
        
        
            if(PesoCorreccion != 0){
     
                 if(PesoCorreccion==1){
                    
                    Iva = Iva +1;
                    Iva2 = Iva2 +1;
              
                }else{
                    
                     Neto = Neto -1;
                    Neto2 = Neto2 -1;
                }       
            }
        //Total = Neto + Iva; 
     
            Total = Neto2 + Iva2;
     
        }
    
        System.out.println("EL TOTAL ES : "+Total);
    
        txComision.setText(fmMain.FormatoTotal(Comision));
        txNeto.setText(fmMain.FormatoTotal(Neto2));
        txExento.setText(fmMain.FormatoTotal(Exento));
        txIva.setText(fmMain.FormatoTotal(Iva2));
        txTotal.setText(fmMain.FormatoTotal(Math.round(Total)));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla;
    private javax.swing.JButton btAbrir;
    private javax.swing.JButton btAgregar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btCargaDocumento;
    private javax.swing.JButton btCorreccion;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btEliminar;
    private javax.swing.JButton btGuardar;
    private javax.swing.JButton btIr;
    private javax.swing.JButton btNuevo;
    private javax.swing.JComboBox cbTipo;
    private javax.swing.JComboBox cbTipoDocumento;
    private javax.swing.JCheckBox chkElectronica;
    private org.jdesktop.swingx.JXDatePicker dtEmision;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private javax.swing.JLabel lbFolio;
    private javax.swing.JPanel pnMenu;
    private javax.swing.JTextField txComision;
    private javax.swing.JTextField txDv;
    private javax.swing.JTextField txEstado;
    private javax.swing.JTextField txExento;
    private javax.swing.JTextField txImpEspecifico;
    private javax.swing.JTextField txIva;
    private javax.swing.JTextField txNeto;
    private javax.swing.JTextField txNroDocumento;
    private javax.swing.JTextField txNroNCP;
    private javax.swing.JTextField txProveedor;
    private javax.swing.JTextField txRut;
    private javax.swing.JTextField txTotal;
    // End of variables declaration//GEN-END:variables
}
