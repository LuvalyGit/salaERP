/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Conexion.ExeSqlLuvaly;
import Dialogos.jdBuscarCliPrv;
import Dialogos.jdPagadoPrvCli;
import Dialogos.jdPagarPrv;
import Formularios.fmMain;
import static Formularios.fmMain.pnPestanas;
import Utilidades.Exporter;
import Utilidades.PanelTab;
import java.awt.BorderLayout;
import java.awt.event.KeyEvent;
import java.io.File;
import java.math.BigInteger;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.util.*;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import net.sf.jasperreports.components.map.Item;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
/**
 *
 * @author David Alcaman
 */
public class pfReporteDespachador extends javax.swing.JPanel {
    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    /**
     * Creates new form pfReportePagosPrv
     */
    public pfReporteDespachador() {
        initComponents();
        CargaUsuario();
        CboUsuario.setEnabled(false);
        CboUsuario.setSelectedIndex(0);
        
// Grilla de Encabezado
    rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        GrillaEnca.getColumnModel().getColumn(1).setCellRenderer(rightRenderer);        



// Grilla Revision de Guias
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        Grilla.getColumnModel().getColumn(1).setCellRenderer(rightRenderer);
        

// Grilla Revision de Productos en Guias
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        Grilla_Det.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        Grilla_Det.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        Grilla_Det.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        
        
        
        
        String item= fmMain.GetUsuario();
        int i =-100;
        if (!fmMain.GetUsuarioAdministrador())
        {
            CboUsuario.setEnabled(false);
              boolean exists = false;
                    for (int index = 0; index < CboUsuario.getItemCount() && !exists; index++) {
                      if (item.equals(CboUsuario.getItemAt(index))) {
                        exists = true;
                        i=index;
                       break;
                      }
                    }
            CboUsuario.setSelectedIndex(i);
                
        }
        else
        {
            CboUsuario.setEnabled(true);    
        }
        
                
        
        //Setea fecha inicial Desde y Hasta
            Date date = new Date();
            dtDesde.setDate(date);
            dtHasta.setDate(date);
    
        btExcel.setVisible(false);
        
        // Enlaza Grilla con Grilla
        
        
        
        GrillaEnca.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
        @Override
       public void valueChanged(ListSelectionEvent e){
           if (GrillaEnca.getSelectedRowCount()>0)
               carga_guias(GrillaEnca.getValueAt(GrillaEnca.getSelectedRow(), 0).toString().trim());
       } 
    });      
        
          Grilla.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
        @Override
       public void valueChanged(ListSelectionEvent e){
           if (Grilla.getSelectedRowCount()>0)
               Carga_Detalle_guia(Grilla.getValueAt(Grilla.getSelectedRow(), 1).toString().trim(),Grilla.getValueAt(Grilla.getSelectedRow(), 2).toString().trim());
       } 
    });
          
          
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        CboUsuario = new javax.swing.JComboBox<String>();
        lblUsuario = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lbReg = new javax.swing.JLabel();
        btExcel = new javax.swing.JButton();
        lbTotalGuias = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        Grilla_Det = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        lbReg_det = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbTotalSeparadasDet = new javax.swing.JLabel();
        jPanelGrafico = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        GrillaEnca = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        lbRegEnca = new javax.swing.JLabel();
        cboVendedor = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        dtDesde = new org.jdesktop.swingx.JXDatePicker();
        dtHasta = new org.jdesktop.swingx.JXDatePicker();
        jLabel2 = new javax.swing.JLabel();
        rbDesde = new javax.swing.JRadioButton();
        rbPeriodoTodos = new javax.swing.JRadioButton();

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "PROVEEDOR", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11)));
        jPanel3.setName(""); // NOI18N
        jPanel3.setOpaque(false);

        CboUsuario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Todos>" }));
        CboUsuario.setName("CboUsuario"); // NOI18N
        CboUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CboUsuarioActionPerformed(evt);
            }
        });

        lblUsuario.setText("Usuario");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addComponent(CboUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsuario)
                    .addComponent(CboUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Nro Registros:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Guias Separadas");

        lbReg.setText("0.00");

        btExcel.setText("jButton1");
        btExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcelActionPerformed(evt);
            }
        });

        lbTotalGuias.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbTotalGuias.setText("0.00");

        Grilla.setAutoCreateRowSorter(true);
        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Fecha", "Guia", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(80);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(1).setMinWidth(200);
            Grilla.getColumnModel().getColumn(1).setPreferredWidth(200);
            Grilla.getColumnModel().getColumn(1).setMaxWidth(200);
            Grilla.getColumnModel().getColumn(2).setMinWidth(100);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(100);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(2).setHeaderValue("Tipo");
        }

        Grilla_Det.setAutoCreateRowSorter(true);
        Grilla_Det.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Fecha", "Orden", "Sku", "Nombre", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla_Det.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Grilla_DetMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Grilla_Det);
        if (Grilla_Det.getColumnModel().getColumnCount() > 0) {
            Grilla_Det.getColumnModel().getColumn(0).setMinWidth(80);
            Grilla_Det.getColumnModel().getColumn(0).setPreferredWidth(80);
            Grilla_Det.getColumnModel().getColumn(0).setMaxWidth(80);
            Grilla_Det.getColumnModel().getColumn(1).setMinWidth(100);
            Grilla_Det.getColumnModel().getColumn(1).setPreferredWidth(100);
            Grilla_Det.getColumnModel().getColumn(1).setMaxWidth(100);
            Grilla_Det.getColumnModel().getColumn(2).setMinWidth(100);
            Grilla_Det.getColumnModel().getColumn(2).setPreferredWidth(100);
            Grilla_Det.getColumnModel().getColumn(2).setMaxWidth(100);
            Grilla_Det.getColumnModel().getColumn(3).setMinWidth(200);
            Grilla_Det.getColumnModel().getColumn(3).setPreferredWidth(200);
            Grilla_Det.getColumnModel().getColumn(3).setMaxWidth(200);
            Grilla_Det.getColumnModel().getColumn(4).setMinWidth(100);
            Grilla_Det.getColumnModel().getColumn(4).setPreferredWidth(100);
            Grilla_Det.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Nro Registros:");

        lbReg_det.setText("0.00");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Sum Cantidad");

        lbTotalSeparadasDet.setText("0.00");

        jPanelGrafico.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelGrafico.setMaximumSize(new java.awt.Dimension(800, 600));
        jPanelGrafico.setMinimumSize(new java.awt.Dimension(800, 600));
        jPanelGrafico.setPreferredSize(new java.awt.Dimension(800, 600));

        javax.swing.GroupLayout jPanelGraficoLayout = new javax.swing.GroupLayout(jPanelGrafico);
        jPanelGrafico.setLayout(jPanelGraficoLayout);
        jPanelGraficoLayout.setHorizontalGroup(
            jPanelGraficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelGraficoLayout.setVerticalGroup(
            jPanelGraficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        GrillaEnca.setAutoCreateRowSorter(true);
        GrillaEnca.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Fecha", "# Guias"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GrillaEnca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaEncaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(GrillaEnca);
        if (GrillaEnca.getColumnModel().getColumnCount() > 0) {
            GrillaEnca.getColumnModel().getColumn(0).setMinWidth(80);
            GrillaEnca.getColumnModel().getColumn(0).setPreferredWidth(80);
            GrillaEnca.getColumnModel().getColumn(0).setMaxWidth(80);
            GrillaEnca.getColumnModel().getColumn(1).setMinWidth(200);
            GrillaEnca.getColumnModel().getColumn(1).setPreferredWidth(200);
            GrillaEnca.getColumnModel().getColumn(1).setMaxWidth(200);
        }

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Dias separados");

        lbRegEnca.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbRegEnca.setText("0.00");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbReg_det, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTotalSeparadasDet, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbReg, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lbRegEnca, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(116, 116, 116)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lbTotalGuias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelGrafico, javax.swing.GroupLayout.PREFERRED_SIZE, 709, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(btExcel)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(lbRegEnca))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(lbTotalGuias)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(lbReg))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(lbReg_det)
                            .addComponent(lbTotalSeparadasDet))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(btExcel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelGrafico, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        cboVendedor.setText("Buscar");
        cboVendedor.setName("CboUsuario"); // NOI18N
        cboVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboVendedorActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "PERIODO VENCIMIENTO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        dtDesde.setEnabled(false);

        dtHasta.setEnabled(false);
        dtHasta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dtHastaActionPerformed(evt);
            }
        });

        jLabel2.setText("Hasta");

        buttonGroup1.add(rbDesde);
        rbDesde.setText("Desde");
        rbDesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDesdeActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbPeriodoTodos);
        rbPeriodoTodos.setText("Todos");
        rbPeriodoTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPeriodoTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbDesde)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(rbPeriodoTodos))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dtHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dtDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(rbDesde)))
                .addGap(18, 18, 18)
                .addComponent(rbPeriodoTodos))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(cboVendedor)
                .addContainerGap(470, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboVendedor))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(158, Short.MAX_VALUE))
        );

        jPanel3.getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void CargaUsuario(){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        CboUsuario.removeAllItems();
        CboUsuario.addItem("<Todos>");  // Agrego la condicion inicial de Todos
        try {
            Rs = Sql.Select(" select \n" +
                        "	distinct a.usuario \n" +
                        "from auditoria_bd a\n" +
                        "left join transporte_despachos td\n" +
                        "on 	td.voucher   = a.campo1  and\n" +
                        "        td.nrodocto  = CAST(a.old_valor as INT)  and\n" +
                        "        td.tipdocto  = a.new_valor\n" +
                        "where \n" +
                        "      	a.tabla = 'transporte_despachos' and\n" +
                        "      	a.tipo_cambio = 'INSERT'");
            if(Sql.GetRowCount()==0) return;
     
           while(Rs.next()){
          
            CboUsuario.addItem( Rs.getString("usuario").trim().toUpperCase());

            //cbvenId.addItem(Rs.getInt("cod"));   
            //btBuscar.doClick();
           } 
           
           CboUsuario.setSelectedIndex(0);

           
           
        } catch (Exception e) {
            System.out.println(e);
        }
        finally{
            Sql.Close();
        }
    }
    
    public void limpiar(){

    DefaultTableModel   enca = (DefaultTableModel) Grilla.getModel();
     DefaultTableModel   det = (DefaultTableModel) Grilla_Det.getModel();
    while(enca.getRowCount()>0)
        enca.removeRow(0);
    
    while(det.getRowCount()>0)
        det.removeRow(0);
    }
    
    
    public void Carga_Detalle_guia(String nrodocto, String tipo){
        String Query ="";
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel TableModel = (DefaultTableModel) Grilla_Det.getModel();
        ExeSqlLuvaly luv = new ExeSqlLuvaly();
        ResultSet producto = null;
        double Sumador=0;
        int ContReg=0;
         while(TableModel.getRowCount()>0)
             TableModel.removeRow(0);
        try {
        

Query="select c.femision, d.nrodocto, d.sku, p.nombre, d.cantidad\n" +
"from \n" +
"ctactecli c\n" +
"left join ctacteclidet d\n" +
"on d.nrodocto = c.nrodocto\n" +
"and d.tipdocto = c.tipdocto\n" +
"inner join producto p\n" +
"on p.sku = d.sku\n" +
"where c.nrodocto =" +  nrodocto + " and c.tipdocto ='"+ tipo + "'";


    Rs = Sql.Select(Query);
    while (Rs.next()){
                producto =  luv.Select("select p.nombre,trim(u.unidad) as unidad, u.um from producto p \n"
                    + "LEFT JOIN par_unidad u ON u.codigo=p.unidad\n "
                    + "where p.sku = '"+Rs.getString("sku").trim()+"'");
                producto.next();
                ContReg++;
                        TableModel.addRow(new Object[]{Rs.getString("femision").trim(),
                                               Rs.getString("nrodocto"),  
                                               Rs.getString("sku").trim(), 
                                               producto.getString("nombre").trim(),
                                               fmMain.FormatoNumero(Rs.getDouble("cantidad"))});
                Sumador = Sumador + Rs.getDouble("cantidad");
                
                lbTotalSeparadasDet.setText(fmMain.FormatoNumero(Sumador));
                lbReg_det.setText(fmMain.FormatoTotal(ContReg));
                Grilla_Det.changeSelection(0, 0 , false, false);
               }
         
            
        } catch (Exception e) {
          
        } finally{
            Sql.Close();
            luv.Close();
        }
}
 
    
    public void carga_guias(String Fecha)
    {
        String Query ="";
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        int ContPagos=0; 
         while(TableModel.getRowCount()>0)
             TableModel.removeRow(0);
        try {
        Query = "select \n" +
            "	td.fdespacho, \n" +
            "    td.nrodocto, \n" +
            "    td.tipdocto\n" +
            "from auditoria_despachos a\n" +
            "left join transporte_despachos td\n" +
            "on 	td.voucher   = a.voucher  and\n" +
            "        td.nrodocto  = a.nrodocto  and\n" +
            "        td.tipdocto  = a.tipdocto\n" +
            "where \n" +
            "      	a.tipo_cambio = 'INSERT' \n";
                    //if(rbDesde.isSelected()){
                            Query = Query + " and  CAST(td.fdespacho AS VARCHAR(10)) =  '" + Fecha + "'\n";
                     //}      
                    if(CboUsuario.getSelectedIndex() >0){
                             Query = Query +   " and lower(trim(a.usuario)) ='" + CboUsuario.getSelectedItem().toString().toLowerCase() + "'    and  td.tipdocto ='GDC' \n";  
                    }



 // EJECUTA CONSULTA
            Rs = Sql.Select(Query);
            fmMain.LimpiaGrilla(TableModel);
            while(Rs.next()){
              ContPagos++;
              //TotSeparadas = TotSeparadas.add(new BigInteger(Rs.getString("tot"))) ;
              TableModel.addRow(new Object[]{Rs.getString("fdespacho").trim(), 
                                               Rs.getString("nrodocto").trim(), 
                                               Rs.getString("tipdocto").trim()});
            }
            
            
                  //lbTotalSeparadas.setText(fmMain.FormatoNumeroBig(TotSeparadas));
                  lbReg.setText(fmMain.FormatoTotal(ContPagos));
            } catch (Exception e) {
          
        } finally{
            Sql.Close();
        }           
    } // fin procedimiento           
    
    
    
    
    
    private void cboVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboVendedorActionPerformed
        ExeSql Sql = new ExeSql();
        ResultSet Rs,RsCant;
        String Query="", Query_Cant="", Query_enca="";
        String NombrePersonal;
        limpiar();
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        DefaultTableModel TableModelEnca = (DefaultTableModel) GrillaEnca.getModel();
        int ContDespachos =0;
         //BigInteger TotSeparadas = new BigInteger("0");
        BigInteger TotDespachos = new BigInteger("0");
         
        while(TableModel.getRowCount()>0)
           TableModel.removeRow(0);        
        
        while(TableModelEnca.getRowCount()>0)
            TableModelEnca.removeRow(0);
     
        try {

   
            // Llenado de primera grilla con los despachos por dia  de un susario X
             Query_enca="select \n" +
                        "	td.fdespacho ,\n" +
                        "	count(*) Desp\n" +
                        "from auditoria_despachos a\n" +
                        "inner join transporte_despachos td\n" +
                        "on 	td.voucher   = a.voucher  and\n" +
                        "        td.nrodocto  = a.nrodocto  and\n" +
                        "        td.tipdocto  = a.tipdocto\n" +
                        "where \n" +
                        "  a.tipo_cambio = 'INSERT' and td.fdespacho is not null \n";         
                   
            if(rbDesde.isSelected()){
                   
                Query_enca = Query_enca + "and  CAST(td.fdespacho AS VARCHAR(10)) between  '" + getDesde() + "' and '" + getHasta() + "'\n";
            }                                                                                                                                                                                                                                                                                                                                                         
        
            String usu2 = CboUsuario.getSelectedItem().toString().toLowerCase();
        
            if(CboUsuario.getSelectedIndex() >0){
                    
                Query_enca = Query_enca +   " and lower(trim(a.usuario)) ='" + usu2.toString() + "'    and  td.tipdocto ='GDC' \n";  
            }
                   
            Query_enca= Query_enca + " group by \n" +
                                     " 	td.fdespacho\n" +
                                     " order by td.fdespacho ASC";

            Rs = Sql.Select(Query_enca);
            
            while(Rs.next()){

                ContDespachos++;
                TotDespachos = TotDespachos.add(new BigInteger(Rs.getString("Desp"))) ;
                TableModelEnca.addRow(new Object[]{Rs.getString("fdespacho").trim(),Rs.getInt("Desp")});
            }
        
            lbTotalGuias.setText(fmMain.FormatoNumeroBig(TotDespachos));
            lbRegEnca.setText(fmMain.FormatoTotal(ContDespachos));

            //carga_guias(GrillaEnca.getValueAt(GrillaEnca.getSelectedRow(), 0).toString().trim());     
             
            ChartPanel chartpanel = Barras3d();
            chartpanel.setDomainZoomable(true);
            jPanelGrafico.setLayout(new BorderLayout());
            jPanelGrafico.add(chartpanel, BorderLayout.SOUTH);
            chartpanel.repaint();
            
        }catch (Exception e) {
         
            fmMain.Mensaje("Existe una inconsistencia en la información.");
        
        }finally{
        
            Sql.Close();
        }
     
    }//GEN-LAST:event_cboVendedorActionPerformed

    private void GrillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMouseClicked
//        if(evt.getClickCount()==2 && !Grilla.getValueAt(Grilla.getSelectedRow(),0).toString().equals("Pendiente")){
//            jdPagadoPrvCli Pagado = new jdPagadoPrvCli(null, true);
//            Pagado.setLocationRelativeTo(null);
//            Pagado.setTitle("Pagos Realizados");
//            Pagado.CargaPagosPrv(Grilla.getValueAt(Grilla.getSelectedRow(), 12).toString().trim());  
//            Pagado.setVisible(true);
//        }
    }//GEN-LAST:event_GrillaMouseClicked

    private void btExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcelActionPerformed
        if(Grilla.getRowCount()==0){
            fmMain.Mensaje("Nada que exportar");
            return;
        }
        
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo Excel",".xls");
        chooser.setFileFilter(filter);
        chooser.setDialogTitle("Guardar Informe en Excel");
        chooser.setMultiSelectionEnabled(false);
        chooser.setAcceptAllFileFilterUsed(false);
        
        if(chooser.showSaveDialog(null)== JFileChooser.APPROVE_OPTION){
            List<JTable> tb=new ArrayList<>();
            List<String> nom=new ArrayList<>();
            tb.add(Grilla);
            nom.add("Socios");
            String file=chooser.getSelectedFile().toString().concat(".xls");
            try {
                Exporter e = new Exporter(new File(file), tb, nom);
                if(e.export())
                    fmMain.Mensaje("Datos Exportados");
            } catch (Exception e) {
                fmMain.Mensaje(e.getMessage());
            }
            
            
        }
    }//GEN-LAST:event_btExcelActionPerformed

    private void CboUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CboUsuarioActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_CboUsuarioActionPerformed

    private void dtHastaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dtHastaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dtHastaActionPerformed

    private void rbDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDesdeActionPerformed
        // TODO add your handling code here:
        if(rbDesde.isSelected()){
            dtDesde.setEnabled(true);
            dtHasta.setEnabled(true);
        }
    }//GEN-LAST:event_rbDesdeActionPerformed

    private void rbPeriodoTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPeriodoTodosActionPerformed
        // TODO add your handling code here:
        if(rbPeriodoTodos.isSelected()){
            dtDesde.setEnabled(false);
            dtHasta.setEnabled(false);
          }
    }//GEN-LAST:event_rbPeriodoTodosActionPerformed

    private void Grilla_DetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Grilla_DetMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Grilla_DetMouseClicked

    private void GrillaEncaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaEncaMouseClicked
        // TODO add your handling code here:
        
//        if(evt.getClickCount()==2) 
//        {
            //carga_guias(GrillaEnca.getValueAt(GrillaEnca.getSelectedRow(), 0).toString());
            Barras3d_Guias(GrillaEnca.getValueAt(GrillaEnca.getSelectedRow(), 0).toString());
//        }
    }//GEN-LAST:event_GrillaEncaMouseClicked
//6700

    
      
public ChartPanel Barras3d_Guias(String Fecha)
        {
            ExeSql Sql = new ExeSql();
            ResultSet Rs;
            String Query="";
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             
            try {
                
//Query = "select \n" +
//"	td.fdespacho fecha,\n" +
//"	count(*) Despachos,\n" +
//"    lower(trim(a.usuario)) usuario\n" +
//"from auditoria_despachos a\n" +
//"left join transporte_despachos td\n" +
//"on 	td.voucher   = a.voucher  and\n" +
//"        td.nrodocto  = a.nrodocto  and\n" +
//"        td.tipdocto  = a.tipdocto\n" +
//"where \n" +
//"      	a.tipo_cambio = 'INSERT' \n";
//  if(rbDesde.isSelected()){
//                Query = Query + "and  CAST(fecha AS VARCHAR(10)) between  '" + getDesde() + " 00:00 ' and '" + getHasta() + " 23:59' \n";
//         }      
//        
//        String usu = CboUsuario.getSelectedItem().toString().toLowerCase();
//        
//       
//        if(CboUsuario.getSelectedIndex() >0){
//                 Query = Query +   " and lower(trim(a.usuario)) ='" + usu.toString() + "'    and  td.tipdocto ='GDC' \n";  
//        }
//                        
//                        
//                 Query = Query + " group by \n" +
//            " 	td.fdespacho,a.usuario\n" +
//            " order by td.fdespacho ASC";
                

                 
Query = "select \n" +
        "	td.fdespacho fecha,\n" +
        "	count(*) Despachos,\n" +
        "    lower(trim(a.usuario)) usuario\n" +
            "from auditoria_despachos a\n" +
            "left join transporte_despachos td\n" +
            "on 	td.voucher   = a.voucher  and\n" +
            "        td.nrodocto  = a.nrodocto  and\n" +
            "        td.tipdocto  = a.tipdocto\n" +
            "where \n" +
            "      	a.tipo_cambio = 'INSERT' \n";
                    //if(rbDesde.isSelected()){
                            Query = Query + " and  CAST(td.fdespacho AS VARCHAR(10)) =  '" + Fecha + "'\n";
                     //}      
                    if(CboUsuario.getSelectedIndex() >0){
                             Query = Query +   " and lower(trim(a.usuario)) ='" + CboUsuario.getSelectedItem().toString().toLowerCase() + "'    and  td.tipdocto ='GDC' \n";  
                    }    
            Query = Query + " group by \n" +
            " 	td.fdespacho,a.usuario\n" +
            " order by td.fdespacho ASC";                    
                
                Rs= Sql.Select(Query);
                dataset.clear();
                while(Rs.next())
                    {
                    dataset.addValue(Rs.getDouble("Despachos"), Rs.getString("usuario"), Rs.getString("fecha"));
                    }
                
            }   
            catch (Exception e)
            {
                fmMain.Mensaje("Error al cargar datos grafico: "+e);
            }
            finally{
              Sql.Close();
            }
            
     
 
                JFreeChart barChart = ChartFactory.createBarChart3D(
                                "Reporte de Despachos",
                                "Días",
                                "Despachos",
                                dataset,
                                PlotOrientation.VERTICAL,
                                true,
                                true,
                                false);
 
                ChartPanel panel = new ChartPanel(barChart);
                 return panel;
 
        }
    
    
    public ChartPanel Barras3d()
        {
            ExeSql Sql = new ExeSql();
            ResultSet Rs;
            String Query="";
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             
            try {
                
Query = "select \n" +
"	td.fdespacho fecha,\n" +
"	count(*) Despachos,\n" +
"    lower(trim(a.usuario)) usuario\n" +
"from auditoria_despachos a\n" +
"left join transporte_despachos td\n" +
"on 	td.voucher   = a.voucher  and\n" +
"        td.nrodocto  = a.nrodocto  and\n" +
"        td.tipdocto  = a.tipdocto\n" +
"where \n" +
"      	a.tipo_cambio = 'INSERT' \n";
  if(rbDesde.isSelected()){
                Query = Query + "and  CAST(fecha AS VARCHAR(10)) between  '" + getDesde() + " 00:00 ' and '" + getHasta() + " 23:59' \n";
         }      
        
        String usu = CboUsuario.getSelectedItem().toString().toLowerCase();
        
       
        if(CboUsuario.getSelectedIndex() >0){
                 Query = Query +   " and lower(trim(a.usuario)) ='" + usu.toString() + "'    and  td.tipdocto ='GDC' \n";  
        }
                        
                        
                 Query = Query + " group by \n" +
            " 	td.fdespacho,a.usuario\n" +
            " order by td.fdespacho ASC";
                
                
                
                Rs= Sql.Select(Query);
                dataset.clear();
                while(Rs.next())
                    {
                    dataset.addValue(Rs.getDouble("Despachos"), Rs.getString("usuario"), Rs.getString("fecha"));
                    }
                
            }   
            catch (Exception e)
            {
                fmMain.Mensaje("Error al cargar datos grafico: "+e);
            }
            finally{
              Sql.Close();
            }
            
     
 
                JFreeChart barChart = ChartFactory.createBarChart3D(
                                "Reporte de Despachos",
                                "Días",
                                "Despachos",
                                dataset,
                                PlotOrientation.VERTICAL,
                                true,
                                true,
                                false);
 
                ChartPanel panel = new ChartPanel(barChart);
 
                return panel;
 
        }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CboUsuario;
    private javax.swing.JTable Grilla;
    private javax.swing.JTable GrillaEnca;
    private javax.swing.JTable Grilla_Det;
    private javax.swing.JButton btExcel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cboVendedor;
    private org.jdesktop.swingx.JXDatePicker dtDesde;
    private org.jdesktop.swingx.JXDatePicker dtHasta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelGrafico;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private javax.swing.JLabel lbReg;
    private javax.swing.JLabel lbRegEnca;
    private javax.swing.JLabel lbReg_det;
    private javax.swing.JLabel lbTotalGuias;
    private javax.swing.JLabel lbTotalSeparadasDet;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JRadioButton rbDesde;
    private javax.swing.JRadioButton rbPeriodoTodos;
    // End of variables declaration//GEN-END:variables

   

    private static class CboUsuario {
        public CboUsuario() {
        }
    }

    public String getDesde() {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        return( sdf.format( (dtDesde.getDate()).getTime() ) );
    }
    public String getHasta() {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        return( sdf.format( (dtHasta.getDate()).getTime() ) );
    }
   
}
