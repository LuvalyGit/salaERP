/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Dialogos.jdBuscarCliPrv;
import Dialogos.jdPagadoPrvCli;
import Dialogos.jdPagarPrv;
import Formularios.fmMain;
import static Formularios.fmMain.pnPestanas;
import Utilidades.Exporter;
import Utilidades.PanelTab;
import java.awt.event.KeyEvent;
import java.io.File;
import java.math.BigInteger;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.util.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
/**
 *
 * @author David Alcaman
 */
public class pfReporteMargen_Fact_OC extends javax.swing.JPanel {
    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    /**
     * Creates new form pfReportePagosPrv
     */
    Boolean Entra = false;
    public pfReporteMargen_Fact_OC() {
        initComponents();
         Calendar fecha = new GregorianCalendar();
        //Obtenemos el valor del año, mes, día,
        //hora, minuto y segundo del sistema
        //usando el método get y el parámetro correspondiente
        int año = fecha.get(Calendar.YEAR);
        int mes = fecha.get(Calendar.MONTH);
       /* int dia = fecha.get(Calendar.DAY_OF_MONTH);
        int hora = fecha.get(Calendar.HOUR_OF_DAY);
        int minuto = fecha.get(Calendar.MINUTE);
        int segundo = fecha.get(Calendar.SECOND);*/
      
        
        String anox ="x";
        String mesx ="x";
        
        anox = String.valueOf(año);
        mesx = String.valueOf(mes+1);

        cboAgno.setSelectedItem(anox); 
        cboMes.setSelectedItem(mesx); 
        
        jLabel5.setVisible(false);
        lbDiferencia.setVisible(false);
          
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        Grilla.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        Grilla.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        Grilla.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuVerProducto = new javax.swing.JMenuItem();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jMenuVerProdOrd = new javax.swing.JMenuItem();
        AGNO = new javax.swing.JPanel();
        cboAgno = new javax.swing.JComboBox<String>();
        cboMes = new javax.swing.JComboBox<String>();
        lblAgno = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbReg = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        Grilla_OC = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        lbTotal = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbMargFAC = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lbTotal1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lbMargOC = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbDiferencia = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbAcumulada = new javax.swing.JLabel();
        btBuscar = new javax.swing.JButton();

        jMenuVerProducto.setText("Ver Producto");
        jMenuVerProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuVerProductoActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuVerProducto);

        jMenuVerProdOrd.setText("Ver Producto Ordenes");
        jMenuVerProdOrd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuVerProdOrdActionPerformed(evt);
            }
        });
        jPopupMenu2.add(jMenuVerProdOrd);

        AGNO.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "PERIODO VENCIMIENTO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        cboAgno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2015", "2016", "2017", "2018", "2019", "2020" }));
        cboAgno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboAgnoActionPerformed(evt);
            }
        });

        cboMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cboMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMesActionPerformed(evt);
            }
        });

        lblAgno.setText("AÑO:");

        jLabel8.setText("MES:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("FACTURAS"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Nro Registros:");

        lbReg.setText("0.00");

        Grilla.setAutoCreateRowSorter(true);
        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod", "Convenio", "Margen", "Total", "Pond."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(50);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(50);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(50);
            Grilla.getColumnModel().getColumn(1).setMinWidth(300);
            Grilla.getColumnModel().getColumn(1).setPreferredWidth(300);
            Grilla.getColumnModel().getColumn(1).setMaxWidth(300);
            Grilla.getColumnModel().getColumn(2).setMinWidth(50);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(50);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(50);
            Grilla.getColumnModel().getColumn(3).setMinWidth(100);
            Grilla.getColumnModel().getColumn(3).setPreferredWidth(100);
            Grilla.getColumnModel().getColumn(3).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(4).setMinWidth(60);
            Grilla.getColumnModel().getColumn(4).setPreferredWidth(60);
            Grilla.getColumnModel().getColumn(4).setMaxWidth(70);
        }

        Grilla_OC.setAutoCreateRowSorter(true);
        Grilla_OC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Periodo", "Margen", "Total", "Ponderado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla_OC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Grilla_OCMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Grilla_OC);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Total Facturado mes");

        lbTotal.setText("0.00");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Marg.");

        lbMargFAC.setText("0.00");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Total OC para mes Facturado");

        lbTotal1.setText("0.00");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Marg.");

        lbMargOC.setText("0.00");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Diferencia");

        lbDiferencia.setText("0.00");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Diferencia Acumulada");

        lbAcumulada.setText("0.00");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(lbReg, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lbTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lbMargFAC, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel6)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(lbAcumulada, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel4)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(lbTotal1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lbMargOC, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(26, 26, 26))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(jLabel5)
                        .addGap(112, 112, 112)
                        .addComponent(lbDiferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(lbReg))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(lbTotal)
                                    .addComponent(jLabel7)
                                    .addComponent(lbMargFAC))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(lbTotal1)
                                    .addComponent(jLabel9)
                                    .addComponent(lbMargOC))))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lbDiferencia)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbAcumulada)
                            .addComponent(jLabel6))))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        btBuscar.setText("Buscar Fact.");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AGNOLayout = new javax.swing.GroupLayout(AGNO);
        AGNO.setLayout(AGNOLayout);
        AGNOLayout.setHorizontalGroup(
            AGNOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AGNOLayout.createSequentialGroup()
                .addGroup(AGNOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AGNOLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(AGNOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAgno)
                            .addComponent(jLabel8))
                        .addGap(37, 37, 37)
                        .addGroup(AGNOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cboMes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboAgno, 0, 70, Short.MAX_VALUE))
                        .addGap(283, 283, 283)
                        .addComponent(btBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AGNOLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        AGNOLayout.setVerticalGroup(
            AGNOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AGNOLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AGNOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboAgno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAgno))
                .addGap(8, 8, 8)
                .addGroup(AGNOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(AGNOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboMes, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btBuscar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(725, Short.MAX_VALUE))
        );

        jPanel1.getAccessibleContext().setAccessibleDescription("xczvxzvczxvcz");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AGNO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(2793, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(AGNO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        AGNO.getAccessibleContext().setAccessibleName("PERIODO VENCIMIENTO1");
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
        ExeSql Sql = new ExeSql();
        ResultSet Rs,Rs1;
        String Query, QTot="";
        String NombrePersonal;
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
//         DefaultTableModel TableGrillaC = (DefaultTableModel) GrillaC.getModel();     
//        DefaultTableModel TableModel2 = (DefaultTableModel) Grilla_Det.getModel();

        int ContPagos      =    0;
        double Total       = 0.00;
        double Margen      = 0.00;
        double ponderado   = 0.00;
        double Total_P     = 0.00;
        double Total_Linea = 0.00;
       
limpiaTablaEncabezadoFAC();
 

try {

Entra=false;    
Query = "select base.codigo,base.convenio,avg(base.Margen) margen ,SUM(base.totalVta) total from (\n" +
"          select conv.codigo,conv.convenio as convenio,\n" +
"           ((d.valorunitario - p.costopromedio) / d.valorunitario) * 100 as Margen,\n" +
"           (sum(d.cantidad)) * d.valorunitario as totalVta\n" +
"          from ctactecli c\n" +
"               left join ctacteclidet d on c.rut = d.rut and c.tipdocto = d.tipdocto and\n" +
"                c.nrodocto = d.nrodocto\n" +
"               left join producto p on d.sku = p.sku\n" +
"               left join par_convenio conv on conv.codigo = p.convenio\n";


    Query = Query + "          where \n" +
"          extract(year from c.femision) =" + cboAgno.getSelectedItem().toString() + " and \n" +
"          extract(month from c.femision) =" + cboMes.getSelectedItem().toString() + " and \n";

        
Query = Query + "          c.tipdocto in ('FAC', 'FEC') and \n" +
"          conv.convenio is  not null\n" +
"          group by conv.codigo,conv.convenio,\n" +
"                   d.sku,\n" +
"                   p.nombre,\n" +
"                   p.valultcompra,\n" +
"                   p.costopromedio,\n" +
"                   d.valorunitario,\n" +
"                   c.tipdocto,\n" +
"                   c.nrodocto) base\n" +
"   group by codigo,convenio                \n" +
" order by codigo,convenio   ";



QTot =" select \n" +
"          SUM(d.cantidad * d.valorunitario) as totalVta\n" +
"          from ctactecli c\n" +
"               left join ctacteclidet d on c.rut = d.rut and c.tipdocto = d.tipdocto and\n" +
"                c.nrodocto = d.nrodocto\n" +
"               left join producto p on d.sku = p.sku\n" +
"               left join par_convenio conv on conv.codigo = p.convenio\n";
   
QTot = QTot + "          where \n" +
"          extract(year from c.femision) =" + cboAgno.getSelectedItem().toString() + " and \n" +
"          extract(month from c.femision) =" + cboMes.getSelectedItem().toString() + " and \n";

   
QTot = QTot + "          c.tipdocto in ('FAC', 'FEC') and \n" +
"          conv.convenio is  not null";
Entra=true;
 Rs1 = Sql.Select(QTot);

 if ( Rs1.next()){
      Total_P= Rs1.getDouble("totalVta"); 
    }
      else {
          Total_P =0.00;  
    }     
       
 

  // EJECUTA CONSULTA
            Rs = Sql.Select(Query);
            
            while(Rs.next()){
               ContPagos++;
               Total  = Total+ Rs.getDouble("total");   
               Margen = Margen +  (Rs.getDouble("margen")* Rs.getDouble("total"))/Total_P;
               Total_Linea = (Rs.getDouble("total") / Total_P)*100;
               
               
               
               TableModel.addRow(new Object[]{Rs.getString("codigo").trim(), 
                                              Rs.getString("convenio").trim(), 
                                              fmMain.FormatoNumero(Rs.getDouble("margen")), 
                                              fmMain.FormatoNumero(Rs.getDouble("total")),
                                              fmMain.FormatoNumero(Total_Linea)  });
              }
       
                
            if (ContPagos ==0){
                       limpiaTablaEncabezadoFAC();
                       lbMargFAC.setText(fmMain.FormatoNumero(0));;
                       lbTotal.setText(fmMain.FormatoNumero(0));
                       lbReg.setText(fmMain.FormatoTotal(0));
                       fmMain.Mensaje("No existe Información en Facturas");
             }
            else  if (ContPagos >0) {
                 Grilla.changeSelection(0, 0 , false, false);
//                 Margen = Margen / ContPagos;
                 
                  lbMargFAC.setText( fmMain.FormatoNumero(Margen));
            }
            
            Rs.close();
            
                lbTotal.setText(fmMain.FormatoNumero(Total));
                lbReg.setText(fmMain.FormatoTotal(ContPagos));
                
                  llena_OC(Total);    
                  Diferencia();
                  
  }
catch (Exception e) {
            fmMain.Mensaje("Existe una inconsistencia en la información.");
        }finally{
            Sql.Close();
        }   
    }//GEN-LAST:event_btBuscarActionPerformed

    
    public void Diferencia(){
     ExeSql Sql = new ExeSql();
     ResultSet Rs1;
     String Query="";
     double TotalFact =0.0;
     double TotalOC =0.0;
     double Acum = 0.0;
             
     
 try{    
        
        
        int mes = Integer.valueOf(cboMes.getSelectedItem().toString()) ;
        
        	for(int i = 1; i <= mes ; i++)
		{
                        Query="select \n" +
                        "(select \n" +
                        "SUM(d.cantidad * d.valorunitario) as total_FACTURA\n" +
                        "          from ctactecli c\n" +
                        "               left join ctacteclidet d on c.rut = d.rut and c.tipdocto = d.tipdocto and\n" +
                        "                c.nrodocto = d.nrodocto\n" +
                        "               left join producto p on d.sku = p.sku\n" +
                        "               left join par_convenio conv on conv.codigo = p.convenio\n" +
                        "          where \n" +
                        "          extract(year from c.femision) =" + cboAgno.getSelectedItem().toString() + " and \n" +
                        "          extract(month from c.femision) =" + i + " and \n"+
                        "          c.tipdocto in ('FAC', 'FEC') and \n" +
                        "          conv.convenio is  not null) total_FACTURA\n" +
                        ",\n" +
                        "          (select SUM(d.cantidad * d.valorunitario) total_OC\n" +
                        "          from occh c\n" +
                        "         left join occhdet d on c.rut = d.rut and \n" +
                        "          c.orden = d.orden \n" +
                        "          and  c.codigo_oc   = d.codigo_oc\n" +
                        "     left join producto p on d.sku = p.sku\n" +
                        "     left join par_convenio conv on conv.codigo = p.convenio\n" +
                        "          where \n" +
                        "          extract(year from c.femision) =" + cboAgno.getSelectedItem().toString() + " and \n" +
                        "          extract(month from c.femision) =" + i + " and \n"+
                        "          conv.convenio is  not null)total_OC";

              Rs1 = Sql.Select(Query);
             if ( Rs1.next()){
                   TotalFact= Rs1.getDouble("total_FACTURA");
                   TotalOC = Rs1.getDouble("total_OC");
                   Acum = Acum + (TotalFact - TotalOC);
                    }
             else {
                    lbAcumulada.setText("0.00"); 
                  }
             
             
                } //exit for
        
        lbAcumulada.setText(fmMain.FormatoNumero(Acum)); 
           
 
 
 
 }
 
 catch (Exception e) {
            fmMain.Mensaje("Existe una inconsistencia en la información.");
        }finally{
            Sql.Close();
        }
    
}
            
    
    
    
      public void llena_OC(Double Total){
        
//    Creado por: Cristian Ramìrez    
//    Fecha: 27-01.2016    
//    Objetivo:Resumen de Costo Promedio agrupado por convenio con respecto a las ordenes de compra realizadas.
    
    
    
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
      ResultSet Rs1;
        String Query="";
        String QTot="";
        String NombrePersonal;
        double Total_P         = 0.00;
        double Total_Linea     = 0.00;
        DefaultTableModel TableModel = (DefaultTableModel) Grilla_OC.getModel();
        limpiaTablaEncabezadoOC();          
        int ContPagos_Det   =    0;
        double Total_Det    = 0.00;
        double Margen       = 0.00;
 try {
                    Query="select Periodo,\n" +
                    "          avg(base.Margen) margen ,SUM(base.totalVta) total from (\n" +
                    "          select \n" +
                    "           extract(year from oc.femision)|| '-' ||   extract(month from oc.femision) Periodo, \n" +
                    "           ((d.valorunitario - p.costopromedio) / d.valorunitario) * 100 as Margen,\n" +
                    "           (sum(d.cantidad)) * d.valorunitario as totalVta\n" +
                    "          from ctactecli c\n" +
                    "               left join ctacteclidet d on c.rut = d.rut and c.tipdocto = d.tipdocto and\n" +
                    "                c.nrodocto = d.nrodocto\n" +
                    "               left join producto p on d.sku = p.sku\n" +
                    "               left join par_convenio conv on conv.codigo = p.convenio\n" +
                    "  inner join occh oc \n" +
                    "               		on oc.rut = c.rut and \n" +
                    "                    oc.codigo_oc = c.codigo_oc and \n" +
                    "                    oc.orden = c.occh          where \n" +
                    "          extract(year from c.femision) =" + cboAgno.getSelectedItem().toString() + " and \n" +
                                       "          extract(month from c.femision) =" + cboMes.getSelectedItem().toString() + " and \n"+
                    "          c.tipdocto in ('FAC', 'FEC') and \n" +
                    "          conv.convenio is  not null\n" +
                    "          group by \n" +
                    "			extract(year from oc.femision)|| '-' ||  extract(month from oc.femision),\n" +
                    "	          d.sku,\n" +
                    "                   p.nombre,\n" +
                    "                   p.valultcompra,\n" +
                    "                   p.costopromedio,\n" +
                    "                   d.valorunitario,\n" +
                    "                   c.tipdocto,\n" +
                    "                   c.nrodocto) base\n" +
                    "   group by  Periodo                ";
             
//     Limpia Ordenes Encabezado   
               while(TableModel.getRowCount()>0)
                   TableModel.removeRow(0);    

 QTot="select \n" +
                    "          avg(base.Margen) margen ,SUM(base.totalVta) total from (\n" +
                    "          select \n" +
                    "           extract(year from oc.femision)|| '-' ||   extract(month from oc.femision) Periodo, \n" +
                    "           ((d.valorunitario - p.costopromedio) / d.valorunitario) * 100 as Margen,\n" +
                    "           (sum(d.cantidad)) * d.valorunitario as totalVta\n" +
                    "          from ctactecli c\n" +
                    "               left join ctacteclidet d on c.rut = d.rut and c.tipdocto = d.tipdocto and\n" +
                    "                c.nrodocto = d.nrodocto\n" +
                    "               left join producto p on d.sku = p.sku\n" +
                    "               left join par_convenio conv on conv.codigo = p.convenio\n" +
                    "  inner join occh oc \n" +
                    "               		on oc.rut = c.rut and \n" +
                    "                    oc.codigo_oc = c.codigo_oc and \n" +
                    "                    oc.orden = c.occh          where \n" +
                    "          extract(year from c.femision) =" + cboAgno.getSelectedItem().toString() + " and \n" +
                                       "          extract(month from c.femision) =" + cboMes.getSelectedItem().toString() + " and \n"+
                    "          c.tipdocto in ('FAC', 'FEC') and \n" +
                    "          conv.convenio is  not null\n" +
                    "          group by \n" +
                    "			extract(year from oc.femision)|| '-' ||  extract(month from oc.femision),\n" +
                    "	          d.sku,\n" +
                    "                   p.nombre,\n" +
                    "                   p.valultcompra,\n" +
                    "                   p.costopromedio,\n" +
                    "                   d.valorunitario,\n" +
                    "                   c.tipdocto,\n" +
                    "                   c.nrodocto) base\n";

 
 Rs1 = Sql.Select(QTot);
 if ( Rs1.next()){
      Total_P= Rs1.getDouble("total"); 
    }
      else {
          Total_P =0.00;  
    }                    
      
  // EJECUTA CONSULTA
            Rs = Sql.Select(Query);        
            while(Rs.next()){
               ContPagos_Det++;
               Total_Det  = Total_Det + Rs.getDouble("total");
               Total_Linea = (Rs.getDouble("total") / Total_P)*100;
//               Margen = Margen +  Rs.getDouble("margen");
                Margen = Margen +  (Rs.getDouble("margen")* Rs.getFloat("total"))/Total_P;
                
               TableModel.addRow(new Object[]{Rs.getString("Periodo").trim(), 
                                              fmMain.FormatoNumero(Rs.getFloat("margen")), 
                                               fmMain.FormatoNumero(Rs.getFloat("total")), 
                                              fmMain.FormatoNumero(Total_Linea)});
              }
             if (ContPagos_Det ==0){
                limpiaTablaEncabezadoOC();
                
                lbTotal1.setText(fmMain.FormatoNumero(0));
                lbMargOC.setText(fmMain.FormatoNumero(0.00));
                fmMain.Mensaje("No existe Información en Ordenes");
               }
            else  if (ContPagos_Det >0) {
                 Grilla_OC.changeSelection(0, 0 , false, false);
//                 Margen= Margen / ContPagos_Det;
                 lbMargOC.setText(fmMain.FormatoNumero(Margen));
            }
          
            lbTotal1.setText(fmMain.FormatoNumero(Total_Det));
            
            Total = Total-Total_Det;
            
            lbDiferencia.setText(fmMain.FormatoNumero(Total));
            Rs.close();
            //Rs1.close();
     }
catch (Exception e) {
            fmMain.Mensaje("Existe una inconsistencia en la información.");
        }finally{
            Sql.Close();
         
            
        }
       
}

      
     
  void limpiaTablaEncabezadoOC(){
        try{
            DefaultTableModel temp = (DefaultTableModel) Grilla_OC.getModel();
            int a =temp.getRowCount()-1;
            for(int i=0; i<=a; i++)
                temp.removeRow(0); //aquí estaba el error, antes pasaba la i como parametro.... soy un bacín  XD
        }catch(Exception e){
             System.out.println(e);
        }
    }         
      
void limpiaTablaEncabezadoFAC(){
        try{
            DefaultTableModel temp = (DefaultTableModel) Grilla.getModel();
            int a =temp.getRowCount()-1;
            for(int i=0; i<=a; i++)
                temp.removeRow(0); //aquí estaba el error, antes pasaba la i como parametro.... soy un bacín  XD
        }catch(Exception e){
            System.out.println(e);
        }
    }    
       
    
    
 

    

    
    private void jMenuVerProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuVerProductoActionPerformed
        
//        System.out.println( Grilla_Det.getValueAt(Grilla_Det.getSelectedRow(), 2).toString().trim());
//        pfProductos Pro = new pfProductos();
//        Pro.setOpaque(false);
//        pnPestanas.addTab("Producto", Pro);
//        PanelTab btc = new PanelTab(pnPestanas, 0);
//        pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(Pro), btc);
//        pnPestanas.setSelectedIndex(pnPestanas.getTabCount() - 1);
//        Pro.txSku.requestFocus();
//        Pro.CargaProducto(Grilla_Det.getValueAt(Grilla_Det.getSelectedRow(), 0).toString().trim());        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuVerProductoActionPerformed

    private void GrillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMouseClicked
        //        if(evt.getClickCount()==1 ){
            //
            //
            //           /* jdPagadoPrvCli Pagado = new jdPagadoPrvCli(null, true);
            //            Pagado.setLocationRelativeTo(null);
            //            Pagado.setTitle("Pagos Realizados");
            //            Pagado.CargaPagosPrv(Grilla.getValueAt(Grilla.getSelectedRow(), 12).toString().trim());
            //            Pagado.setVisible(true);*/
            //        }
    }//GEN-LAST:event_GrillaMouseClicked

    private void cboMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMesActionPerformed

      if (Entra) {   
        btBuscar.doClick();}
 
    }//GEN-LAST:event_cboMesActionPerformed

    private void cboAgnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboAgnoActionPerformed
       
     if (Entra) {   
        btBuscar.doClick();}
    }//GEN-LAST:event_cboAgnoActionPerformed

    private void jMenuVerProdOrdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuVerProdOrdActionPerformed
  
    }//GEN-LAST:event_jMenuVerProdOrdActionPerformed

    private void Grilla_OCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Grilla_OCMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Grilla_OCMouseClicked
//6700

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AGNO;
    private javax.swing.JTable Grilla;
    private javax.swing.JTable Grilla_OC;
    private javax.swing.JButton btBuscar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox<String> cboAgno;
    private javax.swing.JComboBox<String> cboMes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuVerProdOrd;
    private javax.swing.JMenuItem jMenuVerProducto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private javax.swing.JLabel lbAcumulada;
    private javax.swing.JLabel lbDiferencia;
    private javax.swing.JLabel lbMargFAC;
    private javax.swing.JLabel lbMargOC;
    private javax.swing.JLabel lbReg;
    private javax.swing.JLabel lbTotal;
    private javax.swing.JLabel lbTotal1;
    private javax.swing.JLabel lblAgno;
    // End of variables declaration//GEN-END:variables
}
