/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Conexion.ExeSqlLuvaly;
import Dialogos.jdDetalleMovimientoProducto;
import Dialogos.jdProductoAuditoria;
import Formularios.fmMain;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author luvaly
 */
public class pfInvent_Metro_Busqueda extends javax.swing.JPanel {

    /**
     * Creates new form pfInvent_Metro_Busqueda
     */
    public pfInvent_Metro_Busqueda() {
        initComponents();
        carga_folios();
        Detalle.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent mouseEvent) {
                JTable table =(JTable) mouseEvent.getSource();
                Point point = mouseEvent.getPoint();
                int row = table.rowAtPoint(point);
                if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
                    jdProductoAuditoria jdm = new jdProductoAuditoria(null, false);//Abre menú autorización
                    jdm.SetSKU((String) table.getValueAt(table.getSelectedRow(), 3));
                    jdm.CargarGrilla();
                    jdm.setLocationRelativeTo(null);
                    jdm.setVisible(true); 
                    jdm.setAlwaysOnTop(true);
                }
    }
});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        MnuCopiaSku = new javax.swing.JMenuItem();
        jScrollPane2 = new javax.swing.JScrollPane();
        Detalle = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabFolios = new javax.swing.JTable();
        bt_actualizar = new javax.swing.JButton();
        chk_diferencias = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lregistros = new javax.swing.JLabel();

        MnuCopiaSku.setText("Copia Sku");
        MnuCopiaSku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnuCopiaSkuActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MnuCopiaSku);

        Detalle.setAutoCreateRowSorter(true);
        Detalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Fecha", "Usuario", "Ubicacion", "Sku", "Nombre", "Cant Fisica", "Cant Sistema", "Diferencia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Detalle.setColumnSelectionAllowed(true);
        Detalle.setComponentPopupMenu(jPopupMenu1);
        jScrollPane2.setViewportView(Detalle);
        Detalle.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (Detalle.getColumnModel().getColumnCount() > 0) {
            Detalle.getColumnModel().getColumn(0).setMinWidth(130);
            Detalle.getColumnModel().getColumn(0).setPreferredWidth(150);
            Detalle.getColumnModel().getColumn(0).setMaxWidth(180);
            Detalle.getColumnModel().getColumn(1).setMinWidth(70);
            Detalle.getColumnModel().getColumn(1).setPreferredWidth(100);
            Detalle.getColumnModel().getColumn(1).setMaxWidth(130);
            Detalle.getColumnModel().getColumn(2).setMinWidth(130);
            Detalle.getColumnModel().getColumn(2).setPreferredWidth(150);
            Detalle.getColumnModel().getColumn(2).setMaxWidth(200);
            Detalle.getColumnModel().getColumn(3).setMinWidth(50);
            Detalle.getColumnModel().getColumn(3).setPreferredWidth(70);
            Detalle.getColumnModel().getColumn(3).setMaxWidth(90);
            Detalle.getColumnModel().getColumn(4).setMinWidth(200);
            Detalle.getColumnModel().getColumn(4).setPreferredWidth(250);
            Detalle.getColumnModel().getColumn(4).setMaxWidth(300);
            Detalle.getColumnModel().getColumn(5).setMinWidth(50);
            Detalle.getColumnModel().getColumn(5).setPreferredWidth(70);
            Detalle.getColumnModel().getColumn(5).setMaxWidth(90);
            Detalle.getColumnModel().getColumn(6).setMinWidth(50);
            Detalle.getColumnModel().getColumn(6).setPreferredWidth(70);
            Detalle.getColumnModel().getColumn(6).setMaxWidth(90);
            Detalle.getColumnModel().getColumn(7).setMinWidth(50);
            Detalle.getColumnModel().getColumn(7).setPreferredWidth(70);
            Detalle.getColumnModel().getColumn(7).setMaxWidth(90);
        }

        TabFolios.setAutoCreateRowSorter(true);
        TabFolios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Fecha", "Folio", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabFolios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabFoliosMouseClicked(evt);
            }
        });
        TabFolios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TabFoliosKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(TabFolios);
        if (TabFolios.getColumnModel().getColumnCount() > 0) {
            TabFolios.getColumnModel().getColumn(0).setMinWidth(70);
            TabFolios.getColumnModel().getColumn(0).setPreferredWidth(80);
            TabFolios.getColumnModel().getColumn(0).setMaxWidth(120);
            TabFolios.getColumnModel().getColumn(1).setMinWidth(30);
            TabFolios.getColumnModel().getColumn(1).setPreferredWidth(50);
            TabFolios.getColumnModel().getColumn(1).setMaxWidth(80);
        }

        bt_actualizar.setText("Actualizar");
        bt_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_actualizarActionPerformed(evt);
            }
        });

        chk_diferencias.setText("Solo Diferencias");
        chk_diferencias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_diferenciasActionPerformed(evt);
            }
        });

        jButton1.setText("Movimientos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Auditorias");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(392, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt_actualizar)
                    .addComponent(chk_diferencias))
                .addGap(30, 30, 30)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bt_actualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chk_diferencias)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabel1.setText("Registros");

        lregistros.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 23, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(lregistros)
                .addGap(317, 317, 317))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lregistros))
                .addContainerGap(55, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TabFoliosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TabFoliosKeyPressed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_TabFoliosKeyPressed

    private void TabFoliosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabFoliosMouseClicked
        // TODO add your handling code here:
     if(evt.getClickCount()==1 ){
        carga_detalle(TabFolios.getValueAt(TabFolios.getSelectedRow(), 1).toString().trim());
     }
    }//GEN-LAST:event_TabFoliosMouseClicked

    private void bt_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_actualizarActionPerformed
        // TODO add your handling code here:
            carga_folios();
            carga_detalle(TabFolios.getValueAt(TabFolios.getSelectedRow(), 1).toString().trim());
    }//GEN-LAST:event_bt_actualizarActionPerformed

    private void chk_diferenciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_diferenciasActionPerformed
        // TODO add your handling code here:
        
           
            carga_detalle(TabFolios.getValueAt(TabFolios.getSelectedRow(), 1).toString().trim());
        
            
    }//GEN-LAST:event_chk_diferenciasActionPerformed

    private void MnuCopiaSkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnuCopiaSkuActionPerformed
        // TODO add your handling code here:
        
            StringSelection Voucher = new StringSelection(Detalle.getValueAt(Detalle.getSelectedRow(), 3).toString().trim());
            Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
            cb.setContents(Voucher, null);
            fmMain.Mensaje("Codigo Sku Copiado");
        
    }//GEN-LAST:event_MnuCopiaSkuActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jdDetalleMovimientoProducto jdm = new jdDetalleMovimientoProducto(null, false);//Abre menú autorización
        jdm.setLocationRelativeTo(null);
        jdm.setVisible(true);   
        jdm.setAlwaysOnTop(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jdProductoAuditoria jdm = new jdProductoAuditoria(null, false);//Abre menú autorización
        jdm.SetSKU("");
        jdm.CargarGrilla();
        jdm.setLocationRelativeTo(null);
        jdm.setVisible(true); 
        jdm.setAlwaysOnTop(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    
    
    private void carga_folios(){
         ExeSql Sql = new ExeSql();
          
        ResultSet Rs;
        DefaultTableModel dfTm = (DefaultTableModel) TabFolios.getModel();
        double peso=0;
        fmMain.LimpiaGrilla(dfTm);
        String Ubica="";
        int i =0;
        try {
           // Rs = Sql.Select("select * from pg_user where usename <> 'postgres'");
             Rs = Sql.Select("select\n" +
                                "MAX(distinct CAST(fecha AS date)) Fecha ,\n" +
                                "CAST (folio AS integer) folio, case when finalizado = 0 then 'Abierto' else 'Cerrado' END as Estado\n" +
                                "from \n" +
                                "mt_producto_auditoria\n" +
                                "group by folio,finalizado\n" +
                                "order by folio desc");
           
              if(Sql.GetRowCount()==0){  
                    Toolkit.getDefaultToolkit().beep();  
                 fmMain.Mensaje("No existen Folios Ingresados " );
                 return;
                }      

            while(Rs.next()){
                dfTm.addRow(new Object[]{Rs.getString("Fecha"), Rs.getInt("folio"),Rs.getString("Estado")});
                i++;
            }
            TabFolios.changeSelection(0, 0 , false, false);
            
            } //try
          catch (Exception e) {
            System.out.println(e.getMessage());
           } //catch 
            finally{
            Sql.Close();
            } //Finally               
    } //carga_folios
    
    
    
    private void carga_detalle(String Folio){
         ExeSql Sql = new ExeSql();
         ExeSql Sql1 = new ExeSql();
        ResultSet Rs, Rs1;
        DefaultTableModel dfTm = (DefaultTableModel) Detalle.getModel();
        double peso=0;
        fmMain.LimpiaGrilla(dfTm);
        String Ubica="", Qry="", StrCodUbica = "";
        ExeSqlLuvaly luv = new ExeSqlLuvaly();
        ResultSet producto = null;
        int i =0;
                
        try {
           // Rs = Sql.Select("select * from pg_user where usename <> 'postgres'");
            Qry= "select ma.fecha_mod,\n" +
                    "       ma.usuario_mod,\n" +
                    "ma.ubicacion cod_ubica, \n" +
                    "       cm.nombre ubicacion,\n" +
                    "       ma.sku,\n" +
                    "       p.nombre,\n" +
                    "       ma.cant, ma.cant_metro, ma.cant-ma.cant_metro dif\n" +
                    "from mt_producto_auditoria ma\n" +
                    "     left join producto p on p.sku = ma.sku\n" +
                    "     left join mt_codmetro cm\n" +
                    "     on cm.codmetro = ma.ubicacion\n" +
                    "where ma.folio =" + Folio +  "\n";
                   if (chk_diferencias.isSelected())
                   {
                      Qry = Qry +  " and ma.cant <> ma.cant_metro \n";
                   }

                    Qry = Qry + " order by ma.fecha_mod ,ma.ubicacion DESC;";
             
             Rs = Sql.Select(Qry);
              
           
              if(Sql.GetRowCount()==0){  
                    Toolkit.getDefaultToolkit().beep();  
                 fmMain.Mensaje("No existe Detalle para Folio Numero " +  Folio );
                 return;
                }      

            while(Rs.next()){
                producto =  luv.Select("select p.nombre,trim(u.unidad) as unidad, u.um from producto p \n"
                + "LEFT JOIN par_unidad u ON u.codigo=p.unidad\n "
                + "where p.sku = '"+Rs.getString("sku").trim()+"'");
                producto.next();
                StrCodUbica= Rs.getString("cod_ubica");
                dfTm.addRow(new Object[]{Rs.getString("fecha_mod"),Rs.getString("usuario_mod"),Rs.getString("ubicacion"),Rs.getString("sku"),producto.getString("nombre"), Rs.getDouble("cant"), Rs.getDouble("cant_metro"),Rs.getDouble("dif")});
                i++;
            }
            
            
//            Qry = "select \n" +
//                    "	   'Sin Fecha' fecha_mod,\n" +
//                    "       'Luvaly' usuario_mod,\n" +
//                    "       cm.nombre ubicacion,\n" +
//                    "       mp.sku,\n" +
//                    "       p.nombre,\n" +
//                    "       0 cant, \n" +
//                    "       mp.cant cant_metro, \n" +
//                    "       0-mp.cant dif\n" +
//                    "from mt_productos mp\n" +
//                    "left join mt_codmetro cm\n" +
//                    "on cm.codmetro = mp.ubicacion\n" +
//                    "left join producto p\n" +
//                    "on p.sku = mp.sku\n" +
//                    "where \n" +
//                    "mp.sku not in (select ma.sku from mt_producto_auditoria ma where ma.folio =" + Folio + ")\n" +
//                    "and mp.ubicacion = '" + StrCodUbica + "'\n" +
//                    "AND mp.cant >0";
//            
//            
//                    
//            
//                Rs1 = Sql1.Select(Qry);
//              
//           
//              if(Sql1.GetRowCount()==0){  
//                    Toolkit.getDefaultToolkit().beep();  
//                     return;
//                }      
//
//            while(Rs1.next()){
//                dfTm.addRow(new Object[]{Rs1.getString("fecha_mod"),Rs1.getString("usuario_mod"),Rs1.getString("ubicacion"),Rs1.getString("sku"),Rs1.getString("nombre"), Rs1.getDouble("cant"), Rs1.getDouble("cant_metro"),Rs1.getDouble("dif")});
//                i++;
//                
//            }
            
            
            
            String Registros;
             Registros = String.valueOf(i);
            lregistros.setText(Registros);
                       
            } //try
          catch (Exception e) {
            System.out.println(e.getMessage());
           } //catch 
            finally{
            Sql.Close();
            luv.Close();
            } //Finally               
    } //carga_folios


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Detalle;
    private javax.swing.JMenuItem MnuCopiaSku;
    private javax.swing.JTable TabFolios;
    private javax.swing.JButton bt_actualizar;
    private javax.swing.JCheckBox chk_diferencias;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lregistros;
    // End of variables declaration//GEN-END:variables
}
