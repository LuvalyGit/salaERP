/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Dialogos.*;
import Formularios.fmMain;
import static Formularios.fmMain.pnPestanas;
import Utilidades.PanelTab;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Roberto Lopez
 */
public class pfGastoRemuneraciones extends javax.swing.JPanel {
   
    int Autorizado;
    Date hoy = new Date();
    String Ndocto = "";
    
    public static int intNivelUsuario = 0; 
    SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
    DecimalFormat formateador = new DecimalFormat("###,###");
    
    Calendar cal = Calendar.getInstance();
    int year  = cal.get(Calendar.YEAR);
    int month = cal.get(Calendar.MONTH);
         
   
    public pfGastoRemuneraciones() {
        initComponents();
        aMes(month,String.valueOf(year)); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnMenu = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btAutorizar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbMes = new javax.swing.JComboBox<String>();
        cbAgno = new javax.swing.JComboBox<String>();
        btCargar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();

        pnMenu.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnMenu.setPreferredSize(new java.awt.Dimension(1522, 103));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("GASTOS PAGO REMUNERACIONES");

        btAutorizar.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        btAutorizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/ok_16.png"))); // NOI18N
        btAutorizar.setText("Autorizar");
        btAutorizar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btAutorizar.setBorderPainted(false);
        btAutorizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAutorizarActionPerformed(evt);
            }
        });

        jLabel2.setText("SELECCIONE AÃ‘O");

        jLabel3.setText("SELECCIONE MES");

        cbMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        cbMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMesActionPerformed(evt);
            }
        });

        cbAgno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        cbAgno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAgnoActionPerformed(evt);
            }
        });

        btCargar.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        btCargar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos22/Cargar.png"))); // NOI18N
        btCargar.setText("Cargar");
        btCargar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btCargar.setBorderPainted(false);
        btCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnMenuLayout = new javax.swing.GroupLayout(pnMenu);
        pnMenu.setLayout(pnMenuLayout);
        pnMenuLayout.setHorizontalGroup(
            pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(pnMenuLayout.createSequentialGroup()
                        .addGroup(pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnMenuLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel3))
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbMes, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbAgno, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addComponent(btCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btAutorizar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnMenuLayout.setVerticalGroup(
            pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnMenuLayout.createSequentialGroup()
                        .addGroup(pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbAgno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btAutorizar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setPreferredSize(new java.awt.Dimension(780, 770));

        Grilla.setAutoCreateRowSorter(true);
        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RUT", "Trabajador", "Cod. Item", "Item", "Periodo", "Monto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(100);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(100);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(2).setMinWidth(0);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(3).setMinWidth(80);
            Grilla.getColumnModel().getColumn(3).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(3).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(4).setMinWidth(80);
            Grilla.getColumnModel().getColumn(4).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(4).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(5).setMinWidth(100);
            Grilla.getColumnModel().getColumn(5).setPreferredWidth(100);
            Grilla.getColumnModel().getColumn(5).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1055, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 1079, Short.MAX_VALUE)
                    .addComponent(pnMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 1079, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    

    private void btAutorizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAutorizarActionPerformed

        if(fmMain.OkCancel("Â¿Autorizar Gasto?")== JOptionPane.OK_OPTION){
            
            ExeSql Sql = new ExeSql();
                
            try {
               
                if (Autorizado == 1){
                        
                    JOptionPane.showMessageDialog(null,"El Gasto ya fue Autorizado!!");
                    return;
                        
                }
                        
                for (int i = 0; i < Grilla.getRowCount();i++){
                            
                    Sql.ExeSql("INSERT INTO prv_cuentasxpagar\n"
                             + "(rut,tipdocto,nrodocto,fpago,monto,tipo,nrocuota,tipopago) \n"
                             + "VALUES ("
                             + Grilla.getValueAt(i, 0).toString().trim() + ",'"
                             + Grilla.getValueAt(i, 3).toString().trim() + "',"
                             + Grilla.getValueAt(i, 4).toString().trim() + ",'"
                             + dateFormat.format(hoy) + "',"
                             + Grilla.getValueAt(i, 5).toString().trim() + ","
                             + 0 +","
                             + 1 +","
                             + 2 + ")");
                            
                       
                    Sql.Commit();
                        
                }
                    
                JOptionPane.showMessageDialog(null,"Gasto Autorizado");
                    
                Autorizado = 1;
                    
            }catch (SQLException | HeadlessException e) {
                    
                    fmMain.Mensaje(e.getMessage());
                    
                    Sql.Rollback();
                    Autorizado = 0;
                    
            }finally{
                
                Sql.Close();
            }
                
        }
    }//GEN-LAST:event_btAutorizarActionPerformed

    private void cbMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMesActionPerformed
       
    }//GEN-LAST:event_cbMesActionPerformed

    private void cbAgnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAgnoActionPerformed
       
    }//GEN-LAST:event_cbAgnoActionPerformed

    private void btCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCargarActionPerformed
        
        ExeSql Sql = new ExeSql();
        ExeSql Sql2 = new ExeSql();
        ExeSql Sql3 = new ExeSql();
        ResultSet Rs;
        ResultSet Rs2;
        ResultSet Rs3;
        String Query="";
        String Query2="";
        String Query3="";
        String nombre = "";
        String rut = "";
       
        double monto = 0;
        
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        
        try {
                
                while(TableModel.getRowCount()>0)
                TableModel.removeRow(0);        
                
                
                Ndocto = cbAgno.getSelectedItem()+String.valueOf((cbMes.getSelectedIndex()+1));
                
                
                Query3 = "SELECT * FROM prv_cuentasxpagar cxp \n" +
                        "WHERE cxp.tipdocto IN ('PRV','REM')\n" +
                        "AND cxp.nrodocto ="+Ndocto;
                        
                
                Rs3 = Sql3.Select(Query3);
                
                if (Sql3.GetRowCount()>0){ 
               
                   Autorizado = 1;
                  
                }else if (Sql3.GetRowCount() == 0){
                
                    Autorizado = 0;
                
                } 
                
                Query = "SELECT ps.rut,ps.totalapagar, p.nombre,p.apellidopaterno,p.apellidomaterno FROM psueldos ps\n" +
                        "LEFT JOIN personal p ON ps.rut = p.rut\n" +
                        "WHERE ps.agno = "+cbAgno.getSelectedItem() +"\n" +
                        "AND ps.mes ="+(cbMes.getSelectedIndex()+1) +"\n" +
                        "AND p.empresa = 1 \n" +
                        "ORDER BY ps.rut";
                
             
                Rs = Sql.Select(Query);
                
                while(Rs.next()){
                
                    rut = Rs.getString("rut").trim();
                    nombre = Rs.getString("nombre").trim()+" "+Rs.getString("apellidopaterno").trim()+" "+Rs.getString("apellidomaterno").trim();
                    monto = 0;
                                        
                    TableModel.addRow(new Object[]{
                                                    Rs.getString("rut").trim(),
                                                    nombre, 
                                                    "9999",
                                                    "REM",
                                                    Ndocto,
                                                    Rs.getString("totalapagar").trim()
                                                
                    });
                       
                    Query2 = "SELECT psd.*, p.nombre,p.apellidopaterno,p.apellidomaterno,pg.codigo, pg.nombre AS item FROM psueldosdet psd\n" +
                            "LEFT JOIN personal p ON psd.rut = p.rut\n" +
                            "LEFT JOIN par_general pg ON psd.codigo = pg.codigo\n" +
                            "WHERE psd.agno = "+cbAgno.getSelectedItem() +"\n" +
                            "AND psd.mes ="+(cbMes.getSelectedIndex()+1) +"\n" +
                            "AND pg.tipo IN ('REM_DESCUENTOS','REM_OTROS')\n" +
                            "AND pg.codigo NOT IN ('19','20','27','31','78')\n" +
                            "AND psd.rut = "+rut+"\n" +
                            "AND psd.empresa = 1 \n" +
                            "ORDER BY psd.rut, pg.codigo";
                
                    
                    Rs2 = Sql2.Select(Query2);
                    
                    while(Rs2.next()){
                        
                        monto = monto + Rs2.getDouble("monto");
                        
                    }
                    
                    
                    TableModel.addRow(new Object[]{
                                                 rut,
                                                 nombre, 
                                                 "8888",
                                                 "PRV",
                                                 Ndocto,
                                                 monto
                                                
                    });
                
                } 
                
            } catch (SQLException ex) {
                Logger.getLogger(pfGastoRemuneraciones.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            btAutorizar.setEnabled(true);
   
    }//GEN-LAST:event_btCargarActionPerformed
     
    static public String formatearRut(String rut){
        int cont=0;
        String format;
        
        if(rut.length() == 0){
            
          return ""; 
        
        }else{
            
            rut = rut.replace(".", "");
            rut = rut.replace("-", "");
            format = "-"+rut.substring(rut.length()-1);
            
            for(int i = rut.length()-2;i>=0;i--){
                
                format = rut.substring(i, i+1)+format;
                cont++;
                
                if(cont == 3 && i != 0){
                  
                    format = "."+format;
                    cont = 0;
                }
            }
            return format;
        }
    }
   
    
    private void aMes(int m, String a) {
                                                                                   
        for (int i = 0; i < cbAgno.getItemCount(); i++) {                       // codigo agregado por R. Lopez
            
            String an = (String) cbAgno.getItemAt(i);  
                                               
            if (an.equals(a)){                                                  //se selecciona automÃ¡ticamente el aÃ±o y 
                                                                                 //el mes de los ComboBox de acuerdo  
               cbAgno.setSelectedIndex(i);                                      //a la comsulta SQL
               cbMes.setSelectedIndex(m);      
               
               break;
            }
       }
    }   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla;
    private javax.swing.JButton btAutorizar;
    private javax.swing.JButton btCargar;
    private javax.swing.JComboBox<String> cbAgno;
    private javax.swing.JComboBox<String> cbMes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pnMenu;
    // End of variables declaration//GEN-END:variables
}
