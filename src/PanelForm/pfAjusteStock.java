/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Conexion.ExeSqlLuvaly;
import Dialogos.jdBuscaUbicacion;
import Dialogos.jdBuscarProductos;
import Formularios.fmMain;
import Utilidades.ComboCodigos;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author David Alcaman
 */
public class pfAjusteStock extends javax.swing.JPanel {
    
    int Tipo;
    int SelMotivo;
    int Nuevo = 0;
    double TotalMerma = 0;
    Date aFecha;
    String aUsuario = "";
    String aComentarios = "";
    
    String nFolio;
    /**
     * Creates new form pfAjusteStock
     */
    public pfAjusteStock() {
        initComponents();
        SetTipo(-1);
        CargaMotivos();
        PanUbicacion.setVisible(false);
        txtUbicacion.setEditable(false);
        txtUbicacion.setEnabled(true);
        txNombreUbica.setEditable(false);
        txNombreUbica.setEnabled(true);      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnMenu = new javax.swing.JPanel();
        btNuevo = new javax.swing.JButton();
        btGuardar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        btAbrir = new javax.swing.JButton();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        btCargar = new javax.swing.JButton();
        btExportar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btIr = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txSku = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txUnidad = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txStockActual = new javax.swing.JTextField();
        cbTipo = new javax.swing.JComboBox();
        txCantidad = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btAgregar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cbMotivo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txComentarios = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        lbFolio = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txUsuario = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txFecha = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        btEliminar = new javax.swing.JButton();
        PanUbicacion = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtUbicacion = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txNombreUbica = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txCantUb = new javax.swing.JTextField();

        pnMenu.setBackground(new java.awt.Color(220, 215, 226));
        pnMenu.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/add16.png"))); // NOI18N
        btNuevo.setText("Nuevo");
        btNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevoActionPerformed(evt);
            }
        });

        btGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/save16.png"))); // NOI18N
        btGuardar.setText("Guardar");
        btGuardar.setBorder(null);
        btGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarActionPerformed(evt);
            }
        });

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Cancel16.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/open16.png"))); // NOI18N
        btAbrir.setText("Abrir");
        btAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAbrirActionPerformed(evt);
            }
        });

        jXLabel1.setForeground(new java.awt.Color(0, 51, 0));
        jXLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/OCCliente24.png"))); // NOI18N
        jXLabel1.setText("AJUSTE DE STOCK");
        jXLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        btCargar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos22/Cargar.png"))); // NOI18N
        btCargar.setText("Cargar");
        btCargar.setToolTipText("");
        btCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCargarActionPerformed(evt);
            }
        });

        btExportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos22/Cargar.png"))); // NOI18N
        btExportar.setText("Exportar");
        btExportar.setToolTipText("");
        btExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExportarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnMenuLayout = new javax.swing.GroupLayout(pnMenu);
        pnMenu.setLayout(pnMenuLayout);
        pnMenuLayout.setHorizontalGroup(
            pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(169, 169, 169)
                .addComponent(btGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btNuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btAbrir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btCargar)
                .addGap(18, 18, 18)
                .addComponent(btExportar)
                .addGap(29, 29, 29))
        );
        pnMenuLayout.setVerticalGroup(
            pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMenuLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btAbrir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btCargar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btExportar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(7, 7, 7))
        );

        jPanel1.setBackground(new java.awt.Color(220, 215, 226));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btIr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos22/Go.png"))); // NOI18N
        btIr.setBorderPainted(false);
        btIr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIrActionPerformed(evt);
            }
        });

        jLabel1.setText("Código");

        txSku.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txSkuKeyPressed(evt);
            }
        });

        jLabel2.setText("Nombre");

        txNombre.setEditable(false);

        jLabel3.setText("Unidad");

        txUnidad.setEditable(false);

        jLabel5.setText("Stock Actual");

        txStockActual.setEditable(false);
        txStockActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txStockActualActionPerformed(evt);
            }
        });

        cbTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sumar", "Restar", "Dejar en" }));
        cbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoActionPerformed(evt);
            }
        });
        cbTipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbTipoKeyPressed(evt);
            }
        });

        txCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txCantidadKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txCantidadKeyTyped(evt);
            }
        });

        jLabel6.setText("Cantidad");

        btAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Agregar.png"))); // NOI18N
        btAgregar.setText("Agregar");
        btAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txSku, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btIr, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txStockActual, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btAgregar)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txStockActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btIr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAgregar)
                    .addComponent(txSku)
                    .addComponent(txNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.setBackground(new java.awt.Color(220, 215, 226));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cbMotivo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbMotivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMotivoActionPerformed(evt);
            }
        });

        jLabel4.setText("Motivo");

        jLabel7.setText("Comentarios");

        txComentarios.setColumns(20);
        txComentarios.setRows(5);
        txComentarios.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txComentarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txComentariosKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txComentarios);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("FOLIO");

        lbFolio.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbFolio.setForeground(new java.awt.Color(255, 0, 0));
        lbFolio.setText("0");

        jLabel9.setText("Usuario");

        txUsuario.setEditable(false);
        txUsuario.setDisabledTextColor(new java.awt.Color(51, 51, 51));

        jLabel10.setText("Fecha");

        txFecha.setEditable(false);
        txFecha.setDisabledTextColor(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbFolio))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txUsuario)
                    .addComponent(txFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(txUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(lbFolio))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        Grilla.setAutoCreateRowSorter(true);
        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nombre", "Unidad", "Stock Actual", "Acción", "Cantidad", "Stock Final", "tipo", "NomUbica", "CodUbica", "CostoFinal", "CostoTotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(90);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(90);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(1).setMinWidth(400);
            Grilla.getColumnModel().getColumn(1).setPreferredWidth(400);
            Grilla.getColumnModel().getColumn(1).setMaxWidth(500);
            Grilla.getColumnModel().getColumn(2).setMinWidth(70);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(70);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(90);
            Grilla.getColumnModel().getColumn(3).setMinWidth(70);
            Grilla.getColumnModel().getColumn(3).setPreferredWidth(70);
            Grilla.getColumnModel().getColumn(3).setMaxWidth(90);
            Grilla.getColumnModel().getColumn(4).setMinWidth(90);
            Grilla.getColumnModel().getColumn(4).setPreferredWidth(90);
            Grilla.getColumnModel().getColumn(4).setMaxWidth(90);
            Grilla.getColumnModel().getColumn(5).setMinWidth(70);
            Grilla.getColumnModel().getColumn(5).setPreferredWidth(70);
            Grilla.getColumnModel().getColumn(5).setMaxWidth(70);
            Grilla.getColumnModel().getColumn(6).setMinWidth(70);
            Grilla.getColumnModel().getColumn(6).setPreferredWidth(70);
            Grilla.getColumnModel().getColumn(6).setMaxWidth(85);
            Grilla.getColumnModel().getColumn(7).setMinWidth(0);
            Grilla.getColumnModel().getColumn(7).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(7).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(9).setMinWidth(0);
            Grilla.getColumnModel().getColumn(9).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(9).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(11).setMinWidth(0);
            Grilla.getColumnModel().getColumn(11).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(11).setMaxWidth(0);
        }

        btEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Eliminar.png"))); // NOI18N
        btEliminar.setText("Eliminar");
        btEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminarActionPerformed(evt);
            }
        });

        PanUbicacion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanUbicacion.setToolTipText("Sacar de Ubicación");

        jLabel11.setText("Codigo Ubicación");

        txtUbicacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUbicacionKeyPressed(evt);
            }
        });

        jLabel12.setText("Descripción Ubicación");

        txNombreUbica.setEditable(false);
        txNombreUbica.setEnabled(false);

        jLabel13.setText("Cant");

        txCantUb.setEditable(false);
        txCantUb.setEnabled(false);

        javax.swing.GroupLayout PanUbicacionLayout = new javax.swing.GroupLayout(PanUbicacion);
        PanUbicacion.setLayout(PanUbicacionLayout);
        PanUbicacionLayout.setHorizontalGroup(
            PanUbicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanUbicacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanUbicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(10, 10, 10)
                .addGroup(PanUbicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(txNombreUbica, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanUbicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txCantUb, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        PanUbicacionLayout.setVerticalGroup(
            PanUbicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanUbicacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanUbicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanUbicacionLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txCantUb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanUbicacionLayout.createSequentialGroup()
                        .addGroup(PanUbicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanUbicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txNombreUbica, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(PanUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btEliminar)
                        .addGap(0, 1033, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PanUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btEliminar)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    private void SetTipo(int ElTipo){
     
        /*Nada*/
        if(ElTipo== -1){
        
            LimpiaProducto();
            LimpiaGrilla();
            HabilitaEnc(false);
            HabilitaDet(false);
            btGuardar.setEnabled(false);
            btCancelar.setEnabled(false);
            btNuevo.setEnabled(true);
            btAbrir.setEnabled(true);
         
            btCargar.setVisible(false);
            btExportar.setVisible(false);
         
            Tipo=-1;
        
        }else if(ElTipo==1){   //Nuevo
            
            LimpiaProducto();
            LimpiaGrilla();
            HabilitaEnc(true);
            HabilitaDet(true);
            txSku.requestFocus();
            btGuardar.setEnabled(true);
            btCancelar.setEnabled(true);
            btNuevo.setEnabled(false);
            btAbrir.setEnabled(false);
            txComentarios.setEditable(true);
            Tipo=1;
        
        }else if(ElTipo==2){     //Abrir
            
            HabilitaEnc(true);
            HabilitaDet(false);
            cbMotivo.setEnabled(true);
            txComentarios.setEnabled(true);
            txComentarios.setEditable(false);
            btGuardar.setEnabled(false);
            btCancelar.setEnabled(false);
            btNuevo.setEnabled(true);
            btAbrir.setEnabled(true);
            Tipo=2;
        }
     
    }
 
    private void LimpiaProducto(){
        
        txSku.setText("");
        txNombre.setText("");
        txUnidad.setText("");
        txStockActual.setText("");
        txCantidad.setText("");
        cbTipo.setSelectedIndex(-1);
        PanUbicacion.setVisible(false);
    }
 
    private void LimpiaGrilla(){
    
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        
        while(TableModel.getRowCount()>0)
            TableModel.removeRow(0);
        
        txUsuario.setText("");
        txFecha.setText("");
        txComentarios.setText("");
        cbMotivo.setSelectedIndex(-1);
    }
    
    private void HabilitaEnc(boolean Estado){
        cbMotivo.setEnabled(Estado);
        txComentarios.setEnabled(Estado);
        txUsuario.setEnabled(Estado);
        txFecha.setEnabled(Estado);
     
    }
    
    private void HabilitaDet(boolean Estado){
    
        txSku.setEnabled(Estado);
        txNombre.setEnabled(Estado);
        txUnidad.setEnabled(Estado);
        txCantidad.setEnabled(Estado);
        btIr.setEnabled(Estado);
        btAgregar.setEnabled(Estado);
        btEliminar.setEnabled(Estado);
        txStockActual.setEnabled(Estado);
        cbTipo.setEnabled(Estado);
    }
    
    private void CargaMotivos(){
        
        ResultSet Rs;
        ExeSql Sql = new ExeSql();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbMotivo.getModel();
        model.removeAllElements();
        
        try {
            Rs = Sql.Select("SELECT codigo,motivo FROM par_ajustemotivo WHERE estado=1");
            
            while(Rs.next()){
            
                model.addElement(new ComboCodigos(Rs.getString("motivo"),Rs.getInt("codigo")));
            }
            cbMotivo.setModel(model);
            cbMotivo.setSelectedIndex(-1);
        }catch (Exception e){
            
        } finally{
          Sql.Close();
        }
    }
    
    public boolean CheckIDCH(String idch) {
        
        boolean existe = false;
        ExeSqlLuvaly SqlLuv = new ExeSqlLuvaly();
        ResultSet RsLuv = null;
        
        try{
           
            RsLuv = SqlLuv.Select("SELECT sku FROM codchile WHERE idch='" + idch +"'");
            
            if(RsLuv.next()){
            
                existe = true;
            }
        
        }catch (SQLException ex) {
        
            Logger.getLogger(pfProductos.class.getName()).log(Level.SEVERE, null, ex);
        }

        return existe;
    }
    
    public boolean CheckCOD(String cod) {
        
        boolean existe = false;
        ExeSqlLuvaly SqlLuv = new ExeSqlLuvaly();
        ResultSet RsLuv = null;
        
        try{
           
            RsLuv = SqlLuv.Select("SELECT sku FROM codbar WHERE codbar='" + cod +"'");
            
            if(RsLuv.next()){
               existe = true;
            }
        
        }catch (SQLException ex) {
        
            Logger.getLogger(pfProductos.class.getName()).log(Level.SEVERE, null, ex);
        }

        return existe;
    }
 
    private void btIrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIrActionPerformed
        
        if(!txSku.getText().isEmpty() && Tipo == 1)
           
            CargaProducto(txSku.getText());
        
        else if(!txSku.getText().isEmpty() && Tipo != 1)
        
            txNombre.requestFocus();

        else{
            
            jdBuscarProductos BP = new jdBuscarProductos(null, true);
            BP.setLocationRelativeTo(null);
            BP.setTitle("Buscar Producto");
            BP.setVisible(true);
            
            if(!"".equals(BP.GetCodigo()))
               CargaProducto(BP.GetCodigo());
        }
    }//GEN-LAST:event_btIrActionPerformed

    private void txSkuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txSkuKeyPressed
        
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            btIr.doClick();
        }
    }//GEN-LAST:event_txSkuKeyPressed

    private void btNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevoActionPerformed

        if(fmMain.GetUsuarioAdministrador()){

            SetTipo(1);
            Nuevo = 1;
            aFecha = new Date();
        }else{
         
            fmMain.Mensaje("Usuario no autorizado para ajustar");
        }
    }//GEN-LAST:event_btNuevoActionPerformed

    private void btAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarActionPerformed
     
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        double Actual,Cantidad,Final, Ubicada;
        String stCodUbica="",Nomubica="";
        
        ExeSql SqlEcona = new  ExeSql();
        ResultSet RsEcona = null;
        String Query="";
        String Sku="", Scant="", Stransito="";
        
        //******************************** Se verfica si hay articulos duplicados *********************//     
                    
        for (int f=0; f< Grilla.getRowCount();f++){
                         
            String elemento = Grilla.getValueAt(f, 0).toString().trim();
                        
            if (elemento.equals(txSku.getText().trim())) {
                            
                fmMain.Mensaje("Producto ya está agregado!");
                LimpiaProducto();
                return;
            }
                    
        }
        //***************************************************************************************************//    
        
        if (cbTipo.getSelectedItem() == "Restar"){
              
            stCodUbica = txtUbicacion.getText().trim();
            Nomubica = txNombreUbica.getText().trim();
              
            Query = "SELECT sku,cant FROM mt_productos \n"+
                    "WHERE ubicacion = '" + stCodUbica + "' \n" +
                    "AND sku = '" + txSku.getText().trim() + "'";
              
           try{
                Cantidad = Double.valueOf(txCantidad.getText());
                RsEcona=SqlEcona.Select(Query);
         
                if(RsEcona.next()){
                
                    Ubicada=RsEcona.getDouble("cant") ;
                    if (Ubicada<Cantidad ){
                        fmMain.Mensaje("No se puede ajustar, la cantidad solicitada: " + Cantidad + " es mayor que la cantidad ubicada en: " + Ubicada);
                        return;
                    }
                    
                }else{
                    
                    fmMain.Mensaje("Produto " +  txNombre .getText().trim() + " no pertenece a la ubicación: "+ Nomubica );
                    return;
                }
            }catch (Exception e){
                
                System.out.println(e);
            
            }finally{
            
               SqlEcona.Close();
            }
              
              
        }
          
        /*Revisa Datos*/
        if(txNombre.getText().isEmpty() ||
            
            txCantidad.getText().isEmpty() ||
            cbTipo.getSelectedIndex()==-1){
            fmMain.Mensaje("Faltan Datos");
            return;
        }
        /*Revisa que no exista*/
        
        try{
            
        
            Actual = Double.valueOf(fmMain.SetGuardar(txStockActual.getText()));
                
            Cantidad = Double.valueOf(txCantidad.getText());
        
            if(cbTipo.getSelectedIndex()==0){
                
               Final = Actual + Cantidad;
            
            }else if(cbTipo.getSelectedIndex()==1){
                
                Final = Actual - Cantidad;
            
            }else{
            
                Final = Cantidad;
            }
        
            TableModel.addRow(new Object[]{txSku.getText().trim(), 
                                           txNombre.getText().trim(), 
                                           txUnidad.getText().trim(),
                                           Actual,
                                           cbTipo.getSelectedItem().toString().trim(),
                                           Cantidad,
                                           Final,
                                           cbTipo.getSelectedIndex(),Nomubica,stCodUbica
            });
        
            LimpiaProducto();
            txSku.requestFocus();
            
        }catch (Exception e){
            
            fmMain.Mensaje(e.getMessage());
        }
    }//GEN-LAST:event_btAgregarActionPerformed

    private void cbTipoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbTipoKeyPressed
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            txCantidad.requestFocus();
    }//GEN-LAST:event_cbTipoKeyPressed

    private void txCantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txCantidadKeyPressed
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            btAgregar.doClick();
    }//GEN-LAST:event_txCantidadKeyPressed

    private void txCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txCantidadKeyTyped
        
        if(!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar()==',')
            evt.consume();
    }//GEN-LAST:event_txCantidadKeyTyped

    private void cbMotivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMotivoActionPerformed
        
        if(Tipo==2){
           
           cbMotivo.setSelectedIndex(SelMotivo);
        }
        
        if (cbMotivo.getSelectedIndex() == 1 && Nuevo == 1){
        
            SetTipo(-1);
            btGuardar.setEnabled(true);
            btCancelar.setEnabled(true);
            btNuevo.setEnabled(false);
            btAbrir.setEnabled(false);
        
            btCargar.setVisible(true);
            
            cbMotivo.setSelectedIndex(1);
            
        
        }
        
        
    }//GEN-LAST:event_cbMotivoActionPerformed

    private void txComentariosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txComentariosKeyTyped
        
        if (Character.isLowerCase(evt.getKeyChar()))
            evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    }//GEN-LAST:event_txComentariosKeyTyped

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        SetTipo(-1);
        btCargar.setVisible(false);    
        btExportar.setVisible(false);
    }//GEN-LAST:event_btCancelarActionPerformed
    
    private int cbId_Accion(JComboBox Combo ){
        int Codigo=-1;
        
        if (Combo.getSelectedIndex()>=0){
            ComboCodigos id = (ComboCodigos) Combo.getSelectedItem();
            Codigo = id.getId();
            String nombre = Combo.getSelectedItem().toString();
            Combo.hidePopup();
        } 
        return Codigo;
    }
    
    private void btGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarActionPerformed
        //VALIDACIONES
               
        if(cbMotivo.getSelectedIndex()==-1 || txComentarios.getText().isEmpty() || Grilla.getRowCount()==0){
            
            if(cbMotivo.getSelectedIndex() !=1){
            
              fmMain.Mensaje("Faltan Datos");
              return;
            }
        }
        
        if(fmMain.OkCancel("¿Desea realizar el ajuste?") != JOptionPane.OK_OPTION){
            return;
        }
        if(cbMotivo.getSelectedIndex()==1){
            btExportar.doClick(); 
        }
        
        //btExportar.doClick();
        
        ExeSql SqlEcona = new  ExeSql();
        ResultSet RsEcona = null;
        ResultSet Rs1 = null;
        String QuerySuma="", QueryResta="", Query2="", QryUpd="", QryIns="" ;
        String Sku="", Scant="", Stransito="";
        
        try{
            
            RsEcona = SqlEcona.Select("SELECT sp_getcorrelativo FROM sp_getcorrelativo('AJU')");   
            RsEcona.next();
            
            String Folio = RsEcona.getString("sp_getcorrelativo");
            nFolio = Folio;
           
            
            //Cabezera
            if (cbMotivo.getSelectedIndex() == 1){
            
                txComentarios.setText("MERMA");
            
            }
            
            SqlEcona.ExeSql( "INSERT INTO ajusteenc(folio,motivo,comentario) \n" +
                             "VALUES (\n" +
                             Folio + ",\n" +
                             String.valueOf(cbId_Accion(cbMotivo)) + ",\n'" +
                             txComentarios.getText() +"'\n" +
                             ")");
            
            //Productos
            for(int i=0;i< Grilla.getRowCount();i++){
              
                double cost1 = 0;
                
                if (cbMotivo.getSelectedIndex() == 1){
                
                    cost1 = Double.parseDouble(Grilla.getValueAt(i, 10).toString().trim().replaceAll("\\,",""));
                
                }
                
                SqlEcona.ExeSql("INSERT INTO ajustedet(folio,sku,cantidad,tipo,costofinal) \n" +
                                "VALUES (\n" +
                                Folio + ",\n'" +
                                Grilla.getValueAt(i, 0).toString() + "',\n" +
                                fmMain.SetGuardar(Grilla.getValueAt(i, 5).toString().trim()) + ",\n" +
                                Grilla.getValueAt(i, 7).toString() + ",\n" +
                                cost1 + "\n" +
                                ")");
                
               
                Sku = Grilla.getValueAt(i, 0).toString();
                Scant = fmMain.SetGuardar(Grilla.getValueAt(i, 5).toString().trim());
                Stransito = fmMain.BodegaTransito();
              
                
                
                if (Grilla.getValueAt(i, 4).toString()== "Restar"){
                
                    QueryResta = "UPDATE mt_productos SET cant = cant - " + Scant + " \n"+
                                 "WHERE sku = '" +  Sku + "' AND ubicacion = '" +  Grilla.getValueAt(i, 9).toString().trim() + "'"; 
                    SqlEcona.ExeSql(QueryResta);
                }         
                   
                if (Grilla.getValueAt(i, 4).toString()== "Sumar"){
                       
                  //---------------------------------------------------------------------------------------           
                    Query2 = "SELECT * FROM mt_productos WHERE ubicacion = '" + fmMain.BodegaTransito() + "' AND sku = '" + Sku + "';";
                    Rs1 = SqlEcona.Select(Query2);
                    
                    if (Rs1.next()){
                        // Realiza un Update
                            
                        QuerySuma = "UPDATE mt_productos SET cant = cant + " + Scant +", \n"+
                                    "usuario_mod ='" +fmMain.GetUsuario() + "', fecha_mod = now() \n" +
                                    "WHERE sku = '" + Sku + "' AND ubicacion = '" +  Stransito  + "'"; 
                       
                        SqlEcona.ExeSql(QuerySuma);
                     
                    }else{
                         // Inserta el producto
                        QryIns = "INSERT INTO mt_productos (ubicacion,sku,usuario,cant) \n" +
                                 "VALUES('" + Stransito + "','" + Sku + "','" + fmMain.GetUsuario()  + "', " + Scant + ");";
                        
                        SqlEcona.ExeSql(QryIns);
                         
                    }
            //-------------------------------------------------------------------------------------

                }         

                int resultado_ = SqlEcona.ExeSqlInt("update par_correlativo\n" +
                                                    "set numero = numero + 1\n" +
                                                    "where tipo='AJU'");
                SqlEcona.Commit();
                if(resultado_>0){
                    System.out.println("Se aumentó correlativo");
                }

            }
            
          
            if(cbMotivo.getSelectedIndex() !=1){
            
                AbrirFolio(Folio);
                SetTipo(-1);
                btCargar.setVisible(false);    
                btExportar.setVisible(false);
             
             }else if(cbMotivo.getSelectedIndex() == 1){
               
                btCargar.setVisible(false);    
                btExportar.setVisible(false);
                SetTipo(-1);
                cbMotivo.setEnabled(false);
                
                lbFolio.setText(nFolio);
            
            }
            
            
            SqlEcona.Commit();
            fmMain.Mensaje("Guardado");
            
            
        } catch (Exception e) {
            
            System.out.println(e);
        
        }finally{
        
            SqlEcona.Close();
        }
    }//GEN-LAST:event_btGuardarActionPerformed

    private void btAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAbrirActionPerformed
        Nuevo = 0;
        String Folio = JOptionPane.showInputDialog("Ingrese folio de ajuste");
        AbrirFolio(Folio);
           
    }//GEN-LAST:event_btAbrirActionPerformed

    private void btEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminarActionPerformed
        
        DefaultTableModel modelo = (DefaultTableModel) Grilla.getModel();
        
        try {
        
            modelo.removeRow(Grilla.getSelectedRow());
            modelo=null;
        
        }catch (Exception e) {
         
            JOptionPane.showMessageDialog(null, "Seleccione la fila que desea quitar.");
        }
    }//GEN-LAST:event_btEliminarActionPerformed

    private void cbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoActionPerformed
                
        double Actual,Cantidad,Final, Ubicada;
        String stCodUbica="",Nomubica="";
        
        ExeSql SqlEcona = new  ExeSql();
        ResultSet Rs;
        String Query="";
        
        if (cbTipo.getSelectedItem() == "Restar"   ){
            
            jdBuscaUbicacion Ubicacion= new jdBuscaUbicacion(null, true);
            Ubicacion.CargaBodegaOR(1);
            Ubicacion.setVisible(true);
            PanUbicacion.setVisible(true);
            txtUbicacion.setText(Ubicacion.GetUbicacion());
            txNombreUbica.setText(Ubicacion.GetNombreUbicacion());
            txCantidad.requestFocus();
           
            stCodUbica = txtUbicacion.getText().trim();
            Nomubica = txNombreUbica.getText().trim();

            Query = "SELECT sku,cant FROM mt_productos WHERE ubicacion = '" + stCodUbica + "' \n" +
                    "AND sku  = '" + txSku.getText().trim() + "'";

            try{
                
                Rs=SqlEcona.Select(Query);
                
                if(Rs.next()){
                
                    Ubicada=Rs.getDouble("cant") ;
                    
                }else{
                  
                    fmMain.Mensaje("Produto " +  txNombre .getText().trim() + " no pertenece a la ubicación: "+ Nomubica );
                    return;
                }

            }catch (Exception e) {
             
                System.out.println(e.getMessage());
            
            }finally{
             
                SqlEcona.Close();
            }
                 
           
        }
        
        
    }//GEN-LAST:event_cbTipoActionPerformed

    private void txtUbicacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUbicacionKeyPressed
       
        ExeSql SqlEcona = new ExeSql();
        ResultSet Rs = null;
        ResultSet Rs1 = null;
        String Query2 ;
        String strUbicacion = "";

        try{
            if(evt.getKeyCode() == KeyEvent.VK_ENTER){
                
                strUbicacion = txtUbicacion.getText().trim();
                String ubicaArray[] = strUbicacion.split("\\.");

//                Query2 = "SELECT (b.bodega ||' - '|| r.rack ||' - '|| m.metro) AS ubc \n" +
//                         "FROM mt_bodega b, mt_rack r, mt_metro m \n" +
//                         "WHERE b.codigo='" + ubicaArray[0] + "' AND r.codigo= " + ubicaArray[1] + "\n"+
//                         "AND m.codigo= " + ubicaArray[2] + " AND m.rack=" + ubicaArray[1];
                
             Query2 = "SELECT codmetro AS ubc,nombre from mt_codmetro \n" +
                          "WHERE codmetro = '" +strUbicacion+"'" ;
                
                
                Rs1 = SqlEcona.Select(Query2);
                if (Rs1.next()){
                    strUbicacion =Rs1.getString("nombre").trim();
                    txNombreUbica.setText(strUbicacion);
                    txtUbicacion.requestFocus();

                }
                else
                {
                    fmMain.Mensaje("Ubicacion no encontrada, favor revise la ubicación");
                    //limpia_all();
                    txNombreUbica.setText("");
                    txtUbicacion.setText("");
                }
            }
        
        }catch (Exception e){
        
            System.out.println(e.getMessage());
        
        }finally{
        
            SqlEcona.Close();
        }
    }//GEN-LAST:event_txtUbicacionKeyPressed

    private void txStockActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txStockActualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txStockActualActionPerformed

    private void btCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCargarActionPerformed
        
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        double StockFinal;
        String stCodUbica="",Nomubica="";
        
        ExeSql Sql = new  ExeSql();
        ResultSet Rs;
        String Query="";
        ExeSqlLuvaly luv = new ExeSqlLuvaly();
        ResultSet producto = null;

        while(TableModel.getRowCount()>0){
            TableModel.removeRow(0);
        }
        
              
        stCodUbica = "TRAN.1009.1";
        Nomubica = "TRANSITO-MERMA_METRO 1";
              
        Query = "SELECT mtp.*, p.nombre,u.unidad,i.stock, p.costofinal \n"+
                "FROM mt_productos mtp \n"+
                "LEFT JOIN inventario i ON mtp.sku=i.sku \n"+
                "LEFT JOIN producto p ON mtp.sku=p.sku \n"+
                "LEFT JOIN par_unidad u ON p.unidad=u.codigo \n" +
                "WHERE mtp.ubicacion = '" + stCodUbica + "' \n"+
                "AND mtp.cant > 0";
              
        try{
                   
            Rs = Sql.Select(Query);
                   
            if(Sql.GetRowCount() > 0){
                   
                TotalMerma = 0;
                       
                while (Rs.next()){
                    producto =  luv.Select("select p.nombre,trim(u.unidad) as unidad, u.um from producto p \n"
                      + "LEFT JOIN par_unidad u ON u.codigo=p.unidad\n "
                      + "where p.sku = '"+Rs.getString("sku").trim()+"'");
                    producto.next();
                    StockFinal = Rs.getDouble("stock")- Rs.getDouble("cant");
                            
                    double ctotal = (Rs.getDouble("cant") * Rs.getDouble("costofinal"));
                        
                    TableModel.addRow(new Object[]{Rs.getString("sku").trim(), 
                                                   producto.getString("nombre").trim(), 
                                                   producto.getString("unidad").trim() ,
                                                   Rs.getDouble("stock"),
                                                   "Restar",
                                                   Rs.getDouble("cant"),
                                                   StockFinal,
                                                   1,
                                                   Nomubica,
                                                   stCodUbica,
                                                   fmMain.FormatoNumero(Rs.getDouble("costofinal")),
                                                   fmMain.FormatoNumero(ctotal)
                    });
                         
                    TotalMerma = TotalMerma + ctotal;
                            
                }
                       
            }
                   
            btExportar.setVisible(true);
          
              
        }catch (Exception e){
                  
            System.out.println(e);
              
        }finally{
              
            Sql.Close();
            luv.Close();
        }
      
    }//GEN-LAST:event_btCargarActionPerformed

    private void btExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExportarActionPerformed
        
        try {
           
            Map parametro = new HashMap();
         
            parametro.put("TOTAL",String.valueOf( fmMain.FormatoNumero(TotalMerma)));
            parametro.put("FECHA",aFecha);
            parametro.put("LOGO",getClass().getResourceAsStream("/Reportes/Logo.jpg"));                     //Ruta Logo Reporte 
            
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(getClass().getResource("/Reportes/rpProductoMerma.jasper"));
            JasperPrint jsprPrint = JasperFillManager.fillReport(jasperReport, parametro, new JRTableModelDataSource(Grilla.getModel()));
            JasperViewer view = new JasperViewer(jsprPrint,false);
            view.setVisible(true);
            
        }catch (JRException e) { 
            
            e.printStackTrace (); 
            System.out.println ("informes r" + e.toString ());
    
        }
        
    }//GEN-LAST:event_btExportarActionPerformed
    
    
    private void AbrirFolio(String Numero){
        ExeSqlLuvaly luv = new ExeSqlLuvaly();
        ResultSet producto = null;
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        
        while(TableModel.getRowCount()>0)
           TableModel.removeRow(0);
        
        try {
            //Carga Encabezado
            Rs = Sql.Select("select usuario,cast(fecha as date) as fecha,motivo,comentario from ajusteenc where folio=" + Numero);
            
            if(Sql.GetRowCount()==0){
            
                fmMain.Mensaje("Folio no encontrado");
                return;
            }
            Rs.next();
            
            aUsuario = Rs.getString("usuario").trim();
            aComentarios = Rs.getString("comentario");
            aFecha = Rs.getDate("fecha");
            
            for(int i=0 ; i < cbMotivo.getItemCount();i++){
            
                cbMotivo.setSelectedIndex(i);
                
                if(cbId_Accion(cbMotivo)==Rs.getInt("motivo") ){
                
                    SelMotivo=i;
                    break; 
                }
                    
            }
            lbFolio.setText(Numero);
            
            //Carga Productos
            TotalMerma = 0;
            
            Rs = Sql.Select("select d.sku,p.nombre,u.unidad,d.stockini,d.costofinal,\n" +
                            "case d.tipo when 0 then 'Sumar' when 1 then 'Restar' else 'Dejar en' end as ElTipo ,d.cantidad,d.stockfin,d.tipo\n" +
                            "from ajustedet d\n" +
                            "left join producto p on d.sku=p.sku\n" +
                            "left join par_unidad u on p.unidad=u.codigo\n" +
                            "where d.folio=" + Numero);
            
            while(Rs.next()){
                producto =  luv.Select("select p.nombre,trim(u.unidad) as unidad, u.um from producto p \n"
                      + "LEFT JOIN par_unidad u ON u.codigo=p.unidad\n "
                      + "where p.sku = '"+Rs.getString("sku").trim()+"'");
                producto.next();
                double ctotal = (Rs.getDouble("cantidad") * Rs.getDouble("costofinal"));
                
                TableModel.addRow(new Object[]{Rs.getString("Sku").trim(), 
                                               producto.getString("Nombre").trim(), 
                                               producto.getString("unidad").trim(),
                                               Rs.getDouble("stockini"),
                                               Rs.getString("ElTipo").trim(),
                                               Rs.getDouble("cantidad"),
                                               Rs.getDouble("stockfin"),
                                               Rs.getInt("tipo"),
                                               "",
                                               "",
                                               fmMain.FormatoNumero(Rs.getDouble("costofinal")),
                                               fmMain.FormatoNumero(ctotal)
                });
                
                TotalMerma = TotalMerma + ctotal;
                
            }
            
            txUsuario.setText(aUsuario.trim());
            txComentarios.setText(aComentarios.trim());
            txFecha.setText(aFecha.toString().trim());
            
            
            if (txComentarios.getText().equals("MERMA")){
              
                cbMotivo.setEnabled(false);
                cbMotivo.setSelectedIndex(1);
            
                btExportar.setVisible(true);
             
             }else{
                 
                 btCargar.setVisible(false);
                 btExportar.setVisible(false);
             
             }
             
             btNuevo.setEnabled(true);
             btAbrir.setEnabled(true);
             
             btGuardar.setEnabled(false);
             btCancelar.setEnabled(false);
             
           
            
        } catch (Exception e) {
            System.out.println(e);
        }finally{
            Sql.Close();
            luv.Close();
        }
    }
    
    private void CargaProducto(String Codigo){
      
        ExeSql SqlEcona = new ExeSql();
        ExeSqlLuvaly SqlLuv = new ExeSqlLuvaly();
        
        ResultSet RsLuv = null;
        ResultSet RsLuv1 = null;
        ResultSet RsLuv2 = null;
        
        String Query ="";
        int codunidad = 0;
        String sku = "";
        
        
        ResultSet RsEcona = null;
        ResultSet RsEcona2 = null;
        
        try {
            

           RsLuv = SqlLuv.Select("select nombre, unidad from producto where sku='"+ Codigo.trim() +"'");
           
           if (SqlLuv.GetRowCount() > 0){
               
                RsLuv.next();
                codunidad = RsLuv.getInt("unidad");
                
                System.out.println("ENTRA 1 !!!!");
                
                RsEcona =  SqlEcona.Select("SELECT pv.sku,u.unidad,u.um, i.stock FROM producto_valores pv \n"+
                                           "LEFT JOIN inventario i on pv.sku=i.sku\n" +
                                           "LEFT JOIN par_unidad u ON u.codigo="+codunidad+"\n "+
                                           "WHERE pv.sku = '"+ Codigo.trim()+"'");
                
           }    
           
           
           if ( SqlEcona.GetRowCount()>0){
                
                RsEcona.next();
                
                System.out.println("ENTRA 2 !!!!");
                
                txSku.setText(RsEcona.getString("sku"));
                txNombre.setText(RsLuv.getString("nombre").trim());
                txUnidad.setText(RsEcona.getString("unidad").trim());
                txStockActual.setText(fmMain.FormatoNumero(RsEcona.getDouble("stock")));
                cbTipo.requestFocus();
            
            }else{
                
                 System.out.println("ENTRA 3 !!!!");
               
                RsLuv1 = SqlLuv.Select("select cb.sku,p.nombre, p.unidad\n" +
                                       "from codbar cb\n" +
                                       "left join producto p on p.sku = cb.sku\n"+
                                       "where cb.sku = (select sku from codbar where codbar = '"+ Codigo.trim()+"') limit 1");
                
                if (SqlLuv.GetRowCount() > 0){
                  
                    RsLuv1.next();
                    codunidad = RsLuv1.getInt("unidad");
                    sku = RsLuv1.getString("sku");
                    
                    RsEcona =  SqlEcona.Select("SELECT pv.sku,u.unidad,u.um, i.stock FROM producto_valores pv \n"+
                                                "LEFT JOIN inventario i on pv.sku=i.sku\n" +
                                                "LEFT JOIN par_unidad u ON u.codigo="+codunidad+"\n "+
                                                "WHERE pv.sku = '"+ sku.trim()+"'");
                    
                }
                
               
               
                if (SqlEcona.GetRowCount()>0){
                        
                    RsEcona.next();
                    
                    System.out.println("ENTRA 4 !!!!");
                    
                    txSku.setText(RsEcona.getString("sku"));
                    txNombre.setText(RsLuv1.getString("nombre").trim());
                    txUnidad.setText(RsEcona.getString("unidad").trim());
                    txStockActual.setText(fmMain.FormatoNumero(RsEcona.getDouble("stock")));
                    cbTipo.requestFocus();
                    
                }else{
                    
                    
                    System.out.println("ENTRA 5 !!!!");
                    
                     RsLuv2 = SqlLuv.Select("select cc.sku,p.nombre, p.unidad\n" +
                                            "from codchile cc\n" +
                                            "left join producto p on p.sku = cc.sku\n"+
                                            "where cc.sku = (select sku from codchile where idch = '"+ Codigo.trim()+"') limit 1");
                
                    if (SqlLuv.GetRowCount() > 0){
                  
                        RsLuv2.next();
                        
                        System.out.println("ENTRA 6 !!!!");
                        
                        codunidad = RsLuv2.getInt("unidad");
                        sku = RsLuv1.getString("sku");
                    
                        RsEcona2 =  SqlEcona.Select("SELECT pv.sku,u.unidad,u.um, i.stock FROM producto_valores pv \n"+
                                                "LEFT JOIN inventario i on pv.sku=i.sku\n" +
                                                "LEFT JOIN par_unidad u ON u.codigo="+codunidad+"\n "+
                                                "WHERE pv.sku = '"+ sku.trim()+"'");
                    
                    }
                    
                    if (SqlEcona.GetRowCount()>0){
                       
                        RsEcona2.next(); 
                        
                        System.out.println("ENTRA 7 !!!!");
                        
                        txSku.setText(RsEcona2.getString("sku"));
                        txNombre.setText(RsLuv2.getString("nombre").trim());
                        txUnidad.setText(RsEcona2.getString("unidad").trim());
                        txStockActual.setText(fmMain.FormatoNumero(RsEcona2.getDouble("stock")));
                        cbTipo.requestFocus();
                    
                    }else{
                             
                        System.out.println("ENTRA 8 !!!!");
                        JOptionPane.showMessageDialog(null,"Producto no encontrado");
                        return;
                    }
                }
            }
 
        } catch (Exception e) {
            
        } finally{
            SqlLuv.Close();
            SqlEcona.Close();
        }
            
        
        
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla;
    private javax.swing.JPanel PanUbicacion;
    private javax.swing.JButton btAbrir;
    private javax.swing.JButton btAgregar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btCargar;
    private javax.swing.JButton btEliminar;
    private javax.swing.JButton btExportar;
    private javax.swing.JButton btGuardar;
    private javax.swing.JButton btIr;
    private javax.swing.JButton btNuevo;
    private javax.swing.JComboBox cbMotivo;
    private javax.swing.JComboBox cbTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private javax.swing.JLabel lbFolio;
    private javax.swing.JPanel pnMenu;
    private javax.swing.JTextField txCantUb;
    private javax.swing.JTextField txCantidad;
    private javax.swing.JTextArea txComentarios;
    private javax.swing.JTextField txFecha;
    private javax.swing.JTextField txNombre;
    private javax.swing.JTextField txNombreUbica;
    private javax.swing.JTextField txSku;
    private javax.swing.JTextField txStockActual;
    private javax.swing.JTextField txUnidad;
    private javax.swing.JTextField txUsuario;
    private javax.swing.JTextField txtUbicacion;
    // End of variables declaration//GEN-END:variables
}
