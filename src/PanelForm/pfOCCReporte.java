/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Conexion.ExeSqlLuvaly;
import Dialogos.jdAgregaBlog_occ;
import Dialogos.jdBuscarCliPrv;
import Dialogos.jdOCC_Transporte;
import Dialogos.jdOrdenesSeparadas;
import Dialogos.jdSeparacionesUbicacionReporte;
import Formularios.fmMain;
import static Formularios.fmMain.pnPestanas;
import Utilidades.ImgTabla;
import Utilidades.LogError;
import Utilidades.PanelTab;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import static javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David Alcaman
 */
public class pfOCCReporte extends javax.swing.JPanel {
    
    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();

    /**
     * Creates new form pfOCCReporte
     */
    public pfOCCReporte() {
        initComponents();
        rbOrdenesTodas.setVisible(false);
        rbCerradas.setVisible(false);
        RbParciales.setSelected(true);
        btCargar.doClick();
        
        
//        JPanel fila3 = new JPanel();
//        JTextArea TxHistorial = new JTextArea(4,22);
//        TxHistorial.setLineWrap(true);
//        TxHistorial.setWrapStyleWord(true);
//        JScrollPane scroll_com = new JScrollPane(TxHistorial,JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
//        JPComent.add(scroll_com);
//        fila3.add(scroll_com);
//        add(fila3);
//        TxHistorial.setText("Prueba de mensaje de correo");
        
        TxHistorial.setLineWrap(true);
        TxHistorial.setWrapStyleWord(true);
        jScrollPane5.setHorizontalScrollBarPolicy(HORIZONTAL_SCROLLBAR_NEVER);
        
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        GrillaDet.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        GrillaDet.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        GrillaDet.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
        GrillaDet.getColumnModel().getColumn(6).setCellRenderer(rightRenderer);
        GrillaDet.getColumnModel().getColumn(7).setCellRenderer(rightRenderer);
        GrillaDet.getColumnModel().getColumn(8).setCellRenderer(rightRenderer);
        
        
        Grilla.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            //Se ejecuta automáticamente cada vez que se hace una nueva selección. 
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(Grilla.getSelectedRowCount()>0)
                   CargaDetalle();
            }
        });
        
        if(fmMain.trae_nivel(fmMain.GetUsuario())==100){
            jMenuCreador.setEnabled(true);    
        }
        else {
            jMenuCreador.setEnabled(false); 
        }
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jmnuAbrirOCC = new javax.swing.JMenuItem();
        Emite_Guia = new javax.swing.JMenuItem();
        mnuCopiarOrden = new javax.swing.JMenuItem();
        jmenuVerUsuario = new javax.swing.JMenuItem();
        jMenuCreador = new javax.swing.JMenuItem();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jmnuVerProducto = new javax.swing.JMenuItem();
        jmnuVerOCP = new javax.swing.JMenuItem();
        jmnuSeparacion = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        btCargar = new javax.swing.JButton();
        lbOrdenes = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        rbOrdenesCompletas = new javax.swing.JRadioButton();
        rbOrdenesTodas = new javax.swing.JRadioButton();
        rbCerradas = new javax.swing.JRadioButton();
        rbEspecifica = new javax.swing.JRadioButton();
        txOrden = new javax.swing.JTextField();
        RbParciales = new javax.swing.JRadioButton();
        RbPendientes = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        rbFechaTodas = new javax.swing.JRadioButton();
        dtDesde = new org.jdesktop.swingx.JXDatePicker();
        dtHasta = new org.jdesktop.swingx.JXDatePicker();
        jLabel4 = new javax.swing.JLabel();
        rbFechaDesde = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        txRut = new javax.swing.JTextField();
        rbClienteRut = new javax.swing.JRadioButton();
        rbClienteTodos = new javax.swing.JRadioButton();
        btIr = new javax.swing.JButton();
        txNombre = new javax.swing.JTextField();
        chkTodasVendedor = new javax.swing.JCheckBox();
        lbOCCompletas = new javax.swing.JLabel();
        lbOCParciales = new javax.swing.JLabel();
        lbOCNada = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Grilla_days = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        GrillaDet = new javax.swing.JTable();
        JPComent = new javax.swing.JPanel();
        btAgregarBlog = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        GrillaBlog = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        TxHistorial = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        jmnuAbrirOCC.setText("Abrir Orden");
        jmnuAbrirOCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnuAbrirOCCActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jmnuAbrirOCC);

        Emite_Guia.setText("Emitir Guía");
        Emite_Guia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Emite_GuiaActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Emite_Guia);

        mnuCopiarOrden.setText("Copiar Orden");
        mnuCopiarOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCopiarOrdenActionPerformed(evt);
            }
        });
        jPopupMenu1.add(mnuCopiarOrden);

        jmenuVerUsuario.setText("Ver Asignación");
        jmenuVerUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmenuVerUsuarioActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jmenuVerUsuario);

        jMenuCreador.setText("Usuario Creador");
        jMenuCreador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCreadorActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuCreador);

        jmnuVerProducto.setText("Ver Producto");
        jmnuVerProducto.setName(""); // NOI18N
        jmnuVerProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnuVerProductoActionPerformed(evt);
            }
        });
        jPopupMenu2.add(jmnuVerProducto);

        jmnuVerOCP.setText("Ver Orden Proveedor");
        jmnuVerOCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnuVerOCPActionPerformed(evt);
            }
        });
        jPopupMenu2.add(jmnuVerOCP);

        jmnuSeparacion.setText("Separación");
        jmnuSeparacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnuSeparacionActionPerformed(evt);
            }
        });
        jPopupMenu2.add(jmnuSeparacion);

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btCargar.setText("Cargar");
        btCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCargarActionPerformed(evt);
            }
        });
        jPanel1.add(btCargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 20, 92, 35));

        lbOrdenes.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbOrdenes.setText("Ordenes: 0");
        jPanel1.add(lbOrdenes, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 90, -1, -1));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Ordenes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonGroup1.add(rbOrdenesCompletas);
        rbOrdenesCompletas.setText("Completas");
        rbOrdenesCompletas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbOrdenesCompletasActionPerformed(evt);
            }
        });
        jPanel2.add(rbOrdenesCompletas, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 16, -1, -1));

        buttonGroup1.add(rbOrdenesTodas);
        rbOrdenesTodas.setText("Todas");
        rbOrdenesTodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbOrdenesTodasActionPerformed(evt);
            }
        });
        jPanel2.add(rbOrdenesTodas, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 16, -1, -1));

        buttonGroup1.add(rbCerradas);
        rbCerradas.setSelected(true);
        rbCerradas.setText("Terminadas");
        rbCerradas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCerradasActionPerformed(evt);
            }
        });
        jPanel2.add(rbCerradas, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 42, -1, -1));

        buttonGroup1.add(rbEspecifica);
        rbEspecifica.setText("Específica");
        rbEspecifica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbEspecificaActionPerformed(evt);
            }
        });
        jPanel2.add(rbEspecifica, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 94, -1, -1));

        txOrden.setEnabled(false);
        txOrden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txOrdenKeyPressed(evt);
            }
        });
        jPanel2.add(txOrden, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 166, -1));

        buttonGroup1.add(RbParciales);
        RbParciales.setText("Parciales");
        jPanel2.add(RbParciales, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 42, -1, -1));

        buttonGroup1.add(RbPendientes);
        RbPendientes.setText("Pendientes");
        jPanel2.add(RbPendientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 68, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, 230, 150));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Fecha", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonGroup2.add(rbFechaTodas);
        rbFechaTodas.setSelected(true);
        rbFechaTodas.setText("Todas");
        rbFechaTodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFechaTodasActionPerformed(evt);
            }
        });
        jPanel3.add(rbFechaTodas, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 96, -1, -1));

        dtDesde.setEnabled(false);
        jPanel3.add(dtDesde, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 27, -1, -1));

        dtHasta.setEnabled(false);
        jPanel3.add(dtHasta, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 56, -1, -1));

        jLabel4.setText("hasta");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 60, -1, -1));

        buttonGroup2.add(rbFechaDesde);
        rbFechaDesde.setText("Desde");
        rbFechaDesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFechaDesdeActionPerformed(evt);
            }
        });
        jPanel3.add(rbFechaDesde, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 27, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 210, 140));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        txRut.setEnabled(false);
        txRut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txRutKeyPressed(evt);
            }
        });

        buttonGroup3.add(rbClienteRut);
        rbClienteRut.setText("Rut");
        rbClienteRut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbClienteRutActionPerformed(evt);
            }
        });

        buttonGroup3.add(rbClienteTodos);
        rbClienteTodos.setSelected(true);
        rbClienteTodos.setText("Todos");
        rbClienteTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbClienteTodosActionPerformed(evt);
            }
        });

        btIr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos22/Go.png"))); // NOI18N
        btIr.setBorderPainted(false);
        btIr.setEnabled(false);
        btIr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIrActionPerformed(evt);
            }
        });

        txNombre.setEnabled(false);

        chkTodasVendedor.setText("Todas  las Ordenes de los Vendedores");
        chkTodasVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTodasVendedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(rbClienteRut)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txRut, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btIr, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(rbClienteTodos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkTodasVendedor))
                    .addComponent(txNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbClienteRut)
                        .addComponent(txRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btIr, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbClienteTodos)
                    .addComponent(chkTodasVendedor))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, -1, 140));

        lbOCCompletas.setText("Ordenes Completas: 0");
        jPanel1.add(lbOCCompletas, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 110, -1, -1));

        lbOCParciales.setText("Ordenes Parciales: 0");
        jPanel1.add(lbOCParciales, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 130, -1, -1));

        lbOCNada.setText("Ordenes Pendientes: 0");
        jPanel1.add(lbOCNada, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 150, -1, -1));

        Grilla_days.setAutoCreateRowSorter(true);
        Grilla_days.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Dias.", "Cant."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(Grilla_days);
        if (Grilla_days.getColumnModel().getColumnCount() > 0) {
            Grilla_days.getColumnModel().getColumn(0).setPreferredWidth(30);
            Grilla_days.getColumnModel().getColumn(1).setResizable(false);
            Grilla_days.getColumnModel().getColumn(1).setPreferredWidth(30);
        }

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 10, 129, 160));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1350, 180));

        Grilla.setAutoCreateRowSorter(true);
        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Rut", "Nombre", "Orden", "Fecha", "Dias", "Despacho", "Bodega", "Guía", "Ciudad", "codigo_oc", "orden", "Despacho", "ubicacion", "Bloqueado", "FAT", "Asignada", "Usuario Asignado", "Usuario Creacion", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.setComponentPopupMenu(jPopupMenu1);
        Grilla.getTableHeader().setReorderingAllowed(false);
        Grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(65);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(65);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(2).setMinWidth(110);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(110);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(150);
            Grilla.getColumnModel().getColumn(3).setMinWidth(80);
            Grilla.getColumnModel().getColumn(3).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(3).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(4).setMinWidth(40);
            Grilla.getColumnModel().getColumn(4).setPreferredWidth(40);
            Grilla.getColumnModel().getColumn(4).setMaxWidth(40);
            Grilla.getColumnModel().getColumn(5).setMinWidth(0);
            Grilla.getColumnModel().getColumn(5).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(5).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(6).setMinWidth(0);
            Grilla.getColumnModel().getColumn(6).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(6).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(7).setMinWidth(0);
            Grilla.getColumnModel().getColumn(7).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(7).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(8).setMinWidth(220);
            Grilla.getColumnModel().getColumn(8).setPreferredWidth(220);
            Grilla.getColumnModel().getColumn(8).setMaxWidth(220);
            Grilla.getColumnModel().getColumn(9).setMinWidth(0);
            Grilla.getColumnModel().getColumn(9).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(9).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(10).setMinWidth(0);
            Grilla.getColumnModel().getColumn(10).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(10).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(11).setMinWidth(0);
            Grilla.getColumnModel().getColumn(11).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(11).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(12).setMinWidth(90);
            Grilla.getColumnModel().getColumn(12).setPreferredWidth(90);
            Grilla.getColumnModel().getColumn(12).setMaxWidth(120);
            Grilla.getColumnModel().getColumn(13).setMinWidth(0);
            Grilla.getColumnModel().getColumn(13).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(13).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(14).setMinWidth(35);
            Grilla.getColumnModel().getColumn(14).setPreferredWidth(35);
            Grilla.getColumnModel().getColumn(14).setMaxWidth(50);
            Grilla.getColumnModel().getColumn(15).setMinWidth(50);
            Grilla.getColumnModel().getColumn(15).setPreferredWidth(50);
            Grilla.getColumnModel().getColumn(15).setMaxWidth(50);
            Grilla.getColumnModel().getColumn(16).setMinWidth(80);
            Grilla.getColumnModel().getColumn(16).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(16).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(17).setMinWidth(0);
            Grilla.getColumnModel().getColumn(17).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(17).setMaxWidth(0);
            Grilla.getColumnModel().getColumn(18).setMinWidth(70);
            Grilla.getColumnModel().getColumn(18).setPreferredWidth(70);
            Grilla.getColumnModel().getColumn(18).setMaxWidth(70);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 207, 1150, 190));

        GrillaDet.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        GrillaDet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Sku", "Nombre", "Unidad", "Solicitado", "Separado", "Despachado", "Diferencia", "OC Cliente", "Stock", "OC Proveedor", "Fecha OCP", "Nro OCP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GrillaDet.setComponentPopupMenu(jPopupMenu2);
        jScrollPane2.setViewportView(GrillaDet);
        if (GrillaDet.getColumnModel().getColumnCount() > 0) {
            GrillaDet.getColumnModel().getColumn(0).setMinWidth(80);
            GrillaDet.getColumnModel().getColumn(0).setPreferredWidth(80);
            GrillaDet.getColumnModel().getColumn(0).setMaxWidth(80);
            GrillaDet.getColumnModel().getColumn(1).setMinWidth(300);
            GrillaDet.getColumnModel().getColumn(1).setPreferredWidth(300);
            GrillaDet.getColumnModel().getColumn(1).setMaxWidth(350);
            GrillaDet.getColumnModel().getColumn(2).setMinWidth(75);
            GrillaDet.getColumnModel().getColumn(2).setPreferredWidth(75);
            GrillaDet.getColumnModel().getColumn(2).setMaxWidth(75);
            GrillaDet.getColumnModel().getColumn(3).setMinWidth(75);
            GrillaDet.getColumnModel().getColumn(3).setPreferredWidth(75);
            GrillaDet.getColumnModel().getColumn(3).setMaxWidth(75);
            GrillaDet.getColumnModel().getColumn(4).setMinWidth(75);
            GrillaDet.getColumnModel().getColumn(4).setPreferredWidth(75);
            GrillaDet.getColumnModel().getColumn(4).setMaxWidth(75);
            GrillaDet.getColumnModel().getColumn(5).setMinWidth(75);
            GrillaDet.getColumnModel().getColumn(5).setPreferredWidth(75);
            GrillaDet.getColumnModel().getColumn(5).setMaxWidth(75);
            GrillaDet.getColumnModel().getColumn(6).setMinWidth(75);
            GrillaDet.getColumnModel().getColumn(6).setPreferredWidth(75);
            GrillaDet.getColumnModel().getColumn(6).setMaxWidth(75);
            GrillaDet.getColumnModel().getColumn(7).setMinWidth(75);
            GrillaDet.getColumnModel().getColumn(7).setPreferredWidth(75);
            GrillaDet.getColumnModel().getColumn(7).setMaxWidth(75);
            GrillaDet.getColumnModel().getColumn(8).setMinWidth(75);
            GrillaDet.getColumnModel().getColumn(8).setPreferredWidth(75);
            GrillaDet.getColumnModel().getColumn(8).setMaxWidth(75);
            GrillaDet.getColumnModel().getColumn(9).setMinWidth(80);
            GrillaDet.getColumnModel().getColumn(9).setPreferredWidth(80);
            GrillaDet.getColumnModel().getColumn(9).setMaxWidth(80);
            GrillaDet.getColumnModel().getColumn(10).setMinWidth(75);
            GrillaDet.getColumnModel().getColumn(10).setPreferredWidth(75);
            GrillaDet.getColumnModel().getColumn(10).setMaxWidth(75);
            GrillaDet.getColumnModel().getColumn(11).setMinWidth(70);
            GrillaDet.getColumnModel().getColumn(11).setPreferredWidth(70);
            GrillaDet.getColumnModel().getColumn(11).setMaxWidth(70);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 1150, 140));

        btAgregarBlog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Agregar.png"))); // NOI18N
        btAgregarBlog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarBlogActionPerformed(evt);
            }
        });

        GrillaBlog.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        GrillaBlog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Historial", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GrillaBlog.setToolTipText("Tool");
        GrillaBlog.setGridColor(new java.awt.Color(255, 255, 255));
        GrillaBlog.setRowHeight(20);
        GrillaBlog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaBlogMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(GrillaBlog);
        if (GrillaBlog.getColumnModel().getColumnCount() > 0) {
            GrillaBlog.getColumnModel().getColumn(0).setMinWidth(20);
            GrillaBlog.getColumnModel().getColumn(0).setPreferredWidth(20);
            GrillaBlog.getColumnModel().getColumn(0).setMaxWidth(30);
            GrillaBlog.getColumnModel().getColumn(2).setMinWidth(30);
            GrillaBlog.getColumnModel().getColumn(2).setPreferredWidth(30);
            GrillaBlog.getColumnModel().getColumn(2).setMaxWidth(30);
        }

        TxHistorial.setColumns(20);
        TxHistorial.setRows(10);
        jScrollPane5.setViewportView(TxHistorial);

        jButton1.setText("Ordenes con separados");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPComentLayout = new javax.swing.GroupLayout(JPComent);
        JPComent.setLayout(JPComentLayout);
        JPComentLayout.setHorizontalGroup(
            JPComentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPComentLayout.createSequentialGroup()
                .addGroup(JPComentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(JPComentLayout.createSequentialGroup()
                        .addComponent(btAgregarBlog, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(JPComentLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );
        JPComentLayout.setVerticalGroup(
            JPComentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPComentLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(JPComentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btAgregarBlog)
                    .addComponent(jButton1))
                .addGap(5, 5, 5)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        add(JPComent, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 200, 220, 360));
    }// </editor-fold>//GEN-END:initComponents
    
    public String getDesde() {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        return( sdf.format( (dtDesde.getDate()).getTime() ) );
    }
    public String getHasta() {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        return( sdf.format( (dtHasta.getDate()).getTime() ) );
    }
    private void btCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCargarActionPerformed
        ExeSql Sql = new ExeSql();
        ExeSql Sql1 = new ExeSql();
        ResultSet Rs, Rs1;
        DefaultTableModel TableModel = (DefaultTableModel) Grilla.getModel();
        String Query;
        String Guia,Factura;
        String ubica = "";
        String Query_Pend ="";
        int Donde=0;
        int Completa=0;
        int ContCompleta=0,ContParcial=0,ContNada=0;
        int ccosto = Integer.valueOf(fmMain.GetCentrodeCosto());
        String Ciudad = "";
        
        
        String ucreacion = "";
        String estado = "";
        
        
        while(TableModel.getRowCount()>0)
          TableModel.removeRow(0);
         
     
         
        Query = "select o.rut,trim(c.nombre) as nombre,CAST(o.codigo_oc as varchar) || '-' || o.orden as orden, \n"
                + "cast(o.femision as date) as femision, EXTRACT( day from current_date-o.femision) as dias,\n"
                + "case o.estado when 0 then 'Pendiente' when 1 then 'Parcial' else 'Completo' end as Despacho,\n"
                + "case o.estadodespacho when 0 then 'Pendiente' when 1 then 'Separando' when 4 then 'Cerrado2' else 'Cerrado' end as Bodega,\n"
                + "sum(d.cantidad) = sum(d.separado + d.despachado) as EsCompleta, \n" 
                + "sum(d.cantidad) as solicitado,sum(d.separado) as separado,sum(d.despachado) as despachado,"
                + "sum(d.facturado) as facturado,o.codigo_oc,o.orden as ordenreal, o.ubicacion, o.es_transporte,"
                + "case when o.usuario_separacion = 'LIBRES' then false else true end as usuario_separacion,"
                + "o.usuario_separacion sepa, o.usuario_creacion,"
                + "case when clo.ciudad is null then 'SIN INFORMACION' else clo.ciudad end \n"
                + "\n"
                + "from occh o\n"
                + "left join occhdet d on o.rut=d.rut and o.codigo_oc=d.codigo_oc and o.orden=d.orden\n"
                + "left join cliente c on c.rut=o.rut \n"
                + "left JOIN clicontacto clo ON c.rut = clo.rut\n" ;
        
        if(rbEspecifica.isSelected()){
            DefaultTableModel dfTm = (DefaultTableModel) Grilla_days.getModel();
            fmMain.LimpiaGrilla(dfTm);
            rbFechaTodas.setSelected(true);
            rbClienteTodos.setSelected(true);
            int Pos = txOrden.getText().indexOf("-");
            Query = Query + "where o.codigo_oc=" + txOrden.getText().substring(0, Pos) + " and upper(o.orden)='" + txOrden.getText().substring(Pos+1).toUpperCase() + "' \n";
        }
        // Ordenes que estan Terminadas y ya despachadas
        if(rbCerradas.isSelected()){
           
            Query = Query + " where o.estado =2  \n";  
            Donde=1;
            DefaultTableModel dfTm = (DefaultTableModel) Grilla_days.getModel();
            fmMain.LimpiaGrilla(dfTm);
            
        }
        // Orde Pendiente que no esta facturada, pero, esta lista para facturar, lo despachado + separado = solicitado
       
    
        if(RbParciales.isSelected() || RbPendientes.isSelected()){
            Query = Query + " where o.estado in (0,1)";
            Donde=1;
            
            if(RbParciales.isSelected()){
                Query = Query + " and estadodespacho in (0,1)\n";
            }
        }
        
        
        // Orde Pendiente completa
        if(rbOrdenesCompletas.isSelected()){
            
           // Query = Query + " where o.estado in (0,1)\n";
            Query = Query + " where o.estado in (2) and estadodespacho in (0,1) \n";
            Donde=1;
            
            
        }
        
        

        if(rbFechaDesde.isSelected()){
            if(Donde==0){
                Query = Query + " where o.femision between '" +  getDesde() + "' and '"  + getHasta() + "'";
                Donde=1;
            }
            else
                Query = Query + " and o.femision between '" +  getDesde() + "' and '"  + getHasta() + "'";
        }
        if(rbClienteRut.isSelected()){
            if(Donde==0){
                Query = Query + " where o.Rut="+ txRut.getText().trim();
                Donde=1;
            }
            else
                Query = Query + " and o.Rut="+ txRut.getText().trim();
        }
        
        if (ccosto==5 && !fmMain.GetUsuarioAdministrador() && chkTodasVendedor.isSelected()==false ){
                
            try{
                               
                Rs1 = Sql1.Select("Select vendedor from personal where usuario='"+fmMain.GetUsuario()+"'");
                Rs1.next();
                 Query = Query + " and vendedor in (0, "+Rs1.getInt("vendedor")+")";
        
            }catch(Exception e){
                            
                fmMain.Mensaje("Error al cargar vendedor: "+e);
            }finally{
            
                Sql1.Close();
            }
                 
        }
        
        Query = Query +  " group by o.rut,o.codigo_oc,o.orden, o.femision, o.femision, c.nombre, clo.ciudad";
        Query = Query +  " order by c.nombre";
     //    Query = Query +  " order by dias desc";
        
     //   System.out.println(Query);
        
        try {
            Rs = Sql.Select(Query);
            lbOrdenes.setText("Total Ordenes: " + Sql.GetRowCount());
            
            
            //LLena Cuadro con Ordenes Pendientes (Grilla_Days)
            
            if (rbOrdenesCompletas.isSelected()){
                Query_Pend = "select \n" +
                                "r.dias, \n" +
                                "count(r.cant) pendientes\n" +
                                "from \n" +
                                "(\n" +
                                "select \n" +
                                "    EXTRACT(day from current_date - o.femision) as dias,\n" +
                                "    sum(d.cantidad) Solicitado,\n" +
                                "    sum(d.separado) Separado,\n" +
                                "    sum(d.separado + d.despachado) despachado_separado,\n" +
                                "    o.rut, \n" +
                                "    o.codigo_oc ,\n" +
                                "  	o.orden ,\n" +
                                "     count(*) cant,case when o.usuario_separacion = 'LIBRES' then false else true end as usuario_separacion, o.usuario_separacion sepa, o.usuario_creacion\n" +
                                "from occh o\n" +
                                "     left join occhdet d on \n" +
                                "     	o.rut = d.rut and \n" +
                                "        o.codigo_oc = d.codigo_oc and\n" +
                                "      	o.orden = d.orden\n" +
                                "where estado in (0, 1)\n" +
                                "group by EXTRACT(day from current_date - o.femision),\n" +
                                "    o.rut, o.codigo_oc , o.orden  order by dias \n" +
                                ") r\n" +
                                "where \n" +
                                "r.Solicitado = r.despachado_separado \n" +
                                "group by r.dias";
                                 Carga_Pendientes(Query_Pend);
            
            }else if (RbParciales.isSelected()){
             
                Query_Pend = "select \n" +
                                "r.dias, \n" +
                                "count(r.cant) pendientes\n" +
                                "from \n" +
                                "(\n" +
                                "select \n" +
                                "    EXTRACT(day from current_date - o.femision) as dias,\n" +
                                "    sum(d.cantidad) Solicitado,\n" +
                                "    sum(d.separado) Separado,\n" +
                                "    sum(d.separado + d.despachado) despachado_separado,\n" +
                                "    o.rut, \n" +
                                "    o.codigo_oc ,\n" +
                                "  	o.orden ,\n" +
                                "     count(*) cant,case when o.usuario_separacion = 'LIBRES' then false else true end as usuario_separacion, o.usuario_separacion sepa, o.usuario_creacion\n" +
                                "from occh o\n" +
                                "     left join occhdet d on \n" +
                                "     	o.rut = d.rut and \n" +
                                "        o.codigo_oc = d.codigo_oc and\n" +
                                "      	o.orden = d.orden\n" +
                                "where estado in (0, 1)\n" +
                                "group by EXTRACT(day from current_date - o.femision),\n" +
                                "    o.rut, o.codigo_oc , o.orden  order by dias\n" +
                                ") r\n" +
                                "where \n" +
                                "r.Solicitado <> r.despachado_separado and r.Separado>0\n" +
                                "group by r.dias";
                                 Carga_Pendientes(Query_Pend);
            
            }else if (RbPendientes.isSelected()){
                
                Query_Pend = "select \n" +
                                "r.dias, \n" +
                                "count(r.cant) pendientes\n" +
                                "from \n" +
                                "(\n" +
                                "select \n" +
                                "    EXTRACT(day from current_date - o.femision) as dias,\n" +
                                "    sum(d.cantidad) Solicitado,\n" +
                                "    sum(d.separado) Separado,\n" +
                                "    sum(d.separado + d.despachado) despachado_separado,\n" +
                                "    o.rut, \n" +
                                "    o.codigo_oc ,\n" +
                                "  	o.orden ,\n" +
                                "     count(*) cant,case when o.usuario_separacion = 'LIBRES' then false else true end as usuario_separacion, o.usuario_separacion sepa, o.usuario_creacion\n" +
                                "from occh o\n" +
                                "     left join occhdet d on \n" +
                                "     	o.rut = d.rut and \n" +
                                "        o.codigo_oc = d.codigo_oc and\n" +
                                "      	o.orden = d.orden\n" +
                                "where estado in (0,1)\n" +
                                "group by EXTRACT(day from current_date - o.femision),\n" +
                                "    o.rut, o.codigo_oc , o.orden order by dias \n" +
                                " ) r\n" +
                                "where \n" +
                                "r.Separado=0\n" +
                                "group by r.dias";
                                 Carga_Pendientes(Query_Pend);
            }
            
            while(Rs.next()){
                
                if(Rs.getString("Bodega").trim().equals("Cerrado") && Rs.getDouble("Separado")>0){
                    Guia = "Pendiente";
                
                }else{
                
                    Guia = "";
                }    
                
                if(Rs.getDouble("Facturado")<Rs.getDouble("Despachado")){
                    
                    Factura = "Pendiente";
                
                }else{
                
                    Factura = "";
                }
                
                Ciudad = Rs.getString("ciudad").trim();
                
//*********************************************************************************************************************************************************************//                
                
                //ESTADO DE DESPACHOS
                //Sin Separacion = 0
                //Separacion Parcial = 1
                //Separacion Completa = 2
                
                
//                System.out.println("La Orden ES : "+ Rs.getString("codigo_oc")+"-"+ Rs.getString("ordenreal"));
                
                if(Rs.getDouble("solicitado")==Rs.getDouble("separado")+ Rs.getDouble("despachado")){
//                  System.out.println("Es Completa : "+ Rs.getString("codigo_oc")+"-"+ Rs.getString("ordenreal"));
                    Completa=2;
                    ContCompleta++;
                                   
                }else if(Rs.getDouble("separado") > 0 ){   
                     
//                 System.out.println("Es Parcial : "+ Rs.getString("codigo_oc")+"-"+ Rs.getString("ordenreal"));  
                   Completa=1;
                   ContParcial++;
                    
                
                }else if(Rs.getDouble("separado") == 0 && Rs.getDouble("despachado") > 0 ){   
                    
//                    System.out.println("Es Pendiente con Despacho : "+ Rs.getString("codigo_oc")+"-"+ Rs.getString("ordenreal"));
                    
                    Completa=0;
                    ContNada++;
                    
                
                }else{
                    
//                    System.out.println("No se clasificó : "+ Rs.getString("codigo_oc")+"-"+ Rs.getString("ordenreal"));
                    Completa = 0;
                    ContNada++;
                    
                }
   //*********************************************************************************************************************************************************************//                 
                
                if (rbEspecifica.isSelected()){      
            
                    DefaultTableModel dfTm = (DefaultTableModel) Grilla_days.getModel();
                    fmMain.LimpiaGrilla(dfTm);
            
                    if (Rs.getString("ubicacion") != null){
                   
                        ubica = Rs.getString("ubicacion");
                        String[] ubicacion = ubica.split("\\.");
                        String bodega = ubicacion [0];
                        String rack = ubicacion[1]; 
                        String metro = ubicacion[2];
                        ExeSql Sql2 = new ExeSql();
                        ResultSet Rs2;
                   
                        try{
                            
//                            Rs2= Sql2.Select("SELECT (b.bodega ||' . '|| r.rack ||' . '|| m.metro) as ubc\n" +
//                                             "from mt_bodega b, mt_rack r, mt_metro m\n" +
//                                             "where b.codigo='"+bodega+"' and r.codigo="+rack+" and m.codigo="+metro+" and m.rack="+rack);
//                            
                            
                            Rs2= Sql2.Select("SELECT nombre AS ubc FROM mt_codmetro WHERE codmetro = '"+ubica+"'");   
                            
                            
                            Rs2.next();
                            ubica = Rs2.getString("ubc");
                
                        }catch(Exception e){
                        
                            fmMain.Mensaje("Error: "+e);
                    
                        }finally{
                 
                            Sql2.Close();
                        }
            
                    }else{
                    
                        ubica = "Sin Ubicacion";
                    }
        
                }else{
                    //-- OJO revisando 092017-- cambiar
         
                    ubica = Rs.getString("ubicacion");

                }
                
                
                ucreacion = Rs.getString("sepa");
                estado = "";
                
                if (ucreacion.contains("LIBRES")){
                        
                    //System.out.println("El Usuario ES LIBRE : "+ucreacion);
                    estado = "Cerrada";
                        
                }else if (!ucreacion.contains("LIBRES")){
                                                
                   // System.out.println("El Usuario NO ES LIBRE : "+ucreacion);
                    estado = "Abierta";
                        
                }
                
                
                
                
                
         
                if (rbOrdenesCompletas.isSelected()){                           //Completas
                    
                    if (Completa==2){
                        
                        TableModel.addRow(new Object[]{
                                   Rs.getString("Rut"),
                                   Rs.getString("nombre"),
                                   Rs.getString("Orden"),
                                   Rs.getString("femision"),
                                   Rs.getInt("Dias"),
                                   Rs.getString("Despacho"),
                                   Rs.getString("Bodega"),
                                   Guia,
                                   Ciudad, //Factura,
                                   Rs.getString("codigo_oc"),
                                   Rs.getString("ordenreal"),
                                   Completa, ubica, false, Rs.getBoolean("es_transporte"),
                                   Rs.getBoolean("usuario_separacion"),
                                   Rs.getString("sepa"),
                                   Rs.getString("usuario_creacion"),
                                   estado
                        });
                    }   
                        
                }else if (RbParciales.isSelected()){      //Parciales
                            
                    if (Completa==1){
                                
                        TableModel.addRow(new Object[]{
                                   Rs.getString("Rut"),
                                   Rs.getString("nombre"),
                                   Rs.getString("Orden"),
                                   Rs.getString("femision"),
                                   Rs.getInt("Dias"),
                                   Rs.getString("Despacho"),
                                   Rs.getString("Bodega"),
                                   Guia,
                                   Ciudad, //Factura,
                                   Rs.getString("codigo_oc"),
                                   Rs.getString("ordenreal"),
                                   Completa, ubica, false, Rs.getBoolean("es_transporte"),
                                   Rs.getBoolean("usuario_separacion"),Rs.getString("sepa"),Rs.getString("usuario_creacion"),estado
                        });
                    }   
                        
                }else if (RbPendientes.isSelected()){                    //Pendientes
                            
                    if (Completa==0){
                        
                        TableModel.addRow(new Object[]{
                                   Rs.getString("Rut"),
                                   Rs.getString("nombre"),
                                   Rs.getString("Orden"),
                                   Rs.getString("femision"),
                                   Rs.getInt("Dias"),
                                   Rs.getString("Despacho"),
                                   Rs.getString("Bodega"),
                                   Guia,
                                    Ciudad, //Factura,
                                   Rs.getString("codigo_oc"),
                                   Rs.getString("ordenreal"),
                                   Completa, ubica, false,Rs.getBoolean("es_transporte"),
                                   Rs.getBoolean("usuario_separacion"),Rs.getString("sepa"),Rs.getString("usuario_creacion"),estado
                        });
                    }   
                
                }else{
                         
                       
                        
                    
                        TableModel.addRow(new Object[]{
                                   Rs.getString("Rut"),
                                   Rs.getString("nombre"),
                                   Rs.getString("Orden"),
                                   Rs.getString("femision"),
                                   Rs.getInt("Dias"),
                                   Rs.getString("Despacho"),
                                   Rs.getString("Bodega"),
                                   Guia,
                                    Ciudad, //Factura,
                                   Rs.getString("codigo_oc"),
                                   Rs.getString("ordenreal"),
                                   Completa, ubica, false,Rs.getBoolean("es_transporte"),
                                   Rs.getBoolean("usuario_separacion"),Rs.getString("sepa"),Rs.getString("usuario_creacion"),estado
                        });
                }
                        
                        
            } // end While
            Grilla.setDefaultRenderer(Object.class,new Utilidades.TableCellRendererColor_Master());
            Grilla.repaint();
            
            lbOCCompletas.setText("Ordenes Completas: " + ContCompleta );
            lbOCParciales.setText("Ordenes Parciales: " + ContParcial);
            lbOCNada.setText("Ordenes Pendientes:" + ContNada);
                
        } catch (SQLException e) {
            Logger.getLogger(pfOCCReporte.class.getName()).log(Level.SEVERE, null, e);
            System.out.println(e);
        } finally {
            Sql.Close();
        }

    }//GEN-LAST:event_btCargarActionPerformed
    private void CargaDetalle(){
        
          ExeSql Sql = new ExeSql();
          ExeSqlLuvaly luv = new ExeSqlLuvaly();
          ResultSet Rs, producto;
          DefaultTableModel TableModel = (DefaultTableModel) GrillaDet.getModel();
          
          while(TableModel.getRowCount()>0)
          TableModel.removeRow(0);
          
          try {
              Rs = Sql.Select("select trim(d.sku) as sku,trim(p.nombre) as nombre,trim(u.unidad) as unidad, d.cantidad,d.separado,d.despachado,d.separado + d.despachado - d.cantidad as diferencia,i.occ,i.stock+ i.gdc stock,i.ocp,"
                      + "(select min(pp.femision) as femision\n" +
                    "from ctacteprvdet dd\n" +
                    "left join ctacteprv pp on pp.rut=dd.rut and pp.tipdocto=dd.tipdocto and pp.nrodocto = dd.nrodocto\n" +
                    "where dd.tipdocto='OCP'\n" +
                    "and dd.sku=d.sku\n" +
                    "and dd.recibido < dd.cantidad) as fechaocp, \n" +
                     "(select min(pp.nrodocto) as femision\n" +
                    "from ctacteprvdet dd\n" +
                    "left join ctacteprv pp on pp.rut=dd.rut and pp.tipdocto=dd.tipdocto and pp.nrodocto = dd.nrodocto\n" +
                    "where dd.tipdocto='OCP'\n" +
                    "and dd.sku=d.sku\n" +
                    "and dd.recibido < dd.cantidad) as nroocp \n" +
                    "from occhdet d\n" +
                    "left join producto p on d.sku=p.sku\n" +
                    "left join inventario i on i.sku=p.sku\n" +
                    "left join par_unidad u on u.codigo=p.unidad\n" +
                    "where d.rut="+ Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString().trim() +"\n" +
                    "and d.codigo_oc="+ Grilla.getValueAt(Grilla.getSelectedRow(), 9).toString().trim() +"\n" +
                    "and d.orden='" + Grilla.getValueAt(Grilla.getSelectedRow(), 10).toString().trim() + "'\n"
                            + "group by d.sku, p.nombre, u.unidad, d.cantidad,d.separado,d.despachado, i.occ, i.stock, i.gdc, i.ocp");
              
              while(Rs.next()){
                    producto =  luv.Select("select p.nombre,trim(u.unidad) as unidad, u.um from producto p \n"
                              + "LEFT JOIN par_unidad u ON u.codigo=p.unidad\n "
                              + "where p.sku = '"+Rs.getString("sku").trim()+"'");
                    producto.next();
                TableModel.addRow(new Object[]{
                    Rs.getString("sku"),
                    producto.getString("nombre"),
                    producto.getString("unidad"),
                    fmMain.FormatoNumero(Rs.getDouble("cantidad")),
                    fmMain.FormatoNumero(Rs.getDouble("separado")),
                    fmMain.FormatoNumero(Rs.getDouble("despachado")),
                    fmMain.FormatoNumero(Rs.getDouble("diferencia")),
                    fmMain.FormatoNumero(Rs.getDouble("occ")),
                    fmMain.FormatoNumero(Rs.getDouble("stock")),
                    fmMain.FormatoNumero(Rs.getDouble("ocp")),
                    Rs.getString("fechaocp"),
                    Rs.getString("nroocp")});
                    
            }
              
          } catch (Exception e) {
              System.out.println(e);
          } finally{
              Sql.Close();
          }
                  
        
    }
    private void rbFechaTodasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFechaTodasActionPerformed
        if(rbFechaTodas.isSelected()){
            dtDesde.setEnabled(false);
            dtHasta.setEnabled(false);
        }
        else{
            dtDesde.setEnabled(true);
            dtHasta.setEnabled(true);
        }
            
            
    }//GEN-LAST:event_rbFechaTodasActionPerformed

    private void rbClienteTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbClienteTodosActionPerformed
        if(rbClienteTodos.isSelected()){
            txRut.setEnabled(false);
            btIr.setEnabled(false);
            txNombre.setEnabled(false);
        }
        else{
            txRut.setEnabled(true);
            btIr.setEnabled(true);
            txNombre.setEnabled(true);
            txRut.requestFocus();
        }
    }//GEN-LAST:event_rbClienteTodosActionPerformed

    private void rbFechaDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFechaDesdeActionPerformed
        if(rbFechaTodas.isSelected()){
            dtDesde.setEnabled(false);
            dtHasta.setEnabled(false);
        }
        else{
            dtDesde.setEnabled(true);
            dtHasta.setEnabled(true);
        }
    }//GEN-LAST:event_rbFechaDesdeActionPerformed

    private void rbClienteRutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbClienteRutActionPerformed
        if(rbClienteTodos.isSelected()){
            txRut.setEnabled(false);
            btIr.setEnabled(false);
            txNombre.setEnabled(false);
        }
        else{
            txRut.setEnabled(true);
            btIr.setEnabled(true);
            txNombre.setEnabled(true);
            txRut.requestFocus();
        }
    }//GEN-LAST:event_rbClienteRutActionPerformed

    private void txRutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txRutKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
            btIr.doClick();
    }//GEN-LAST:event_txRutKeyPressed
    private void CargaCliente(String Rut){
        ExeSql Sql= new ExeSql();
        ResultSet Rs;
        
        try {
            Rs = Sql.Select("select rut,nombre from cliente where rut=" + Rut);
            if(Sql.GetRowCount()==0){
                JOptionPane.showMessageDialog(null, "Cliente no encontrado");
                txRut.requestFocus();
                return;
            }
            Rs.next();
            txRut.setText(Rs.getString("Rut").trim());
            txNombre.setText(Rs.getString("Nombre").trim());
        } catch (Exception e) {
            System.out.println(e);
        } finally{
            Sql.Close();
        }
        
    }
    private void btIrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIrActionPerformed
        if(!txRut.getText().isEmpty())
            CargaCliente(txRut.getText());
        else{
            jdBuscarCliPrv BPC = new jdBuscarCliPrv(null, true);
            BPC.setLocationRelativeTo(null);
            BPC.setTitle("Buscar Cliente");
            BPC.SetTipo(1);
            BPC.setVisible(true);
            CargaCliente(BPC.GetRut());
        };
    }//GEN-LAST:event_btIrActionPerformed

    
      private void Carga_Pendientes(String Query){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel dfTm = (DefaultTableModel) Grilla_days.getModel();
        fmMain.LimpiaGrilla(dfTm);
        try {
            Rs = Sql.Select(Query);
            while(Rs.next()){
                dfTm.addRow(new Object[]{Rs.getInt("dias"),Rs.getInt("pendientes")});
            }
                
        } catch (Exception e) {
        }
    }        
    
    
    
    
    private void jmnuAbrirOCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnuAbrirOCCActionPerformed
        
    boolean EstaMarcado = false;    
        
    EstaMarcado = (boolean) Grilla.getValueAt(Grilla.getSelectedRow(),14);    
        
    if (!EstaMarcado)    
    {    
        pfOCCliente OCC = new pfOCCliente();
        OCC.AbreOCC(Grilla.getValueAt(Grilla.getSelectedRow(),0).toString().trim(),Grilla.getValueAt(Grilla.getSelectedRow(),9).toString().trim(),Grilla.getValueAt(Grilla.getSelectedRow(),10).toString().trim());
        pnPestanas.addTab("OC Cliente", OCC);
        PanelTab btc=new PanelTab(pnPestanas,0);
        pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(OCC), btc);
        pnPestanas.setSelectedIndex(pnPestanas.getTabCount()-1);
    }   
    else    
    {    
//        pfOCTransporte OCT = new pfOCTransporte();
//        OCT.AbrirOCCDirecta(Grilla.getValueAt(Grilla.getSelectedRow(),9).toString().trim(),Grilla.getValueAt(Grilla.getSelectedRow(),10).toString().trim());
//        pnPestanas.addTab("OC TRANSPORTE", OCT);
//        PanelTab btc=new PanelTab(pnPestanas,0);
//        pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(OCT), btc);
//        pnPestanas.setSelectedIndex(pnPestanas.getTabCount()-1);
    }   
        
        
    }//GEN-LAST:event_jmnuAbrirOCCActionPerformed

    private void jmnuVerProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnuVerProductoActionPerformed
        pfProductos Pro = new pfProductos();
        Pro.setOpaque(false);
        pnPestanas.addTab("Producto", Pro);
        PanelTab btc = new PanelTab(pnPestanas, 0);
        pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(Pro), btc);
        pnPestanas.setSelectedIndex(pnPestanas.getTabCount() - 1);
        Pro.txSku.requestFocus();
        Pro.CargaProducto(GrillaDet.getValueAt(GrillaDet.getSelectedRow(), 0).toString().trim());
    }//GEN-LAST:event_jmnuVerProductoActionPerformed

    private void jmnuVerOCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnuVerOCPActionPerformed
        if(!GrillaDet.getValueAt(GrillaDet.getSelectedRow(), 11).toString().isEmpty()){
            pfNPProveedor PrvOC = new pfNPProveedor();
            PrvOC.setOpaque(false);
            PrvOC.AbrirOCP(GrillaDet.getValueAt(GrillaDet.getSelectedRow(), 11).toString().trim());
            pnPestanas.addTab("OC Proveedor", PrvOC);
            PanelTab btc=new PanelTab(pnPestanas,0);
            pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(PrvOC), btc);
            pnPestanas.setSelectedIndex(pnPestanas.getTabCount()-1);
        }
    }//GEN-LAST:event_jmnuVerOCPActionPerformed

    private void rbEspecificaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbEspecificaActionPerformed
        if(rbEspecifica.isSelected()){
            txOrden.setEnabled(true);
            txOrden.requestFocus();
        }

    }//GEN-LAST:event_rbEspecificaActionPerformed

    private void rbOrdenesTodasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbOrdenesTodasActionPerformed
        if(!rbEspecifica.isSelected()){
            txOrden.setEnabled(false);
        }
    }//GEN-LAST:event_rbOrdenesTodasActionPerformed

    private void rbOrdenesCompletasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbOrdenesCompletasActionPerformed
        if(!rbEspecifica.isSelected()){
            txOrden.setEnabled(false);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_rbOrdenesCompletasActionPerformed

    private void rbCerradasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCerradasActionPerformed
        if(!rbEspecifica.isSelected()){
            txOrden.setEnabled(false);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_rbCerradasActionPerformed

    private void Emite_GuiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Emite_GuiaActionPerformed

        String estado = Grilla.getValueAt(Grilla.getSelectedRow(), 16).toString().trim();
        String despacho = Grilla.getValueAt(Grilla.getSelectedRow(), 5).toString().trim();
        
        if (!estado.equals("LIBRES")){
            
            fmMain.Mensaje("La Orden no está Cerrada!!");
            return;
        
        
        }
        
        
        pfGDCliente GDC = new pfGDCliente();
        String Orden = Grilla.getValueAt(Grilla.getSelectedRow(), 2).toString().trim();
        int Pos = Orden.indexOf("-");
        String CodigoOC= Orden.substring(0, Pos);
        String LaOrden=Orden.substring(Pos+1);
        
        GDC.NuevaGuia(Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString(), Orden.substring(0, Pos),Orden.substring(Pos+1));
        pnPestanas.addTab("GUÍA DE DESPACHO", GDC);
        PanelTab btc=new PanelTab(pnPestanas,0);
        pnPestanas.setTabComponentAt(pnPestanas.indexOfComponent(GDC), btc);
        pnPestanas.setSelectedIndex(pnPestanas.getTabCount()-1);
        
        
                //cbCodigoOc.getSelectedItem().toString(), txNroOc.getText());
    }//GEN-LAST:event_Emite_GuiaActionPerformed

    private void txOrdenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txOrdenKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            btCargar.doClick();
        }
    }//GEN-LAST:event_txOrdenKeyPressed

    private void GrillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMouseClicked
        if(evt.getClickCount()==2){
            jdOCC_Transporte Trans = new jdOCC_Transporte(null, true);
            Trans.setLocationRelativeTo(null);
            Trans.CargaTransporte(Grilla.getValueAt(Grilla.getSelectedRow(), 9).toString().trim(), Grilla.getValueAt(Grilla.getSelectedRow(), 10).toString().trim());
            Trans.setVisible(true);
        }
        CargaBlog();
    }//GEN-LAST:event_GrillaMouseClicked

    private void mnuCopiarOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCopiarOrdenActionPerformed
        //Copiar Ordenes
        if(!Grilla.getValueAt(Grilla.getSelectedRow(), 2).toString().trim().isEmpty()){
            StringSelection Voucher = new StringSelection(Grilla.getValueAt(Grilla.getSelectedRow(), 2).toString().trim());
            Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
            cb.setContents(Voucher, null);
        }
    }//GEN-LAST:event_mnuCopiarOrdenActionPerformed

    private void chkTodasVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTodasVendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkTodasVendedorActionPerformed
private void CargaBlog(){

        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        String Query ="";
        GrillaBlog.setDefaultRenderer(Object.class, new ImgTabla());
        DefaultTableModel tm = (DefaultTableModel) GrillaBlog.getModel();
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy - hh:mm");
        SimpleDateFormat sdf2 = new SimpleDateFormat("dd-MMM-yyyy");
        
        fmMain.LimpiaGrilla(tm);
        
        
        TxHistorial.setText("");
        JLabel lbCall = new JLabel();
        JLabel lbMail = new JLabel();
        JLabel lbFin  = new JLabel();
        JLabel lbIni  = new JLabel();
        JLabel lbInfo = new JLabel();
        
        URL urlCall = this.getClass().getResource("/Iconos/Llamada.png");  
        URL urlMail = this.getClass().getResource("/Iconos/email.png");  
        URL urlIni =  this.getClass().getResource("/Iconos22/Go.png");  
        URL urlFin =  this.getClass().getResource("/Iconos/camion.png");  
        URL urlInfo =  this.getClass().getResource("/Iconos/info.png");
         
        ImageIcon IconoCall =  new ImageIcon(urlCall); 
        ImageIcon IconoMail =  new ImageIcon(urlMail); 
        ImageIcon IconoIni  =  new ImageIcon(urlIni); 
        ImageIcon IconoFin  =  new ImageIcon(urlFin); 
        ImageIcon IconoInfo =  new ImageIcon(urlInfo); 
        
        lbCall.setIcon(IconoCall);
        lbMail.setIcon(IconoMail);
        lbIni.setIcon(IconoIni);
        lbFin.setIcon(IconoFin);
        lbInfo.setIcon(IconoInfo);
        
        try {
            
            Query = "SELECT id,fecha,usuario,texto,tipo,compromiso,fcompromiso\n" +
                            " FROM blog_occ\n" +
                            " where rut=" + Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString().trim() + "\n" +
                            " and codigo_oc = " + Integer.valueOf(Grilla.getValueAt(Grilla.getSelectedRow(), 9).toString().trim())  + " \n" + 
                            " and orden='" + Grilla.getValueAt(Grilla.getSelectedRow(), 10).toString().trim() + "' order by fecha desc";
            
            Rs = Sql.Select(Query);
            
            while(Rs.next()){
                 //Tipo 0 = Llamada
                if(Rs.getInt("tipo")==1){
                    tm.addRow(new Object[]{lbCall,sdf.format(Rs.getTimestamp("fecha"))+ "   [" + Rs.getString("usuario").trim().toUpperCase() + "]",Rs.getString("id")});
                    
                }
                //Tipo 1 = Correo
                else if(Rs.getInt("tipo")==2) {
                    tm.addRow(new Object[]{lbMail,sdf.format(Rs.getTimestamp("fecha"))+ "   [" + Rs.getString("usuario").trim().toUpperCase() + "]",Rs.getString("id")});
                }
                // Tipo 2 = Bloque
                else if(Rs.getInt("tipo")==3) {
                    tm.addRow(new Object[]{lbIni,sdf.format(Rs.getTimestamp("fecha"))+ "   [" + Rs.getString("usuario").trim().toUpperCase() + "]",Rs.getString("id")});
                }
                // Tipo 3 = Desbloqueo
                else if(Rs.getInt("tipo")==4) {
                    tm.addRow(new Object[]{lbFin,sdf.format(Rs.getTimestamp("fecha"))+ "   [" + Rs.getString("usuario").trim().toUpperCase() + "]",Rs.getString("id")});
                }
                
                else if(Rs.getInt("tipo")==5) {
                    tm.addRow(new Object[]{lbInfo,sdf.format(Rs.getTimestamp("fecha"))+ "   [" + Rs.getString("usuario").trim().toUpperCase() + "]",Rs.getString("id")});
                }
                
                 //Mensaje
                tm.addRow(new Object[]{" ",Rs.getString("texto"),Rs.getString("id")});
//                if(Rs.getBoolean("compromiso"))
//                    tm.addRow(new Object[]{" ", "Compromiso: " + sdf2.format(Rs.getTimestamp("fcompromiso"))});
                    
            }
            
        } catch (Exception e) {
            fmMain.Mensaje("Ha ocurrido un error");
            LogError.Guardar(this.getClass().getSimpleName(),e.getMessage());
        } finally {
            Sql.Close();
        }
    }

    private void btAgregarBlogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarBlogActionPerformed
        int cod =0;
        jdAgregaBlog_occ AddBlog = new jdAgregaBlog_occ(null, true);
        cod = Integer.valueOf(Grilla.getValueAt(Grilla.getSelectedRow(), 9).toString().trim());
        AddBlog.SetDatos(Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString().trim(), cod , Grilla.getValueAt(Grilla.getSelectedRow(), 10).toString().trim() );

        //AddBlog.SetDatos(Grilla.getValueAt(Grilla.getSelectedRow(), 0),"GDC",Grilla.getValueAt(Grilla.getSelectedRow(), 3));
        AddBlog.setTitle("Nuevo Registro");
        AddBlog.setLocationRelativeTo(btAgregarBlog);
        AddBlog.setVisible(true);
        if(AddBlog.GetGuardar())
        CargaBlog();
    }//GEN-LAST:event_btAgregarBlogActionPerformed

    private void GrillaBlogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaBlogMouseClicked
        // TODO add your handling code here:
         TxHistorial.setText(GrillaBlog.getValueAt(GrillaBlog.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_GrillaBlogMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jdOrdenesSeparadas AddBlog = new jdOrdenesSeparadas(null, true);
        AddBlog.setTitle("Ordenes Separadas");
        AddBlog.setLocationRelativeTo(btAgregarBlog);
        AddBlog.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jmenuVerUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmenuVerUsuarioActionPerformed
        String usuario = Grilla.getValueAt(Grilla.getSelectedRow(), 16).toString().trim();
        JOptionPane.showMessageDialog(null, usuario);
    }//GEN-LAST:event_jmenuVerUsuarioActionPerformed

    private void jmnuSeparacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnuSeparacionActionPerformed
        String sku = GrillaDet.getValueAt(GrillaDet.getSelectedRow(),0).toString().trim();
        String orden = Grilla.getValueAt(Grilla.getSelectedRow(),2).toString().trim();
        jdSeparacionesUbicacionReporte BP = new jdSeparacionesUbicacionReporte(null, true);
        BP.CargaSeparaciones(sku, orden);
        BP.setLocationRelativeTo(null);
        BP.setTitle("Separaciones");
        BP.setVisible(true);
    }//GEN-LAST:event_jmnuSeparacionActionPerformed

    private void jMenuCreadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCreadorActionPerformed
        String usuario = Grilla.getValueAt(Grilla.getSelectedRow(), 17).toString().trim();
        JOptionPane.showMessageDialog(null, "Usuario Creador: "+usuario);
    }//GEN-LAST:event_jMenuCreadorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Emite_Guia;
    private javax.swing.JTable Grilla;
    private javax.swing.JTable GrillaBlog;
    private javax.swing.JTable GrillaDet;
    private javax.swing.JTable Grilla_days;
    private javax.swing.JPanel JPComent;
    private javax.swing.JRadioButton RbParciales;
    private javax.swing.JRadioButton RbPendientes;
    private javax.swing.JTextArea TxHistorial;
    private javax.swing.JButton btAgregarBlog;
    private javax.swing.JButton btCargar;
    private javax.swing.JButton btIr;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JCheckBox chkTodasVendedor;
    private org.jdesktop.swingx.JXDatePicker dtDesde;
    private org.jdesktop.swingx.JXDatePicker dtHasta;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuItem jMenuCreador;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JMenuItem jmenuVerUsuario;
    private javax.swing.JMenuItem jmnuAbrirOCC;
    private javax.swing.JMenuItem jmnuSeparacion;
    private javax.swing.JMenuItem jmnuVerOCP;
    private javax.swing.JMenuItem jmnuVerProducto;
    private javax.swing.JLabel lbOCCompletas;
    private javax.swing.JLabel lbOCNada;
    private javax.swing.JLabel lbOCParciales;
    private javax.swing.JLabel lbOrdenes;
    private javax.swing.JMenuItem mnuCopiarOrden;
    private javax.swing.JRadioButton rbCerradas;
    private javax.swing.JRadioButton rbClienteRut;
    private javax.swing.JRadioButton rbClienteTodos;
    private javax.swing.JRadioButton rbEspecifica;
    private javax.swing.JRadioButton rbFechaDesde;
    private javax.swing.JRadioButton rbFechaTodas;
    private javax.swing.JRadioButton rbOrdenesCompletas;
    private javax.swing.JRadioButton rbOrdenesTodas;
    private javax.swing.JTextField txNombre;
    private javax.swing.JTextField txOrden;
    private javax.swing.JTextField txRut;
    // End of variables declaration//GEN-END:variables
}
