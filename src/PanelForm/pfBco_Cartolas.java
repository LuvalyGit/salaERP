/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanelForm;

import Conexion.ExeSql;
import Formularios.fmMain;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author David Alcaman
 */
public class pfBco_Cartolas extends javax.swing.JPanel {

    boolean Cargando;
    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    /**
     * Creates new form pfBco_Cartolas
     */
    public pfBco_Cartolas() {
        initComponents();
        
        Cargando=true;
        CargaBancos();
        Cargando=false;
        MesFecha.setSelectionDate(new Date());
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        Grilla.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        Grilla.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
        Grilla.getColumnModel().getColumn(6).setCellRenderer(rightRenderer);
        btCancelar.setVisible(false);
        btGuardar.setVisible(false);
        cbBancoId.setVisible(false);
        cbCuentaId.setVisible(false);
        MesFecha.setEnabled(false);
        chbFormato.setVisible(false);
        

            
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        cbBancoId = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        cbBanco = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        cbCuentaId = new javax.swing.JComboBox();
        cbCuenta = new javax.swing.JComboBox();
        MesFecha = new org.jdesktop.swingx.JXMonthView();
        jRadioButton1 = new javax.swing.JRadioButton();
        chbFormato = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btCancelar = new javax.swing.JButton();
        btGuardar = new javax.swing.JButton();
        btNuevaCartola = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cbBancoId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbBancoId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBancoIdActionPerformed(evt);
            }
        });

        jLabel1.setText("Banco");

        cbBanco.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBancoActionPerformed(evt);
            }
        });

        jLabel5.setText("Cuenta");

        cbCuenta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", " " }));
        cbCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCuentaActionPerformed(evt);
            }
        });

        MesFecha.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        MesFecha.setAutoscrolls(true);
        MesFecha.setTraversable(true);
        MesFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MesFechaActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Fecha");

        chbFormato.setText("Formato Nuevo");
        chbFormato.setEnabled(false);
        chbFormato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbFormatoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton1)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addComponent(jLabel1))
                    .addComponent(cbCuentaId, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbBancoId, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(MesFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                        .addComponent(cbCuenta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbBanco, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chbFormato)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(chbFormato))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MesFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addGap(27, 27, 27)
                        .addComponent(cbCuentaId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbBancoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        Grilla.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Fecha", "Oficina", "Numero", "Detalle", "$ Cargo", "$ Abono", "Saldo", "Asoc."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.setAutoscrolls(false);
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(80);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(1).setMinWidth(120);
            Grilla.getColumnModel().getColumn(1).setPreferredWidth(120);
            Grilla.getColumnModel().getColumn(1).setMaxWidth(150);
            Grilla.getColumnModel().getColumn(2).setMinWidth(100);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(100);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(3).setMinWidth(230);
            Grilla.getColumnModel().getColumn(3).setPreferredWidth(230);
            Grilla.getColumnModel().getColumn(4).setMinWidth(85);
            Grilla.getColumnModel().getColumn(4).setPreferredWidth(85);
            Grilla.getColumnModel().getColumn(4).setMaxWidth(85);
            Grilla.getColumnModel().getColumn(5).setMinWidth(85);
            Grilla.getColumnModel().getColumn(5).setPreferredWidth(85);
            Grilla.getColumnModel().getColumn(5).setMaxWidth(85);
            Grilla.getColumnModel().getColumn(6).setMinWidth(85);
            Grilla.getColumnModel().getColumn(6).setPreferredWidth(85);
            Grilla.getColumnModel().getColumn(6).setMaxWidth(85);
            Grilla.getColumnModel().getColumn(7).setMinWidth(40);
            Grilla.getColumnModel().getColumn(7).setPreferredWidth(45);
            Grilla.getColumnModel().getColumn(7).setMaxWidth(60);
        }

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Ingresar Cartola"));

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/Cancel16.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/ok_16.png"))); // NOI18N
        btGuardar.setText("Guardar");
        btGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarActionPerformed(evt);
            }
        });

        btNuevaCartola.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/New.png"))); // NOI18N
        btNuevaCartola.setText("Nueva Cartola");
        btNuevaCartola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevaCartolaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 150, Short.MAX_VALUE)
                .addComponent(btGuardar)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(btNuevaCartola)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btNuevaCartola)
                .addGap(0, 0, 0)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelar)
                    .addComponent(btGuardar))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void CargaBancos(){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        
        cbBanco.removeAllItems();
        cbBancoId.removeAllItems();
        
        try {
            Rs = Sql.Select("select id,nombre\n" +
                            "from bco_bancos where id>0\n" +
                            "order by id");
            while(Rs.next()){
                cbBancoId.addItem(Rs.getInt("id"));
                cbBanco.addItem(Rs.getString("nombre"));
            }
            cbBanco.setSelectedIndex(-1);
            cbBancoId.setSelectedIndex(-1);
        } catch (Exception e) {
            fmMain.Mensaje("Error");
        } finally{
            Sql.Close();
        }
    }
    private void CargaCuentas(String Banco){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        
        cbCuenta.removeAllItems();
        cbCuentaId.removeAllItems();
        
        try {
            Rs = Sql.Select("select id,cuenta\n" +
                            "from bco_cuentas \n" +
                            "where banco=" + Banco + " and tipo <>2");
            while(Rs.next()){
                cbCuentaId.addItem(Rs.getInt("id"));
                cbCuenta.addItem(Rs.getString("cuenta").trim());
            }
            cbCuenta.setSelectedIndex(-1);
            cbCuentaId.setSelectedIndex(-1);
        } catch (Exception e) {
            fmMain.Mensaje("Error: " + e.getMessage());
        } finally{
            Sql.Close();
        }
    }
    private void cbBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBancoActionPerformed
        if(!Cargando){
            cbBancoId.setSelectedIndex(cbBanco.getSelectedIndex());
            CargaCuentas(cbBancoId.getSelectedItem().toString());
        }
                
        

    }//GEN-LAST:event_cbBancoActionPerformed

    public boolean CheckBanco(String codigo){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        boolean codigo_ = false;
        String Query = ("select cuenta from bco_cuentas"
                + " where cuenta = '"+codigo+"'");
        try {
            Rs = Sql.Select(Query);
            while(Rs.next()){
                if(Rs.getString("cuenta").equals(codigo)){
                    codigo_ = true;
                    break;
                }
                else {
                    codigo_ = false;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(pfBco_Cartolas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return codigo_;
    }
    private void cbCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCuentaActionPerformed
            cbCuentaId.setSelectedIndex(cbCuenta.getSelectedIndex());
            if(cbCuentaId.getSelectedIndex()!=-1){
                MesFecha.setEnabled(true);
                btNuevaCartola.setEnabled(true);
            }
                
            else{
                MesFecha.setEnabled(false);
                btNuevaCartola.setEnabled(false);
            }
            if(cbCuenta.getSelectedIndex()==1 && cbCuenta.getSelectedItem().toString().equals("62900307441")){
                System.out.println("Cuenta");
                chbFormato.setSelected(true);
                System.out.println("Cuenta nueva seleccionada.");
            }
            else {
                System.out.println("No cuenta");
                chbFormato.setSelected(false);
            }

           
    }//GEN-LAST:event_cbCuentaActionPerformed
    private void CargarExcelArchivo(){
        JFileChooser selecArchivo = new JFileChooser();
        selecArchivo.setFileFilter(new FileNameExtensionFilter("Excel 2003 (xls)", "xls"));
        selecArchivo.setFileFilter(new FileNameExtensionFilter("Excel 2010 (xlsx)", "xlsx"));
        if(selecArchivo.showDialog(null, "Seleccionar archivo")== JFileChooser.APPROVE_OPTION){
            if(Importar(selecArchivo.getSelectedFile())== true){
                btNuevaCartola.setVisible(false);
                btCancelar.setVisible(true);
                btGuardar.setVisible(true);
            }
        }
    }
    
    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        if(fmMain.OkCancel("¿Descartar los datos copiados ?")== JOptionPane.OK_OPTION){
            LimpiaGrilla((DefaultTableModel) Grilla.getModel());
            btGuardar.setVisible(false);
            btCancelar.setVisible(false);
            btNuevaCartola.setVisible(true);
            cbBanco.setEnabled(true);
            cbCuenta.setEnabled(true);
        }
    }//GEN-LAST:event_btCancelarActionPerformed
    
    private void LimpiaGrilla(DefaultTableModel Model){
        while(Model.getRowCount()>0)
              Model.removeRow(0);
    }
    
    private void btGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarActionPerformed
       ExeSql Sql = new ExeSql();
       ResultSet Rs; 
        //Validaciones
        try {
            Rs = Sql.Select("select count(*) as existe\n" +
                            "from bco_cartola\n" +
                            "where cuenta="+ cbCuentaId.getSelectedItem().toString().trim() + "\n" +
                            "and fecha in ("+ GetNuevasFechas() +")");
            Rs.next();
            if(Rs.getInt("existe")>0){
                fmMain.Mensaje("Una o más fechas ya estan registradas en el Sistema. No se puede Guardar");
                Sql.Close();
                return;
            }
                
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
       
        
        
        
       
       
       if(fmMain.OkCancel("¿Desea guardar los datos?")== JOptionPane.OK_OPTION){
           try {
            for (int i = 0; i < Grilla.getRowCount(); i++) {
                Sql.ExeSql("insert into bco_cartola\n" +
                       "(cuenta,fecha,detalle,nrodocumento,oficina,cargo,abono,saldo) values\n" +
                       "(" + cbCuentaId.getSelectedItem().toString().trim() + ",'" + 
                        Grilla.getValueAt(i,0).toString().trim() + "','" +
                        Grilla.getValueAt(i,3).toString().trim() + "','" +
                        Grilla.getValueAt(i,2).toString().trim() + "','" +
                        Grilla.getValueAt(i,1).toString().trim() + "'," +
                        fmMain.SetGuardarEntero(Grilla.getValueAt(i,4).toString().trim()) + "," +
                        fmMain.SetGuardarEntero(Grilla.getValueAt(i,5).toString().trim())+ "," +
                        fmMain.SetGuardarEntero(Grilla.getValueAt(i,6).toString().trim())+ ")");
            }
            Sql.Commit();
            fmMain.Mensaje("Datos Guardados");
            btGuardar.setVisible(false);
            btCancelar.setVisible(false);
            btNuevaCartola.setVisible(true);
            LimpiaGrilla((DefaultTableModel) Grilla.getModel());
            cbBanco.setEnabled(true);
            cbCuenta.setEnabled(true);
            } catch (Exception e) {
                fmMain.Mensaje("Error al Guardar: " + e.getMessage());
            } finally {
                Sql.Close();
            }
       }
       
        
    }//GEN-LAST:event_btGuardarActionPerformed

    private void CargaCartola(String Cuenta,Date Fecha){
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
        DefaultTableModel Model = (DefaultTableModel) Grilla.getModel();
        LimpiaGrilla(Model);
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        
        try {
            Rs = Sql.Select("select fecha,oficina,nrodocumento,detalle,cargo,abono,saldo\n" +
                            "from bco_cartola\n" +
                            "where cuenta="+ Cuenta +"\n" +
                            "and fecha=cast('"+ sdf.format(Fecha) +"' as date)");
            
            while(Rs.next()){
                Model.addRow(new Object[]{
                                Rs.getString("Fecha").trim(),
                                Rs.getString("Oficina").trim(),
                                Rs.getString("nrodocumento").trim(),
                                Rs.getString("detalle").trim(),
                                Rs.getDouble("Cargo"),
                                Rs.getDouble("abono"),
                                Rs.getDouble("saldo")
                });
            }
            
        } catch (Exception e) {
        }
    }
    private void MesFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MesFechaActionPerformed
        CargaCartola(cbCuentaId.getSelectedItem().toString().trim(),MesFecha.getSelectionDate());
    }//GEN-LAST:event_MesFechaActionPerformed

    private void btNuevaCartolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevaCartolaActionPerformed
               //Validaciones
        if(cbCuentaId.getSelectedIndex()==-1){
            fmMain.Mensaje("Debe seleccionar una Cuenta");
            return;
        }
        
        if(fmMain.OkCancel("¿Desea cargar una nueva Cartola para el banco " + cbBanco.getSelectedItem().toString().trim() + " a la cuenta " + cbCuenta.getSelectedItem().toString().trim()+" ?")== JOptionPane.OK_OPTION){
        String LINE_BREAK = "\n"; 
        String CELL_BREAK = "\t"; 
        Clipboard CLIPBOARD = Toolkit.getDefaultToolkit().getSystemClipboard(); 
        String pasteString = ""; 
        
        String Fecha="";
        String Oficina ="";
        String Numero = "";
        String Detalle="";
        String Cargo="";
        String Abono="";
        String Saldo="";
        
        int PosPesoCargo=0;
        int PosPesoAbono=0;
        int PosPesoSaldo=0;
        
        DefaultTableModel Model = (DefaultTableModel) Grilla.getModel();
        
        while(Model.getRowCount()>0)
              Model.removeRow(0);
        
        int startRow=0; 
        int startCol=0;
        
                try { 
                        pasteString = (String)(CLIPBOARD.getContents(this).getTransferData(DataFlavor.stringFlavor)); 
                } catch (Exception e) { 
                        JOptionPane.showMessageDialog(null, "Invalid Paste Type", "Invalid Paste Type", JOptionPane.ERROR_MESSAGE);
                        return; 
                } 
                try {
                String[] lines = pasteString.split(LINE_BREAK); 
                for (int i=0 ; i<lines.length; i++) { 
                        
                        String[] cells = lines[i].split(CELL_BREAK); 
//                        for (int j=0 ; j<cells.length; j++) { 
//                                if (Grilla.getRowCount()>startRow+i && Grilla.getColumnCount()>startCol+j) { 
//                                        Grilla.setValueAt(cells[j], startRow+i, startCol+j); 
                                    //Banco BCI
                                    if(cbBancoId.getSelectedItem().toString().trim().equals("1")){
                                        Fecha   = cells[0];
                                        Oficina = cells[1];
                                        Detalle = cells[2];
                                        Numero  = cells[3];
                                        Cargo   = cells[4];
                                        Abono   = cells[5];
                                        Saldo   = cells[6];
                                    }
                                    //BANCO BICE
                                    else if(cbBancoId.getSelectedItem().toString().trim().equals("2")){
                                        Fecha = cells[0].substring(6,8) + "-"+ cells[0].substring(4,6) +"-" +cells[0].substring(0,4);
                                        Oficina = "";
                                        Detalle = cells[3];
                                        Numero = cells[1];
                                        try {
                                            Cargo = cells[4];
                                        } catch (Exception e) {
                                            Cargo="0";
                                        }
                                        try {
                                            Abono = cells[5];
                                        } catch (Exception e) {
                                            Abono="0";
                                        }
                                        Saldo = cells[6];
                                    }
                                    //BANCO ESTADO && 
                                    else if(cbBancoId.getSelectedItem().toString().trim().equals("3") && !chbFormato.isSelected()){
                                        Fecha   = cells[5];
                                        Oficina = cells[2];
                                        Detalle = cells[1];
                                        Numero  = cells[0];
                                        Cargo   = cells[3];
                                        Abono   = cells[4];
                                        Saldo   = cells[6];
                                    }
//                                    //Banco Estado 2
//                                    else if(cbBancoId.getSelectedItem().toString().trim().equals("4")){
//                                        Fecha   = cells[0];//5
//                                        Oficina = cells[1];//2
//                                        Detalle = cells[3];//1
//                                        Numero  = cells[2];//0
//                                        Cargo   = cells[4];//3
//                                        Abono   = cells[5];//4
//                                        Saldo   = cells[6];//6
//                                    }
                                    else if(cbBancoId.getSelectedItem().toString().trim().equals("3") && chbFormato.isSelected()){
                                        Fecha   = cells[0];//5
                                        Oficina = cells[1];//2
                                        Detalle = cells[3];//1
                                        Numero  = cells[2];//0
                                        Cargo   = cells[4];//3
                                        Abono   = cells[5];//4
                                        Saldo   = cells[6];//6
                                    }
                                    else if(cbBancoId.getSelectedItem().toString().trim().equals("4")){
                                        Fecha   = cells[0];//5
                                        Oficina = "-";//2
                                        Detalle = cells[1];//1
                                        Numero  = cells[2];//0
                                        Cargo   = cells[3];//3
                                        Abono   = cells[4];//4
                                        try {
                                            int num = Integer.parseInt(cells[5]);
                                            Saldo = cells[5];
                                            
                                        }
                                        catch (NumberFormatException e) {
                                            Saldo   = "0";
                                        }
                                        
                                    }
//                                    
//                                    PosPesoCargo = Cargo.indexOf("$");
//                                    PosPesoAbono = Abono.indexOf("$");
//                                    PosPesoSaldo = Saldo.indexOf("$");
//                                    
//                                    if(PosPesoCargo>-1)
//                                        Cargo = Cargo.substring(PosPesoCargo+1);
//                                    if(PosPesoAbono>-1)
//                                        Abono = Abono.substring(PosPesoAbono+1);
//                                    if(PosPesoSaldo>-1)
//                                        Saldo = Saldo.substring(PosPesoSaldo+1);
                                    
                                    Cargo = fmMain.SetGuardar(Cargo);
                                    Abono = fmMain.SetGuardar(Abono);
                                    Saldo = fmMain.SetGuardar(Saldo);
                                    
                            if(Detalle.length()>200)
                                Detalle = Detalle.substring(0, 199);
                            if(Cargo.isEmpty())
                                Cargo = "$ 0";
                            if(Abono.isEmpty())
                                Abono = "$ 0";
                        Model.addRow(new Object[]{Fecha,Oficina,Numero,Detalle,Cargo,Abono,Saldo});
                } 
            } catch (Exception e) {
                    System.out.println(e.getMessage());
            }
         btGuardar.setVisible(true);
        btCancelar.setVisible(true);
        btNuevaCartola.setVisible(false);
        cbBanco.setEnabled(false);
        cbCuenta.setEnabled(false);        
        }
       
    }//GEN-LAST:event_btNuevaCartolaActionPerformed

    private void chbFormatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbFormatoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chbFormatoActionPerformed

    private void cbBancoIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBancoIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBancoIdActionPerformed

       
//    private String Funcion(int Suma, int Indice, int Monto ){
//        String Retorno="";
//        for (int i = Indice; i < Tabla.getRowCount(); i++) {
//            if((Integer) Tabla.getValueAt(i, 0) > Monto)
//                break;
//            
//            else if( (Integer) Tabla.getValueAt(i, 0)  + Suma == Monto){
//                return Tabla.getValueAt(i, 0).toString().trim();
//            }
//            else if((Integer) Tabla.getValueAt(i, 0) < Monto){
//                Retorno=Funcion(Suma + (Integer) Tabla.getValueAt(i, 0),i+1,Monto);
//                if(!Retorno.isEmpty())
//                    return Tabla.getValueAt(i, 0).toString().trim() + Retorno;
//            }
//            
//                
//        }
//        return "";
//    }
        
    private String GetNuevasFechas(){
        String Fechas="";
        String UltimaFecha="";
                
        for (int i = 0; i < Grilla.getRowCount() ; i++) {
            if(!UltimaFecha.equals(Grilla.getValueAt(i, 0).toString().trim())){
                UltimaFecha = Grilla.getValueAt(i, 0).toString().trim();
                Fechas = Fechas + "'" + UltimaFecha + "',";
            }
        }
        Fechas = Fechas.substring(0, Fechas.length()-1);
        
        return Fechas;
        
    }
    
    private boolean Importar(File fileName){
        List cellData = new ArrayList();
        try {
            FileInputStream fileInputStream = new FileInputStream(fileName);
            XSSFWorkbook workBook = new XSSFWorkbook(fileInputStream);
            XSSFSheet hssfSheet = workBook.getSheetAt(0);
            Iterator rowIterator = hssfSheet.rowIterator();
            while(rowIterator.hasNext()){
                XSSFRow hssfRow = (XSSFRow) rowIterator.next();
                Iterator iterator = hssfRow.cellIterator();
                List cellTemp = new ArrayList();
                
                while(iterator.hasNext()){
                    XSSFCell hssfCell = (XSSFCell) iterator.next();
                    cellTemp.add(hssfCell);
                }
                cellData.add(cellTemp);
            }
            obtener(cellData);
            return true;
        } catch (Exception e) {
            return false;
        }
    }
    private void obtener(List cellDataList){
        DefaultTableModel Model = (DefaultTableModel) Grilla.getModel();
        
        while(Model.getRowCount()>0)
              Model.removeRow(0);
        
        for(int i=1; i< cellDataList.size();i++){
            List cellTempList = (List) cellDataList.get(i);
            Object[] Obj = new Object[cellTempList.size()+1];
            Obj[0] = getFecha();
            for (int j = 0; j < cellTempList.size(); j++) {
                XSSFCell hssfCell = (XSSFCell) cellTempList.get(j);
                String stringCellValue = hssfCell.toString();
                    Obj[j+1] = stringCellValue;
                System.out.println(stringCellValue + " ");
            }
            Model.addRow(Obj);
        }
        System.out.println("\n");
    }
    private String getFecha() {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
//            return MesFecha.getSelectionDate().toString();
            return (sdf.format(MesFecha.getSelectionDate()));
        } catch (Exception e) {
            return "x";
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla;
    private org.jdesktop.swingx.JXMonthView MesFecha;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btGuardar;
    private javax.swing.JButton btNuevaCartola;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbBanco;
    private javax.swing.JComboBox cbBancoId;
    private javax.swing.JComboBox cbCuenta;
    private javax.swing.JComboBox cbCuentaId;
    private javax.swing.JCheckBox chbFormato;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
